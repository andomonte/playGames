{"ast":null,"code":"import aws from 'aws-sdk';\nimport crypto from 'crypto';\nimport { promisify } from 'util';\nconst randomBytes = promisify(crypto.randomBytes);\nconst region = process.env.AWSREGION;\nconst bucketName = 'videosministeriomissoes';\nconst accessKeyId = process.env.AWSACCESS_KEY;\nconst secretAccessKey = process.env.AWSSECRET_KEY;\naws.config.update({\n  secretAccessKey: process.env.AWSSECRET_KEY,\n  accessKeyId: process.env.AWSACCESS_KEY,\n  region: process.env.AWSREGION\n});\nconst s3 = new aws.S3({\n  region,\n  accessKeyId,\n  secretAccessKey,\n  signatureVersion: 'v4'\n});\nexport async function uploadVideosS3() {\n  const rawBytes = await randomBytes(16);\n  const imageName = rawBytes.toString('hex');\n  const params = {\n    Bucket: bucketName,\n    Key: imageName\n  };\n  console.log('chegou aqui sem erros');\n  const uploadURL = await s3.getSignedUrlPromise('putObject', params);\n  return uploadURL;\n}\nexport default uploadVideosS3;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/uploadVideosS3.js"],"names":["aws","crypto","promisify","randomBytes","region","process","env","AWSREGION","bucketName","accessKeyId","AWSACCESS_KEY","secretAccessKey","AWSSECRET_KEY","config","update","s3","S3","signatureVersion","uploadVideosS3","rawBytes","imageName","toString","params","Bucket","Key","console","log","uploadURL","getSignedUrlPromise"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,MAA1B;AAEA,MAAMC,WAAW,GAAGD,SAAS,CAACD,MAAM,CAACE,WAAR,CAA7B;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA3B;AACA,MAAMC,UAAU,GAAG,yBAAnB;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAACC,GAAR,CAAYI,aAAhC;AACA,MAAMC,eAAe,GAAGN,OAAO,CAACC,GAAR,CAAYM,aAApC;AACAZ,GAAG,CAACa,MAAJ,CAAWC,MAAX,CAAkB;AAChBH,EAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM,aADb;AAEhBH,EAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,aAFT;AAGhBN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHJ,CAAlB;AAMA,MAAMQ,EAAE,GAAG,IAAIf,GAAG,CAACgB,EAAR,CAAW;AACpBZ,EAAAA,MADoB;AAEpBK,EAAAA,WAFoB;AAGpBE,EAAAA,eAHoB;AAIpBM,EAAAA,gBAAgB,EAAE;AAJE,CAAX,CAAX;AAOA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAAC,EAAD,CAAlC;AACA,QAAMiB,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkB,KAAlB,CAAlB;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEf,UADK;AAEbgB,IAAAA,GAAG,EAAEJ;AAFQ,GAAf;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMC,SAAS,GAAG,MAAMZ,EAAE,CAACa,mBAAH,CAAuB,WAAvB,EAAoCN,MAApC,CAAxB;AAEA,SAAOK,SAAP;AACD;AAED,eAAeT,cAAf","sourcesContent":["import aws from 'aws-sdk';\r\nimport crypto from 'crypto';\r\nimport { promisify } from 'util';\r\n\r\nconst randomBytes = promisify(crypto.randomBytes);\r\n\r\nconst region = process.env.AWSREGION;\r\nconst bucketName = 'videosministeriomissoes';\r\nconst accessKeyId = process.env.AWSACCESS_KEY;\r\nconst secretAccessKey = process.env.AWSSECRET_KEY;\r\naws.config.update({\r\n  secretAccessKey: process.env.AWSSECRET_KEY,\r\n  accessKeyId: process.env.AWSACCESS_KEY,\r\n  region: process.env.AWSREGION,\r\n});\r\n\r\nconst s3 = new aws.S3({\r\n  region,\r\n  accessKeyId,\r\n  secretAccessKey,\r\n  signatureVersion: 'v4',\r\n});\r\n\r\nexport async function uploadVideosS3() {\r\n  const rawBytes = await randomBytes(16);\r\n  const imageName = rawBytes.toString('hex');\r\n\r\n  const params = {\r\n    Bucket: bucketName,\r\n    Key: imageName,\r\n  };\r\n  console.log('chegou aqui sem erros');\r\n  const uploadURL = await s3.getSignedUrlPromise('putObject', params);\r\n\r\n  return uploadURL;\r\n}\r\n\r\nexport default uploadVideosS3;\r\n"]},"metadata":{},"sourceType":"module"}