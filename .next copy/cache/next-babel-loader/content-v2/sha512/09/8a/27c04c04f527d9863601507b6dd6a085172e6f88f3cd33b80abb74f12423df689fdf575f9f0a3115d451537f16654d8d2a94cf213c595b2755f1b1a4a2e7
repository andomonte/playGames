{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\uploadFile.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nvar baseStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  transition: 'border .3s ease-in-out'\n};\nvar activeStyle = {\n  borderColor: '#2196f3'\n};\nvar acceptStyle = {\n  borderColor: '#00e676'\n};\nvar rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nfunction DropzoneComponent() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var onDrop = useCallback(function (acceptedFiles) {\n    setFiles(acceptedFiles.map(function (file) {\n      return Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      });\n    }));\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop,\n    accept: 'image/jpeg, image/png'\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n\n  var style = useMemo(function () {\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, baseStyle), isDragActive ? activeStyle : {}), isDragAccept ? acceptStyle : {}), isDragReject ? rejectStyle : {});\n  }, [isDragActive, isDragReject, isDragAccept]);\n  var thumbs = files.map(function (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        alt: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, _this)\n    }, file.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, _this);\n  }); // clean up\n\n  useEffect(function () {\n    return function () {\n      files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n\n  var DragMessage = function DragMessage(a, b) {\n    if (!a) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, _this);\n    }\n\n    if (b) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    children: [function () {\n      return /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n        isDragActive: isDragActive,\n        isDragReject: isDragReject,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, _this), DragMessage(isDragActive, isDragReject)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this);\n    }, /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropzoneComponent, \"emNj+r6Qb66RaBH1WXB+4IThukQ=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DropzoneComponent;\nexport default DropzoneComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneComponent\");","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/uploadFile.js"],"names":["React","useCallback","useEffect","useMemo","useState","Dropzone","useDropzone","baseStyle","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","transition","activeStyle","acceptStyle","rejectStyle","DropzoneComponent","files","setFiles","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","thumbs","name","forEach","revokeObjectURL","DragMessage","a","b"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport Dropzone, { useDropzone } from 'react-dropzone';\r\n\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nfunction DropzoneComponent() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        }),\r\n      ),\r\n    );\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/jpeg, image/png',\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <img src={file.preview} alt={file.name} />\r\n    </div>\r\n  ));\r\n\r\n  // clean up\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files],\r\n  );\r\n  const DragMessage = (a, b) => {\r\n    if (!a) {\r\n      return <UploadMessage>Arraste arquivos aqui..</UploadMessage>;\r\n    }\r\n    if (b) {\r\n      return (\r\n        <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n      );\r\n    }\r\n    return (\r\n      <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n    );\r\n  };\r\n  return (\r\n    <Dropzone>\r\n      {() => (\r\n        <DropContainer\r\n          {...getRootProps()}\r\n          isDragActive={isDragActive}\r\n          isDragReject={isDragReject}\r\n        >\r\n          <input {...getInputProps()} />\r\n          {DragMessage(isDragActive, isDragReject)}\r\n        </DropContainer>\r\n      )}\r\n      <aside>{thumbs}</aside>\r\n    </Dropzone>\r\n  );\r\n}\r\n\r\nexport default DropzoneComponent;\r\n"]},"metadata":{},"sourceType":"module"}