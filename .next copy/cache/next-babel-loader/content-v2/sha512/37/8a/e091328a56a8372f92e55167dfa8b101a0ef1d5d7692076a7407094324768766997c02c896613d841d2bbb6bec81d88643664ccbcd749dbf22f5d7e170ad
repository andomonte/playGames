{"ast":null,"code":"import _slicedToArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nexport default function Login() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loginError = _useState6[0],\n      setLoginError = _useState6[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    // Getting the error details from URL\n    if (router.query.error) {\n      setLoginError(router.query.error); // Shown below the input field in my example\n\n      setEmail(router.query.email); // To prefill the email after redirect\n    }\n  }, [router]);\n}\n\n_s(Login, \"AN9akSGv4uA5ws9iBKP/8DTQRGY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/login.js"],"names":["useRouter","Login","useState","email","setEmail","password","setPassword","loginError","setLoginError","router","useEffect","query","error"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,KAAT,GAAkB;AAAA;;AAAA,kBACLC,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,MACxBC,KADwB;AAAA,MACjBC,QADiB;;AAAA,mBAECF,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAExBG,QAFwB;AAAA,MAEdC,WAFc;;AAAA,mBAGKJ,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,MAGxBK,UAHwB;AAAA,MAGZC,aAHY;;AAI/B,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AAEAU,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAID,MAAM,CAACE,KAAP,CAAaC,KAAjB,EAAwB;AACtBJ,MAAAA,aAAa,CAACC,MAAM,CAACE,KAAP,CAAaC,KAAd,CAAb,CADsB,CACY;;AAClCR,MAAAA,QAAQ,CAACK,MAAM,CAACE,KAAP,CAAaR,KAAd,CAAR,CAFsB,CAEO;AAC9B;AACF,GANQ,EAMN,CAACM,MAAD,CANM,CAAT;AAOD;;GAbuBR,K;UAIPD,S;;;KAJOC,K","sourcesContent":["import { useRouter } from 'next/router'\n\nexport default function Login () {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginError, setLoginError] = useState('')\n  const router = useRouter()\n\n  useEffect(() => {\n    // Getting the error details from URL\n    if (router.query.error) {\n      setLoginError(router.query.error) // Shown below the input field in my example\n      setEmail(router.query.email) // To prefill the email after redirect\n    }\n  }, [router])\n}"]},"metadata":{},"sourceType":"module"}