{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\eventos\\\\uploadFile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { signOut } from 'next-auth/client';\n\nimport { Box, Button, Modal } from '@material-ui/core';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport styled, { css } from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport { Container, FileInfo, Preview } from './styles';\nimport 'react-circular-progressbar/dist/styles.css'; // import FileList from '../../fileList/index';\n\nconst dragActive = css`\n  border-color: #76ff03;\n`;\nconst dragReject = css`\n  border-color: #ff5722;\n`;\nconst DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border: 3px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n\n  ${props => props.isDragActive && dragActive}\n  ${props => props.isDragReject && dragReject}\n`;\nconst UploadMessage = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: #000;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;\nconst useStyles = makeStyles(() => ({\n  boxUp: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  boxInterno: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '3px',\n    background: '#fff',\n    borderRadius: '4px',\n    padding: '20px'\n  },\n  qtyLetras: {\n    maxWidth: '150px',\n    // Limite maximo do texto\n    whitespace: 'nowrap',\n    // Removendo quebra de linha\n    overflow: 'hidden',\n    // Removendo a barra de rolagem\n    textoverflow: 'ellipsis' // Adicionando \"...\" ao final do texto\n\n  },\n  dragMessage: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '30px',\n    background: '#bcaaa4',\n    borderRadius: '4px',\n    padding: '20px'\n  }\n}));\nconst classes = useStyles();\nconst [open, setOpen] = React.useState(true);\nlet uploadedFiles = [];\nconst [fileObjects, setFileObjects] = React.useState([]);\n\nconst FileList = ({\n  files\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [console.log('filesList:', files), /*#__PURE__*/_jsxDEV(Container, {\n    children: files.map(uploadedFile => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(FileInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Preview, {\n          src: uploadedFile.preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.qtyLetras,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: uploadedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [uploadedFile.readableSize, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                console.log(uploadedFile.id);\n              },\n              children: \"Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!uploadedFile.uploaded && !uploadedFile.error && /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          styles: {\n            root: {\n              width: 30\n            },\n            path: {\n              stroke: '#7159c1'\n            }\n          },\n          strokeWidth: 10 // percentage={20} // {uploadedFile.progress}\n          ,\n          value: uploadedFile.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), uploadedFile.url && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(MdLink, {\n            styles: {\n              marginRight: 8\n            },\n            size: 24,\n            color: \"#222\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), uploadedFile.uploaded && /*#__PURE__*/_jsxDEV(MdCheckCircle, {\n          size: 24,\n          color: \"#78e5d5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), uploadedFile.error && /*#__PURE__*/_jsxDEV(MdError, {\n          size: 24,\n          color: \"#e57878\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, uniqueId(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n\nconst handleClose = () => {\n  setOpen(false);\n};\n\nconst handleOpen = () => {\n  setOpen(true);\n};\n\nfunction MyDropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    console.log('acceptedFiles', acceptedFiles);\n    setFileObjects([].concat(fileObjects, acceptedFiles));\n  });\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n\n  const fileSend = () => {\n    uploadedFiles = fileObjects.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n  };\n\n  const DragMessage = (a, b) => {\n    if (!a) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(ImageSearchIcon, {\n            fontSize: \"large\",\n            style: {\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), \"Pressione Aqui para Inseir Imagens\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (b) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      children: () => /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n        isDragActive: isDragActive,\n        isDragReject: isDragReject,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), DragMessage(isDragActive, isDragReject)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), fileSend(), console.log('->', uploadedFiles), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(FileList, {\n      files: uploadedFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\",\n        onClick: handleClose,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction TelaEventos() {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.boxUp,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.boxInterno,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MyDropzone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/eventos/uploadFile.js"],"names":["React","useCallback","makeStyles","Box","Button","Modal","Dropzone","useDropzone","styled","css","uniqueId","filesize","CircularProgressbar","MdCheckCircle","MdError","MdLink","ImageSearchIcon","Container","FileInfo","Preview","dragActive","dragReject","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","useStyles","boxUp","display","alignItems","justifyContent","height","boxInterno","width","maxWidth","margin","background","borderRadius","padding","qtyLetras","whitespace","overflow","textoverflow","dragMessage","classes","open","setOpen","useState","uploadedFiles","fileObjects","setFileObjects","FileList","files","console","log","map","uploadedFile","preview","name","readableSize","id","uploaded","error","root","path","stroke","progress","url","marginRight","handleClose","handleOpen","MyDropzone","onDrop","acceptedFiles","concat","getRootProps","getInputProps","accept","fileSend","file","size","URL","createObjectURL","DragMessage","a","b","color","length","TelaEventos"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { signOut } from 'next-auth/client';\r\nimport { Box, Button, Modal } from '@material-ui/core';\r\nimport Dropzone, { useDropzone } from 'react-dropzone';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport { Container, FileInfo, Preview } from './styles';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n// import FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: #000;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\nconst useStyles = makeStyles(() => ({\r\n  boxUp: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '3px',\r\n    background: '#fff',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  qtyLetras: {\r\n    maxWidth: '150px', // Limite maximo do texto\r\n    whitespace: 'nowrap', // Removendo quebra de linha\r\n    overflow: 'hidden', // Removendo a barra de rolagem\r\n    textoverflow: 'ellipsis', // Adicionando \"...\" ao final do texto\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\n\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(true);\r\nlet uploadedFiles = [];\r\nconst [fileObjects, setFileObjects] = React.useState([]);\r\nconst FileList = ({ files }) => (\r\n  <div>\r\n    {console.log('filesList:', files)}\r\n    <Container>\r\n      {files.map((uploadedFile) => (\r\n        <li key={uniqueId()}>\r\n          <FileInfo>\r\n            <Preview src={uploadedFile.preview} />\r\n            <Box className={classes.qtyLetras}>\r\n              <strong>{uploadedFile.name}</strong>\r\n              <span>\r\n                {uploadedFile.readableSize}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    console.log(uploadedFile.id);\r\n                  }}\r\n                >\r\n                  Excluir\r\n                </button>\r\n              </span>\r\n            </Box>\r\n          </FileInfo>\r\n          <div>\r\n            {!uploadedFile.uploaded && !uploadedFile.error && (\r\n              <CircularProgressbar\r\n                styles={{\r\n                  root: { width: 30 },\r\n                  path: { stroke: '#7159c1' },\r\n                }}\r\n                strokeWidth={10}\r\n                // percentage={20} // {uploadedFile.progress}\r\n\r\n                value={uploadedFile.progress}\r\n              />\r\n            )}\r\n            {uploadedFile.url && (\r\n              <a\r\n                href=\"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <MdLink styles={{ marginRight: 8 }} size={24} color=\"#222\" />\r\n              </a>\r\n            )}\r\n            {uploadedFile.uploaded && (\r\n              <MdCheckCircle size={24} color=\"#78e5d5\" />\r\n            )}\r\n            {uploadedFile.error && <MdError size={24} color=\"#e57878\" />}\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\nconst handleOpen = () => {\r\n  setOpen(true);\r\n};\r\n\r\nfunction MyDropzone() {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    console.log('acceptedFiles', acceptedFiles);\r\n    setFileObjects([].concat(fileObjects, acceptedFiles));\r\n  });\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    onDrop,\r\n\r\n    accept: 'image/*',\r\n  });\r\n\r\n  const fileSend = () => {\r\n    uploadedFiles = fileObjects.map((file) => ({\r\n      file,\r\n      id: uniqueId(),\r\n      name: file.name,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n  };\r\n\r\n  const DragMessage = (a, b) => {\r\n    if (!a) {\r\n      return (\r\n        <UploadMessage>\r\n          <Button>\r\n            <ImageSearchIcon fontSize=\"large\" style={{ color: 'black' }} />\r\n          </Button>\r\n          Pressione Aqui para Inseir Imagens\r\n        </UploadMessage>\r\n      );\r\n    }\r\n    if (b) {\r\n      return (\r\n        <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n      );\r\n    }\r\n    return (\r\n      <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dropzone>\r\n        {() => (\r\n          <DropContainer\r\n            {...getRootProps()}\r\n            isDragActive={isDragActive}\r\n            isDragReject={isDragReject}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {DragMessage(isDragActive, isDragReject)}\r\n          </DropContainer>\r\n        )}\r\n      </Dropzone>\r\n      {fileSend()}\r\n      {console.log('->', uploadedFiles)}\r\n      {uploadedFiles.length > 0 && <FileList files={uploadedFiles} />}\r\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          onClick={handleClose}\r\n        >\r\n          Voltar\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nfunction TelaEventos() {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <Box className={classes.boxUp}>\r\n        <Box className={classes.boxInterno}>\r\n          <div>\r\n            <div>\r\n              <MyDropzone />\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}