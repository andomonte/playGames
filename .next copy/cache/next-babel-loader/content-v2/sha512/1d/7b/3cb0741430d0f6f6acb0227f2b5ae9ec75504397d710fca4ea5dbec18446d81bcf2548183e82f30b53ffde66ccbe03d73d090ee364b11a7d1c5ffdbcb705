{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\graficos.js\";\nimport React from 'react';\nimport { Line } from '@reactchartjs/react-chart.js';\nimport { signOut } from 'next-auth/client';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nconst fetcher = url => axios.get(url).then(res => res.data);\n\nfunction Graficos({\n  item,\n  secao,\n  Data\n}) {\n  const dadosUser = item.filter(val => val.email === secao.user.email);\n\n  if (dadosUser.length === 0) {\n    signOut({\n      callbackUrl: `${window.location.origin}`\n    });\n  }\n\n  const mes = String(Number(Data.slice(3, 5)));\n  const ano = Data.slice(6, 10); //  const [session] = useSession();\n\n  const url = `${window.location.origin}/api/consultaDados/${item[0].codigoIgreja}/${mes}/${ano}`;\n  let membros = [];\n  const {\n    data\n  } = useSWR(url, fetcher);\n\n  for (const i = 0; i < data.length; i++) {\n    membros[i] = data[i];\n  }\n\n  if (data[0].semana === '1') {\n    membros[0] = data[0].semana;\n    membros[1] = data[1].semana;\n    membros[2] = data[2].semana;\n    membros[3] = data[3].semana;\n    membros[4] = data[4].semana;\n  }\n\n  membros = [data.semana, 11, 14, 12];\n  const crianças = [3, 6, 10, 5];\n  const dataGrafic = {\n    labels: ['Semana-1', 'Semana-2', 'Semana-3', 'Semana-4'],\n    datasets: [{\n      label: 'Adultos',\n      data: membros,\n      fill: false,\n      backgroundColor: 'rgb(535, 09, 025)',\n      borderColor: 'rgba(255, 99, 132, 0.2)',\n      yAxisID: 'y-axis-1'\n    }, {\n      label: 'Visitantes',\n      data: crianças,\n      fill: false,\n      backgroundColor: 'rgb(54, 162, 235)',\n      borderColor: 'rgba(54, 162, 235, 0.2)',\n      yAxisID: 'y-axis-1'\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        type: 'linear',\n        display: true,\n        position: 'left',\n        id: 'y-axis-1'\n      }, {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        id: 'y-axis-2',\n        gridLines: {\n          drawOnArea: false\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: dataGrafic,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default Graficos;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/graficos.js"],"names":["React","Line","signOut","useSWR","axios","fetcher","url","get","then","res","data","Graficos","item","secao","Data","dadosUser","filter","val","email","user","length","callbackUrl","window","location","origin","mes","String","Number","slice","ano","codigoIgreja","membros","i","semana","crianças","dataGrafic","labels","datasets","label","fill","backgroundColor","borderColor","yAxisID","options","scales","yAxes","type","display","position","id","gridLines","drawOnArea"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Line } from '@reactchartjs/react-chart.js';\r\nimport { signOut } from 'next-auth/client';\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\n\r\nconst fetcher = (url) => axios.get(url).then((res) => res.data);\r\nfunction Graficos({ item, secao, Data }) {\r\n  const dadosUser = item.filter((val) => val.email === secao.user.email);\r\n  if (dadosUser.length === 0) {\r\n    signOut({\r\n      callbackUrl: `${window.location.origin}`,\r\n    });\r\n  }\r\n  const mes = String(Number(Data.slice(3, 5)));\r\n  const ano = Data.slice(6, 10);\r\n  //  const [session] = useSession();\r\n  const url = `${window.location.origin}/api/consultaDados/${item[0].codigoIgreja}/${mes}/${ano}`;\r\n  let membros = [];\r\n  const { data } = useSWR(url, fetcher);\r\n  for (const i = 0; i < data.length; i++) {\r\n    membros[i] = data[i];\r\n  }\r\n\r\n  if (data[0].semana === '1') {\r\n    membros[0] = data[0].semana;\r\n    membros[1] = data[1].semana;\r\n    membros[2] = data[2].semana;\r\n    membros[3] = data[3].semana;\r\n    membros[4] = data[4].semana;\r\n  }\r\n  membros = [data.semana, 11, 14, 12];\r\n  const crianças = [3, 6, 10, 5];\r\n\r\n  const dataGrafic = {\r\n    labels: ['Semana-1', 'Semana-2', 'Semana-3', 'Semana-4'],\r\n    datasets: [\r\n      {\r\n        label: 'Adultos',\r\n        data: membros,\r\n        fill: false,\r\n        backgroundColor: 'rgb(535, 09, 025)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        yAxisID: 'y-axis-1',\r\n      },\r\n      {\r\n        label: 'Visitantes',\r\n        data: crianças,\r\n        fill: false,\r\n        backgroundColor: 'rgb(54, 162, 235)',\r\n        borderColor: 'rgba(54, 162, 235, 0.2)',\r\n        yAxisID: 'y-axis-1',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-1',\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-2',\r\n          gridLines: {\r\n            drawOnArea: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Line data={dataGrafic} options={options} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graficos;\r\n"]},"metadata":{},"sourceType":"module"}