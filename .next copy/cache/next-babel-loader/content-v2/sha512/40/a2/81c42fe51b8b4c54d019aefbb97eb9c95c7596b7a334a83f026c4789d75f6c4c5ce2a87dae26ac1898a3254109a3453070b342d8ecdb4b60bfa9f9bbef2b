{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport prisma from 'src/lib/prisma'; // POST /api/user\n// Required fields in body: name, email\n\nexport default async function handle(req, res) {\n  const postId = req.query.id;\n  console.log(postId);\n  const result = await prisma.ministrosIDPBs.update({\n    where: {\n      id: Number(postId)\n    },\n    data: _objectSpread({}, req.body)\n  }).finally(async () => {\n    await prisma.$disconnect();\n  });\n  console.log(result);\n  res.json(result);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/api/updateMinistros/[id].js"],"names":["prisma","handle","req","res","postId","query","id","console","log","result","ministrosIDPBs","update","where","Number","data","body","finally","$disconnect","json"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,gBAAnB,C,CAEA;AACA;;AACA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAUC,EAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,QAAMK,MAAM,GAAG,MAAMT,MAAM,CAACU,cAAP,CAClBC,MADkB,CACX;AACNC,IAAAA,KAAK,EAAE;AAAEN,MAAAA,EAAE,EAAEO,MAAM,CAACT,MAAD;AAAZ,KADD;AAENU,IAAAA,IAAI,oBACCZ,GAAG,CAACa,IADL;AAFE,GADW,EAOlBC,OAPkB,CAOV,YAAY;AACnB,UAAMhB,MAAM,CAACiB,WAAP,EAAN;AACD,GATkB,CAArB;AAUAV,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAN,EAAAA,GAAG,CAACe,IAAJ,CAAST,MAAT;AACD","sourcesContent":["import prisma from 'src/lib/prisma';\r\n\r\n// POST /api/user\r\n// Required fields in body: name, email\r\nexport default async function handle(req, res) {\r\n  const postId = req.query.id;\r\n  console.log(postId);\r\n  const result = await prisma.ministrosIDPBs\r\n    .update({\r\n      where: { id: Number(postId) },\r\n      data: {\r\n        ...req.body,\r\n      },\r\n    })\r\n    .finally(async () => {\r\n      await prisma.$disconnect();\r\n    });\r\n  console.log(result);\r\n  res.json(result);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}