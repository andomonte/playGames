{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\Layout\\\\googleMap.js\";\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -3.523\n};\nconst libraries = ['places'];\n\nfunction googleMap() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.GOOGLE_CLIENT_SECRET,\n    libraries\n  });\n  if (loadError) return 'erro no carregamento do mapa';\n  if (!isLoaded) return 'Louding Map';\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\nexport default /*#__PURE__*/React.memo(googleMap);","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/Layout/googleMap.js"],"names":["React","GoogleMap","useJsApiLoader","useLoadScript","Marker","InfoWindow","containerStyle","width","height","center","lat","lng","libraries","googleMap","isLoaded","loadError","id","googleMapsApiKey","process","env","GOOGLE_CLIENT_SECRET","map","setMap","useState","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,wBANP;AAQA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;AAIA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;;AACA,SAASC,SAAT,GAAqB;AACnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BZ,aAAa,CAAC;AAC5Ca,IAAAA,EAAE,EAAE,mBADwC;AAE5CC,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBAFc;AAG5CR,IAAAA;AAH4C,GAAD,CAA7C;AAKA,MAAIG,SAAJ,EAAe,OAAO,8BAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,aAAP;AAEf,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBtB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAAtB;AAEA,QAAMC,MAAM,GAAGxB,KAAK,CAACyB,WAAN,CAAmBJ,GAAD,IAAS;AACxC,UAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAT,IAAAA,GAAG,CAACU,SAAJ,CAAcL,MAAd;AACAJ,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMW,SAAS,GAAGhC,KAAK,CAACyB,WAAN,CAAmBJ,GAAD,IAAS;AAC3CC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOR,QAAQ,gBACb,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAER,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEe,MAJV;AAKE,IAAA,SAAS,EAAEQ,SALb;AAAA,2BAQE;AARF;AAAA;AAAA;AAAA;AAAA,UADa,gBAYb,qCAZF;AAcD;;AAED,4BAAehC,KAAK,CAACiC,IAAN,CAAWpB,SAAX,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '400px',\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -3.523,\r\n};\r\nconst libraries = ['places'];\r\nfunction googleMap() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.GOOGLE_CLIENT_SECRET,\r\n    libraries,\r\n  });\r\n  if (loadError) return 'erro no carregamento do mapa';\r\n  if (!isLoaded) return 'Louding Map';\r\n\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback((map) => {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback((map) => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      {/* Child components, such as markers, info windows, etc. */}\r\n      <></>\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(googleMap);\r\n"]},"metadata":{},"sourceType":"module"}