{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\eventos\\\\uploadFile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { signOut } from 'next-auth/client';\n\nimport { Box, Button, Modal } from '@material-ui/core';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport styled, { css } from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport { Container, FileInfo, Preview } from './styles';\nimport 'react-circular-progressbar/dist/styles.css'; // import FileList from '../../fileList/index';\n\nconst dragActive = css`\n  border-color: #76ff03;\n`;\nconst dragReject = css`\n  border-color: #ff5722;\n`;\nconst messageColors = {\n  default: '#fff',\n  error: '#ff5722',\n  success: '#76ff03'\n};\nconst DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border: 3px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n\n  ${props => props.isDragActive && dragActive}\n  ${props => props.isDragReject && dragReject}\n`;\nconst UploadMessage = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: #000;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  boxInterno: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '3px',\n    background: '#fff',\n    borderRadius: '4px',\n    padding: '20px'\n  },\n  dragMessage: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '30px',\n    background: '#bcaaa4',\n    borderRadius: '4px',\n    padding: '20px'\n  }\n}));\nexport default function TelaEventos() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  let uploadedFiles = [];\n  const [fileObjects, setFileObjects] = React.useState([]);\n\n  const FileList = ({\n    files\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('filesList:', files), /*#__PURE__*/_jsxDEV(Container, {\n      children: files.map(uploadedFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FileInfo, {\n          children: [/*#__PURE__*/_jsxDEV(Preview, {\n            src: uploadedFile.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: uploadedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [uploadedFile.readableSize, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  console.log(uploadedFile.id);\n                },\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!uploadedFile.uploaded && !uploadedFile.error && /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            styles: {\n              root: {\n                width: 30\n              },\n              path: {\n                stroke: '#7159c1'\n              }\n            },\n            strokeWidth: 10 // percentage={20} // {uploadedFile.progress}\n            ,\n            value: uploadedFile.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), uploadedFile.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(MdLink, {\n              styles: {\n                marginRight: 8\n              },\n              size: 24,\n              color: \"#222\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), uploadedFile.uploaded && /*#__PURE__*/_jsxDEV(MdCheckCircle, {\n            size: 24,\n            color: \"#78e5d5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), uploadedFile.error && /*#__PURE__*/_jsxDEV(MdError, {\n            size: 24,\n            color: \"#e57878\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n\n  function MyDropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n      console.log('acceptedFiles', acceptedFiles);\n      setFileObjects([].concat(fileObjects, acceptedFiles));\n    });\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    } = useDropzone({\n      onDrop,\n      accept: 'image/*'\n    });\n\n    const fileSend = () => {\n      uploadedFiles = fileObjects.map(file => ({\n        file,\n        id: uniqueId(),\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: URL.createObjectURL(file),\n        progress: 0,\n        uploaded: false,\n        error: false,\n        url: null\n      }));\n    };\n\n    const DragMessage = (a, b) => {\n      if (!a) {\n        return /*#__PURE__*/_jsxDEV(UploadMessage, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: [/*#__PURE__*/_jsxDEV(ImageSearchIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), \"Inseir Arquivo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (b) {\n        return /*#__PURE__*/_jsxDEV(UploadMessage, {\n          type: \"error\",\n          children: \"Arquivo n\\xE3o suportado..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"success\",\n        children: \"Solte os arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        children: () => /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n          isDragActive: isDragActive,\n          isDragReject: isDragReject,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), DragMessage(isDragActive, isDragReject)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), fileSend(), console.log('->', uploadedFiles), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(FileList, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\" //        className={classes.buttonCancel}\n        ,\n        mt: 3 //  startIcon={<SaveIcon />}\n        ,\n        children: uploadedFiles.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.boxInterno,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MyDropzone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/eventos/uploadFile.js"],"names":["React","useCallback","makeStyles","Box","Button","Modal","Dropzone","useDropzone","styled","css","uniqueId","filesize","CircularProgressbar","MdCheckCircle","MdError","MdLink","ImageSearchIcon","Container","FileInfo","Preview","dragActive","dragReject","messageColors","default","error","success","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","useStyles","box","display","alignItems","justifyContent","height","boxInterno","width","maxWidth","margin","background","borderRadius","padding","dragMessage","TelaEventos","classes","open","setOpen","useState","uploadedFiles","fileObjects","setFileObjects","FileList","files","console","log","map","uploadedFile","preview","name","readableSize","id","uploaded","root","path","stroke","progress","url","marginRight","MyDropzone","onDrop","acceptedFiles","concat","getRootProps","getInputProps","accept","fileSend","file","size","URL","createObjectURL","DragMessage","a","b","length","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { signOut } from 'next-auth/client';\r\nimport { Box, Button, Modal } from '@material-ui/core';\r\nimport Dropzone, { useDropzone } from 'react-dropzone';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport { Container, FileInfo, Preview } from './styles';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n// import FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\nconst messageColors = {\r\n  default: '#fff',\r\n  error: '#ff5722',\r\n  success: '#76ff03',\r\n};\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: #000;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '3px',\r\n    background: '#fff',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nexport default function TelaEventos() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  let uploadedFiles = [];\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const FileList = ({ files }) => (\r\n    <div>\r\n      {console.log('filesList:', files)}\r\n      <Container>\r\n        {files.map((uploadedFile) => (\r\n          <li key={uniqueId()}>\r\n            <FileInfo>\r\n              <Preview src={uploadedFile.preview} />\r\n              <div>\r\n                <strong>{uploadedFile.name}</strong>\r\n                <span>\r\n                  {uploadedFile.readableSize}\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      console.log(uploadedFile.id);\r\n                    }}\r\n                  >\r\n                    Excluir\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </FileInfo>\r\n            <div>\r\n              {!uploadedFile.uploaded && !uploadedFile.error && (\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: 30 },\r\n                    path: { stroke: '#7159c1' },\r\n                  }}\r\n                  strokeWidth={10}\r\n                  // percentage={20} // {uploadedFile.progress}\r\n\r\n                  value={uploadedFile.progress}\r\n                />\r\n              )}\r\n              {uploadedFile.url && (\r\n                <a\r\n                  href=\"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <MdLink styles={{ marginRight: 8 }} size={24} color=\"#222\" />\r\n                </a>\r\n              )}\r\n              {uploadedFile.uploaded && (\r\n                <MdCheckCircle size={24} color=\"#78e5d5\" />\r\n              )}\r\n              {uploadedFile.error && <MdError size={24} color=\"#e57878\" />}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n  function MyDropzone() {\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n      console.log('acceptedFiles', acceptedFiles);\r\n      setFileObjects([].concat(fileObjects, acceptedFiles));\r\n    });\r\n\r\n    const {\r\n      getRootProps,\r\n      getInputProps,\r\n      isDragActive,\r\n      isDragReject,\r\n    } = useDropzone({\r\n      onDrop,\r\n\r\n      accept: 'image/*',\r\n    });\r\n\r\n    const fileSend = () => {\r\n      uploadedFiles = fileObjects.map((file) => ({\r\n        file,\r\n        id: uniqueId(),\r\n        name: file.name,\r\n        readableSize: filesize(file.size),\r\n        preview: URL.createObjectURL(file),\r\n        progress: 0,\r\n        uploaded: false,\r\n        error: false,\r\n        url: null,\r\n      }));\r\n    };\r\n\r\n    const DragMessage = (a, b) => {\r\n      if (!a) {\r\n        return (\r\n          <UploadMessage>\r\n            <Button>\r\n              <ImageSearchIcon fontSize=\"large\" />\r\n              Inseir Arquivo\r\n            </Button>\r\n          </UploadMessage>\r\n        );\r\n      }\r\n      if (b) {\r\n        return (\r\n          <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n        );\r\n      }\r\n      return (\r\n        <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Dropzone>\r\n          {() => (\r\n            <DropContainer\r\n              {...getRootProps()}\r\n              isDragActive={isDragActive}\r\n              isDragReject={isDragReject}\r\n            >\r\n              <input {...getInputProps()} />\r\n              {DragMessage(isDragActive, isDragReject)}\r\n            </DropContainer>\r\n          )}\r\n        </Dropzone>\r\n        {fileSend()}\r\n        {console.log('->', uploadedFiles)}\r\n        {uploadedFiles.length > 0 && <FileList files={uploadedFiles} />}\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          //        className={classes.buttonCancel}\r\n          mt={3}\r\n          //  startIcon={<SaveIcon />}\r\n        >\r\n          {uploadedFiles.length}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <Box className={classes.box}>\r\n        <Box className={classes.boxInterno}>\r\n          <div>\r\n            <div>\r\n              <MyDropzone />\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}