{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\pages\\\\userPerfil.js\";\nimport React from 'react';\nimport { Perfil } from 'src/components/perfil/index';\nimport { useSession } from 'next-auth/client'; // import { PrismaClient } from '@prisma/client';\n\nimport prisma from 'src/lib/prisma'; // import useSWR from 'swr';\n// import fetch from 'unfetch';\n\nfunction userPerfil({\n  org,\n  ministros,\n  igrejas\n}) {\n  const [session] = useSession();\n  let secao;\n\n  if (session) {\n    secao = session;\n  } // const dadosUser = org.filter((val) => val.email === session.user.email);\n\n\n  console.log(getsession());\n  return (\n    /*#__PURE__*/\n    //    {dadosUser[0].NivelUser===\"ministros\"?\n    //\n    //  ):null}\n    _jsxDEV(Perfil, {\n      item: org,\n      title: \"SISTEMA-IDPB\",\n      ministros: ministros,\n      igrejas: igrejas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n\nexport const getStaticProps = async () => {\n  // pega o valor do banco de dados\n  const posts = await prisma.user.findMany();\n  const ministros = await prisma.ministrosIDPBs.findMany();\n  const igrejas = await prisma.igrejas.findMany();\n  return {\n    props: {\n      org: JSON.parse(JSON.stringify(posts)),\n      ministros: JSON.parse(JSON.stringify(ministros)),\n      igrejas: JSON.parse(JSON.stringify(igrejas))\n    },\n    // will be passed to the page component as props\n    revalidate: 15 // faz atualizar a pagina de 15 em 15 segundo sem fazer build\n\n  };\n};\nexport default userPerfil;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/userPerfil.js"],"names":["React","Perfil","useSession","prisma","userPerfil","org","ministros","igrejas","session","secao","console","log","getsession","getStaticProps","posts","user","findMany","ministrosIDPBs","props","JSON","parse","stringify","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CACA;AACA;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA;AAAlB,CAApB,EAAiD;AAC/C,QAAM,CAACC,OAAD,IAAYN,UAAU,EAA5B;AACA,MAAIO,KAAJ;;AACA,MAAID,OAAJ,EAAa;AACXC,IAAAA,KAAK,GAAGD,OAAR;AACD,GAL8C,CAM/C;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,EAAtB;AACA;AAAA;AACE;AACA;AACA;AACA,YAAC,MAAD;AACE,MAAA,IAAI,EAAEP,GADR;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA;AAJF;AAWD;;AAED,OAAO,MAAMM,cAAc,GAAG,YAAY;AACxC;AAEA,QAAMC,KAAK,GAAG,MAAMX,MAAM,CAACY,IAAP,CAAYC,QAAZ,EAApB;AACA,QAAMV,SAAS,GAAG,MAAMH,MAAM,CAACc,cAAP,CAAsBD,QAAtB,EAAxB;AACA,QAAMT,OAAO,GAAG,MAAMJ,MAAM,CAACI,OAAP,CAAeS,QAAf,EAAtB;AACA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLb,MAAAA,GAAG,EAAEc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,KAAf,CAAX,CADA;AAELR,MAAAA,SAAS,EAAEa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,SAAf,CAAX,CAFN;AAGLC,MAAAA,OAAO,EAAEY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,OAAf,CAAX;AAHJ,KADF;AAKF;AACHe,IAAAA,UAAU,EAAE,EANP,CAMW;;AANX,GAAP;AAQD,CAdM;AAgBP,eAAelB,UAAf","sourcesContent":["import React from 'react';\r\nimport { Perfil } from 'src/components/perfil/index';\r\nimport { useSession } from 'next-auth/client';\r\n// import { PrismaClient } from '@prisma/client';\r\nimport prisma from 'src/lib/prisma';\r\n// import useSWR from 'swr';\r\n// import fetch from 'unfetch';\r\n\r\nfunction userPerfil({ org, ministros, igrejas }) {\r\n  const [session] = useSession();\r\n  let secao;\r\n  if (session) {\r\n    secao = session;\r\n  }\r\n  // const dadosUser = org.filter((val) => val.email === session.user.email);\r\n  console.log(getsession());\r\n  return (\r\n    //    {dadosUser[0].NivelUser===\"ministros\"?\r\n    //\r\n    //  ):null}\r\n    <Perfil\r\n      item={org}\r\n      title=\"SISTEMA-IDPB\"\r\n      ministros={ministros}\r\n      igrejas={igrejas}\r\n    />\r\n  );\r\n}\r\n\r\nexport const getStaticProps = async () => {\r\n  // pega o valor do banco de dados\r\n\r\n  const posts = await prisma.user.findMany();\r\n  const ministros = await prisma.ministrosIDPBs.findMany();\r\n  const igrejas = await prisma.igrejas.findMany();\r\n  return {\r\n    props: {\r\n      org: JSON.parse(JSON.stringify(posts)),\r\n      ministros: JSON.parse(JSON.stringify(ministros)),\r\n      igrejas: JSON.parse(JSON.stringify(igrejas)),\r\n    }, // will be passed to the page component as props\r\n    revalidate: 15, // faz atualizar a pagina de 15 em 15 segundo sem fazer build\r\n  };\r\n};\r\n\r\nexport default userPerfil;\r\n"]},"metadata":{},"sourceType":"module"}