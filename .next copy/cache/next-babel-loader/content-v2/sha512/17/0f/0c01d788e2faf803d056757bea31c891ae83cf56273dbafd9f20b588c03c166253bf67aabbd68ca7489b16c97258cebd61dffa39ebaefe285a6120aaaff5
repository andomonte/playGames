{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\atualizar\\\\userTelas\\\\dadosPessoais.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from '@material-ui/core/styles'; // import Hidden from '@material-ui/core/Hidden';\n\nimport Grid from '@material-ui/core/Grid';\nimport { signOut } from 'next-auth/client';\nimport TextField from '@material-ui/core/TextField';\nimport { Box, Tooltip, Button, capitalize } from '@material-ui/core';\nimport React from 'react';\nimport Image from 'material-ui-image'; // import { uniqueId } from 'lodash';\n// import filesize from 'filesize';\n\nimport api from 'src/components/services/api';\nimport axios from 'axios';\nimport Hidden from '@material-ui/core/Hidden';\nimport cpfMask from 'src/components/mascaras/cpf';\nimport dataMask from 'src/components/mascaras/datas';\nimport foneMask from 'src/components/mascaras/fone';\nimport celularMask from 'src/components/mascaras/celular';\nimport Divider from '@material-ui/core/Divider';\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none'\n  },\n  novoBox: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    alignItems: 'center'\n  },\n  alignBox: {\n    padding: theme.spacing(0),\n    // display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    // backgroundColor: 'blue',\n    // height: '330px',\n    marginTop: 20\n  },\n  img: {\n    maxWidth: '1410px',\n    maxHeight: '600px',\n    width: '100%',\n    height: 'auto'\n  },\n  imgMobile: {\n    maxWidth: '1110px',\n    maxHeight: '500px',\n    width: '100%',\n    height: 'auto'\n  },\n  logo: {\n    height: '100%',\n    cursor: 'pointer',\n    [theme.breakpoints.down('md')]: {\n      marginLeft: 2\n    }\n  },\n  page: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center' // alignItems: 'center',\n    // backgroundColor: 'blue',\n\n  },\n  caption: {\n    marginTop: -5,\n    marginLeft: 5,\n    textTransform: 'capitalize',\n    fontWeight: 1000,\n    display: '-webkit-box',\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden',\n    fontSize: '40px',\n    '@media (min-width:600px)': {\n      fontSize: '20px'\n    },\n    [theme.breakpoints.down('md')]: {\n      fontSize: '16px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '12px'\n    }\n  },\n  typography: {\n    color: 'black',\n    fontWeight: 1000,\n    marginTop: -10,\n    marginLeft: 5,\n    display: '-webkit-box',\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden',\n    fontSize: '30px',\n    '@media (min-width:600px)': {\n      fontSize: '20px'\n    },\n    [theme.breakpoints.down('md')]: {\n      fontSize: '16px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '12px'\n    }\n  },\n  rotulo: {\n    color: 'blue',\n    textTransform: 'capitalize',\n    fontWeight: 500,\n    display: '-webkit-box',\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden',\n    fontSize: '30px',\n    '@media (min-width:600px)': {\n      fontSize: '16px'\n    },\n    [theme.breakpoints.down('md')]: {\n      fontSize: '14px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '12px'\n    }\n  },\n  tf_12: {\n    // marginLeft: theme.spacing(1),\n    //  marginRight: theme.spacing(1),\n    width: '500px',\n    backgroundColor: '#e3f2fd',\n    margin: 10,\n    [theme.breakpoints.down('md')]: {\n      width: '20'\n    }\n  },\n  tf_m: {\n    backgroundColor: '#e3f2fd',\n    width: '100%',\n    fontSize: '5px'\n  },\n  tf_6: {\n    //    marginRight: 8,\n    backgroundColor: '#e3f2fd',\n    margin: 10,\n    width: '240px',\n    textAlign: 'center',\n    // alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      margin: 10,\n      width: '205px'\n    }\n  },\n  tf_4: {\n    margin: 10,\n    // marginRight: 8,\n    backgroundColor: '#e3f2fd',\n    width: '155px',\n    textAlign: 'center',\n    // alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      marginLeft: 10,\n      width: '130px'\n    }\n  },\n  tf_3: {\n    margin: 10,\n    textAlign: 'center',\n    backgroundColor: '#e3f2fd',\n    // marginRight: 8,\n    width: '120px',\n    // alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      marginLeft: 10,\n      width: '110px'\n    }\n  },\n  root: {\n    // position: 'absolute',\n    width: '100%',\n    // marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto'\n  }\n}));\n\nfunction DadosPessoais({\n  item,\n  secao,\n  ministros\n}) {\n  const classes = useStyles();\n  const dadosUser = item.filter(val => val.email === secao.user.email);\n  const [nome, setNome] = React.useState('');\n  const [validarNome, setValidarNome] = React.useState('sim');\n  const [matricula, setMatricula] = React.useState('');\n  const [validarMatricula, setValidarMatricula] = React.useState('sim');\n  const [cpf, setCPF] = React.useState('');\n  const [validarCPF, setValidarCPF] = React.useState('sim');\n  const [rg, setRG] = React.useState('');\n  const [validarRG, setValidarRG] = React.useState('sim');\n  const [sexo, setSexo] = React.useState('');\n  const [validarSexo, setValidarSexo] = React.useState('sim');\n  const [jurisdicaoEstadual, setJurisdicaoEstadual] = React.useState('');\n  const [validarJurisdicaoEstadual, setValidarJurisdicaoEstadual] = React.useState('sim');\n  const [distrito, setDistrito] = React.useState('');\n  const [validarDistrito, setValidarDistrito] = React.useState('sim');\n  const [grau, setGrau] = React.useState('');\n  const [validarGrau, setValidarGrau] = React.useState('sim');\n  const [formacaoEscolar, setFormacaoEscolar] = React.useState('');\n  const [validarFormacaoEscolar, setValidarFormacaoEscolar] = React.useState('sim');\n  const [conjuge, setConjuge] = React.useState('');\n  const [validarConjuge, setValidarConjuge] = React.useState('sim');\n  const [cpfConjuge, setCPFConjuge] = React.useState('');\n  const [validarCPFConjuge, setValidarCPFConjuge] = React.useState('sim');\n  const [celularConjuge, setcelularConjuge] = React.useState('');\n  const [validarCelularConjuge, setValidarCelularConjuge] = React.useState('sim');\n  const [logradouro, setLogradouro] = React.useState('');\n  const [validarLogradouro, setValidarLogradouro] = React.useState('sim');\n  const [numero, setNumero] = React.useState('');\n  const [validarNumero, setValidarNumero] = React.useState('sim');\n  const [complemento, setComplemento] = React.useState('');\n  const [validarComplemento, setValidarComplemento] = React.useState('sim');\n  const [bairro, setBairro] = React.useState('');\n  const [validarBairro, setValidarBairro] = React.useState('sim');\n  const [fone, setFone] = React.useState('');\n  const [validarFone, setValidarFone] = React.useState('sim');\n  const [celular, setCelular] = React.useState('');\n  const [validarCelular, setValidarCelular] = React.useState('sim');\n  const [email, setEmail] = React.useState('');\n  const [validarEmail, setValidarEmail] = React.useState('sim');\n  const [cidade, setCidade] = React.useState('');\n  const [validarCidade, setValidarCidade] = React.useState('sim');\n  const [cep, setCEP] = React.useState('');\n  const [validarCEP, setValidarCEP] = React.useState('sim');\n  const [uf, setUF] = React.useState('');\n  const [validarUF, setValidarUF] = React.useState('sim');\n  const [estadoCivil, setEstadoCivil] = React.useState('');\n  const [validarEstadoCivil, setValidarEstadoCivil] = React.useState('sim');\n  const [dataNascimento, setDataNascimento] = React.useState('');\n  const [validarDataNascimento, setValidarDataNascimento] = React.useState('sim');\n  const [conversao, setConversao] = React.useState('');\n  const [validarConversao, setValidarConversao] = React.useState('sim');\n  const [consagracao, setConsagracao] = React.useState('');\n  const [validarConsagracao, setValidarConsagracao] = React.useState('sim');\n  const [ascensao1, setAscensao1] = React.useState('');\n  const [validarAscencao1, setValidarAscencao1] = React.useState('sim');\n  const [ascensao2, setAscensao2] = React.useState('');\n  const [validarAscencao2, setValidarAscencao2] = React.useState('sim');\n  const [naturalidade, setNaturalidade] = React.useState('');\n  const [validarNaturalidade, setValidarNaturalidade] = React.useState('sim');\n  const [estadoNacimento, setEstadoNascimento] = React.useState('');\n  const [validarEstadoNascimento, setValidarEstadoNascimento] = React.useState('sim');\n  const [nacionalidade, setNacionalidade] = React.useState('');\n  const [validarNacionalidade, setValidarNacionalidade] = React.useState('sim');\n  const [informacoes, setInformacoes] = React.useState({\n    cep: '',\n    logradouro: '',\n    complemento: '',\n    bairro: '',\n    localidade: '',\n    uf: '',\n    ibge: '',\n    gia: ''\n  });\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  if (dadosUser.length === 0) signOut({\n    callbackUrl: `${window.location.origin}`\n  });\n  const dadosMinistro = ministros.filter(val => val.Email === dadosUser[0].email);\n  if (dadosUser.length === 0) signOut({\n    callbackUrl: `${window.location.origin}`\n  });\n  const [selectedFile, setSelectedFile] = React.useState(dadosMinistro[0].fotoPerfil ? dadosMinistro[0].fotoPerfil : '');\n  const [previews, setPreview] = React.useState([]);\n\n  const processUpload = uploadedFile => {\n    const nomeFoto = `${dadosMinistro[0].CPF}${uploadedFile.name.substring(uploadedFile.name.lastIndexOf('.'))}`;\n    const dataFile = new FormData();\n    dataFile.append('file', uploadedFile, nomeFoto);\n    api.post('api/fotos', dataFile).then(response => {\n      if (response) console.log(response);\n    }).catch(() => {});\n  };\n\n  const onSelectFile = e => {\n    setPreview(e.target.files[0]);\n\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    }\n\n    setSelectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const [value, setValue] = React.useState('dPessoais');\n\n  const addTela = () => {\n    //  console.log(value);\n    if (value === 'dPessoais') setValue('endereço');\n    if (value === 'endereço') setValue('dadosIDPB'); //    if (contador === 3) setValue('dadosIDPB');\n  };\n\n  const subTela = () => {\n    if (value === 'endereço') setValue('dPessoais');\n    if (value === 'dadosIDPB') setValue('endereço');\n  };\n\n  const enviarFoto = () => processUpload(previews); // const url = `${window.location.origin}/api/consultaEventos/${item[0].codigoIgreja}`;\n  // const { data, erroros } = useSWR(url, fetcher);\n  // useSWR('/api/user', (id = 4) => fetcher(id));\n  // useSWR('/api/consultaDados', fetcher);\n  //---------------------------------------------------------------------------\n  // const dadosMinistro = data.filter((val) => val.dataEvento === dataEvento);\n\n\n  let Nome = '';\n  let Matricula = '';\n  let CPF = '';\n  let RG = '';\n  let Sexo = '';\n  let JurisdicaoEstadual = '';\n  let Distrito = '';\n  let GrauMinisterial = '';\n  let FormacaoEscolar = '';\n  let Conjuge = '';\n  let CPFConjuge = '';\n  let CelularConjuge = '';\n  let Logradouro = '';\n  let Numero = '';\n  let Complemento = '';\n  let Bairro = '';\n  let TelefoneResidencial = '';\n  let Celular = '';\n  let Email = '';\n  let Cidade = '';\n  let CEP = '';\n  let UF = '';\n  let EstadoCivil = '';\n  let DataNascimento = '';\n  let DataConversao = '';\n  let DataConsagracao = '';\n  let DataAscensao1 = '';\n  let DataAscensao2 = '';\n  let Naturalidade = '';\n  let EstadoNascimento = '';\n  let Nacionalidade = ''; //  {dadosMinistro[0].FuncaoNaIgreja}\n\n  if (dadosMinistro.length !== 0) {\n    Nome = dadosMinistro[0].Nome;\n    Matricula = dadosMinistro[0].Matricula;\n    CPF = dadosMinistro[0].CPF;\n    RG = dadosMinistro[0].RG;\n    Sexo = dadosMinistro[0].Sexo;\n    JurisdicaoEstadual = dadosMinistro[0].JurisdicaoEstadual;\n    Distrito = dadosMinistro[0].Distrito;\n    GrauMinisterial = dadosMinistro[0].GrauMinisterial;\n    FormacaoEscolar = dadosMinistro[0].FormacaoEscolar;\n    Conjuge = dadosMinistro[0].Conjuge;\n    CPFConjuge = dadosMinistro[0].CPFConjuge;\n    CelularConjuge = dadosMinistro[0].CelularConjuge;\n    Logradouro = dadosMinistro[0].Logradouro;\n    Numero = dadosMinistro[0].Numero;\n    Complemento = dadosMinistro[0].Complemento;\n    Bairro = dadosMinistro[0].Bairro;\n    TelefoneResidencial = dadosMinistro[0].TelefoneResidencial;\n    Celular = dadosMinistro[0].Celular;\n    Email = dadosMinistro[0].Email;\n    Cidade = dadosMinistro[0].Cidade;\n    CEP = dadosMinistro[0].CEP;\n    UF = dadosMinistro[0].UF;\n    EstadoCivil = dadosMinistro[0].EstadoCivil;\n    DataNascimento = dadosMinistro[0].DataNascimento;\n    DataConversao = dadosMinistro[0].DataConversao;\n    DataConsagracao = dadosMinistro[0].DataConsagracao;\n    DataAscensao1 = dadosMinistro[0].DataAscensao1;\n    DataAscensao2 = dadosMinistro[0].DataAscensao2;\n    Naturalidade = dadosMinistro[0].Naturalidade;\n    EstadoNascimento = dadosMinistro[0].EstadoNascimento;\n    Nacionalidade = dadosMinistro[0].Nacionalidade;\n  } //--------------------------------------------------------------------------\n\n\n  React.useEffect(() => {\n    if (dadosMinistro.length !== 0) {\n      setNome(Nome);\n      setCPF(CPF);\n      setMatricula(Matricula);\n      setRG(RG);\n      setSexo(Sexo);\n      setJurisdicaoEstadual(JurisdicaoEstadual);\n      setDistrito(Distrito);\n      setGrau(GrauMinisterial);\n      setFormacaoEscolar(FormacaoEscolar);\n      setConjuge(Conjuge);\n      setCPFConjuge(CPFConjuge);\n      setcelularConjuge(CelularConjuge);\n      setLogradouro(Logradouro);\n      setNumero(Numero);\n      setComplemento(Complemento);\n      setBairro(Bairro);\n      setFone(TelefoneResidencial);\n      setCelular(Celular);\n      setEmail(Email);\n      setCidade(Cidade);\n      setCEP(CEP);\n      setUF(UF);\n      setEstadoCivil(EstadoCivil);\n      setDataNascimento(DataNascimento);\n      setConversao(DataConversao);\n      setConsagracao(DataConsagracao);\n      setAscensao1(DataAscensao1);\n      setAscensao2(DataAscensao2);\n      setNaturalidade(Naturalidade);\n      setEstadoCivil(EstadoNascimento);\n      setNacionalidade(Nacionalidade);\n    }\n  }, []); //--------------------------------------------------------------------------\n\n  const valid = () => {\n    if (!nome || !matricula || !cpf || !rg || !jurisdicaoEstadual || !distrito || !grau) {\n      return false;\n    }\n\n    return true;\n  }; //--------------------------------------------------------------------------\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }; //--------------------------------------------------------------------------\n\n\n  const submitData = async e => {\n    e.preventDefault();\n    const valida = valid();\n    setLoading(true);\n\n    if (valida) {\n      try {\n        const body = {\n          Nome,\n          Matricula,\n          CPF,\n          RG,\n          Sexo,\n          JurisdicaoEstadual,\n          Distrito,\n          GrauMinisterial\n        };\n        let urlCreate = '';\n\n        if (dadosMinistro.length === 0) {\n          urlCreate = `${window.location.origin}/api/criarEvento`;\n        } else {\n          urlCreate = `${window.location.origin}/api/updateEvento/${ids}`;\n        }\n\n        await fetch(urlCreate, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        setLoading(false);\n        setEditar(false);\n        mutate(url);\n      } catch (errors) {\n        console.errors();\n      }\n    }\n  };\n\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 1,\n    width: '95%'\n  };\n\n  const getInformacoes = () => {\n    axios.get(`http://viacep.com.br/ws/${cep}/json/`).then(response => {\n      setInformacoes(response.data);\n      setLogradouro(response.data.logradouro);\n      setBairro(response.data.bairro);\n      setCidade(response.data.localidade);\n    });\n  };\n\n  const handleDados = () => {\n    setNome(Nome);\n  };\n\n  const Userform = /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    width: \"100%\",\n    className: classes.root,\n    children: [value === 'dPessoais' ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n            mt: 1,\n            className: classes.box,\n            width: \"100%\" //            maxWidth={1200}\n            ,\n            height: \"auto\" // borderRadius={16}\n\n          }, defaultProps), {}, {\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Click para Mudar\",\n              \"aria-label\": \"foto\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.novoBox,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  accept: \"image/*\",\n                  className: classes.input,\n                  id: \"contained-button-file\",\n                  multiple: true,\n                  type: \"file\",\n                  onChange: onSelectFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"contained-button-file\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: selectedFile,\n                    alt: \"\",\n                    width: \"100%\",\n                    height: \"100%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.alignBox,\n            children: /*#__PURE__*/_jsxDEV(Hidden, {\n              smDown: true,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: classes.page,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 9,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Nome\",\n                      label: \"Nome\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        style: {\n                          textTransform: 'uppercase'\n                        },\n                        shrink: true\n                      },\n                      value: nome,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: nome === '' ? () => setValidarNome('nao') : () => setValidarNome('sim'),\n                      onChange: e => setNome(capitalize(e.target.value)),\n                      error: validarNome === 'nao',\n                      onFocus: e => setNome(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Grau Ministerial\",\n                      label: \"Grau Ministerial\",\n                      type: \"text\",\n                      disabled: true,\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: grau || GrauMinisterial,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: grau === '' ? () => setValidarGrau('nao') : () => setValidarGrau('sim'),\n                      onChange: e => setGrau(e.target.value),\n                      error: validarGrau === 'nao',\n                      onFocus: e => setGrau(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                display: \"flex\",\n                flexDirection: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Email\",\n                      label: \"Email\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        style: {\n                          textTransform: 'uppercase'\n                        },\n                        shrink: true\n                      },\n                      value: email,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: email === '' ? () => setValidarEmail('nao') : () => setValidarEmail('sim'),\n                      onChange: e => setEmail(e.target.value),\n                      error: validarEmail === 'nao',\n                      onFocus: e => setEmail(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"TelefoneCelular\",\n                      label: \"Telefone Celular\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: celularMask(celular),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: celular === '' ? () => setValidarCelular('nao') : () => setValidarCelular('sim'),\n                      onChange: e => setCelular(e.target.value),\n                      error: validarCelular === 'nao',\n                      onFocus: e => setCelular(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"TelefoneResidencial\",\n                      label: \"Telefone Residencial\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: foneMask(fone),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: fone === '' ? () => setValidarFone('nao') : () => setValidarFone('sim'),\n                      onChange: e => setFone(e.target.value),\n                      error: validarFone === 'nao',\n                      onFocus: e => setFone(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 667,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                display: \"flex\",\n                flexDirection: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Matricula\",\n                      label: \"Matricula\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: matricula,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      disabled: true,\n                      onBlur: matricula === '' ? () => setValidarMatricula('nao') : () => setValidarMatricula('sim'),\n                      onChange: e => setMatricula(e.target.value),\n                      error: validarMatricula === 'nao',\n                      onFocus: e => setMatricula(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"CPF\",\n                      label: \"CPF\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: cpfMask(cpf),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: cpf === '' ? () => setValidarCPF('nao') : () => setValidarCPF('sim'),\n                      onChange: e => setCPF(e.target.value),\n                      error: validarCPF === 'nao',\n                      onFocus: e => setCPF(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 721,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"RG\",\n                      label: \"RG\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: rg || RG,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: rg === '' ? () => setValidarRG('nao') : () => setValidarRG('sim'),\n                      onChange: e => setRG(e.target.value),\n                      error: validarRG === 'nao',\n                      onFocus: e => setRG(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataNascimento\",\n                      label: \"Data de Nascimento\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: dataMask(dataNascimento),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: dataNascimento === '' ? () => setValidarDataNascimento('nao') : () => setValidarDataNascimento('sim'),\n                      onChange: e => setDataNascimento(e.target.value),\n                      error: validarDataNascimento === 'nao',\n                      onFocus: e => setDataNascimento(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                flexDirection: \"row\",\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataConversao\",\n                      label: \"Data de Convers\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: dataMask(DataConversao),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataConversao === '' ? () => setValidarConversao('nao') : () => setValidarConversao('sim'),\n                      onChange: e => setConversao(e.target.value),\n                      error: validarConversao === 'nao',\n                      onFocus: e => setConversao(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 798,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataConsagracao\",\n                      label: \"Data de Consagra\\xE7\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataConsagracao),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataConsagracao === '' ? () => setValidarConsagracao('nao') : () => setValidarConsagracao('sim'),\n                      onChange: e => setConsagracao(e.target.value),\n                      error: validarConsagracao === 'nao',\n                      onFocus: e => setConsagracao(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataAscensao1\",\n                      label: \"Data 1\\xBA Ascens\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataAscensao1),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataAscensao1 === '' ? () => setValidarAscencao1('nao') : () => setValidarAscencao1('sim'),\n                      onChange: e => setAscensao1(e.target.value),\n                      error: validarAscencao1 === 'nao',\n                      onFocus: e => setAscensao1(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 849,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataAscensao2\",\n                      label: \"Data 2\\xBA Ascens\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataAscensao2),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataAscensao2 === '' ? () => setValidarAscencao2('nao') : () => setValidarAscencao2('sim'),\n                      onChange: e => setAscensao2(e.target.value),\n                      error: validarAscencao2 === 'nao',\n                      onFocus: e => setAscensao2(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.novoBox,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.tf_m,\n                id: \"Nome\",\n                label: \"Nome\",\n                type: \"text\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                value: Nome || nome,\n                variant: \"outlined\",\n                placeholder: \"\",\n                size: \"small\",\n                onBlur: nome === '' ? () => setValidarNome('nao') : () => setValidarNome('sim'),\n                onChange: e => setNome(e.target.value),\n                error: validarNome === 'nao',\n                onFocus: e => setNome(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.novoBox,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.tf_m,\n                id: \"Matricula\",\n                label: \"Matricula\",\n                type: \"text\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                value: Matricula || matricula,\n                variant: \"outlined\",\n                placeholder: \"\",\n                size: \"small\",\n                onBlur: matricula === '' ? () => setValidarMatricula('nao') : () => setValidarMatricula('sim'),\n                onChange: e => setMatricula(e.target.value),\n                error: validarMatricula === 'nao',\n                onFocus: e => setMatricula(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Naturalidade\",\n              label: \"Naturalidade\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Naturalidade,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Naturalidade === '' ? () => setValidarNaturalidade('nao') : () => setValidarNaturalidade('sim'),\n              onChange: e => setNaturalidade(e.target.value),\n              error: validarNaturalidade === 'nao',\n              onFocus: e => setNaturalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"EstadoNascimento\",\n              label: \"Estado do Nascimento\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: EstadoNascimento,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Nacionalidade === '' ? () => setEstadoNascimento('nao') : () => setEstadoNascimento('sim'),\n              onChange: e => setNacionalidade(e.target.value),\n              error: validarNacionalidade === 'nao',\n              onFocus: e => setNacionalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Nacionalidade\",\n              label: \"Nacionalidade\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Nacionalidade,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Nacionalidade === '' ? () => setNacionalidade('nao') : () => setNacionalidade('sim'),\n              onChange: e => setNacionalidade(e.target.value),\n              error: validarNacionalidade === 'nao',\n              onFocus: e => setNacionalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Sexo\",\n              label: \"Sexo\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: sexo,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: sexo === '' ? () => setValidarSexo('nao') : () => setValidarSexo('sim'),\n              onChange: e => setSexo(e.target.value),\n              error: validarSexo === 'nao',\n              onFocus: e => setSexo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"JurisdicaoEstadual\",\n              label: \"Jurisdi\\xE7\\xE3o Estadual\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: JurisdicaoEstadual,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: JurisdicaoEstadual === '' ? () => setValidarJurisdicaoEstadual('nao') : () => setValidarJurisdicaoEstadual('sim'),\n              onChange: e => setJurisdicaoEstadual(e.target.value),\n              error: validarJurisdicaoEstadual === 'nao',\n              onFocus: e => setJurisdicaoEstadual(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Distrito\",\n              label: \"Distrito\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Distrito,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Distrito === '' ? () => setDistrito('nao') : () => setDistrito('sim'),\n              onChange: e => setDistrito(e.target.value),\n              error: validarDistrito === 'nao',\n              onFocus: e => setDistrito(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"FormacaoEscolar\",\n              label: \"FormacaoEscolar\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: FormacaoEscolar,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: FormacaoEscolar === '' ? () => setFormacaoEscolar('nao') : () => setFormacaoEscolar('sim'),\n              onChange: e => setFormacaoEscolar(e.target.value),\n              error: validarFormacaoEscolar === 'nao',\n              onFocus: e => setFormacaoEscolar(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Conjuge\",\n              label: \"C\\xF4njuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Conjuge,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Conjuge === '' ? () => setValidarConjuge('nao') : () => setValidarConjuge('sim'),\n              onChange: e => setConjuge(e.target.value),\n              error: validarConjuge === 'nao',\n              onFocus: e => setConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"EstadoCivil\",\n              label: \"Estado Civil\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: EstadoCivil,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: EstadoCivil === '' ? () => setEstadoCivil('nao') : () => setEstadoCivil('sim'),\n              onChange: e => setEstadoCivil(e.target.value),\n              error: validarEstadoCivil === 'nao',\n              onFocus: e => setEstadoCivil(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"CPFConjuge\",\n              label: \"CPF do Conjuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: CPFConjuge,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: CPFConjuge === '' ? () => setCPFConjuge('nao') : () => setCPFConjuge('sim'),\n              onChange: e => setCPFConjuge(e.target.value),\n              error: validarCPFConjuge === 'nao',\n              onFocus: e => setCPFConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"TelefoneConjuge\",\n              label: \"Telefone do C\\xF4njuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: celularMask(celularConjuge),\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: celularConjuge === '' ? () => setValidarCelularConjuge('nao') : () => setValidarCelularConjuge('sim'),\n              onChange: e => setcelularConjuge(e.target.value),\n              error: validarCelularConjuge === 'nao',\n              onFocus: e => setcelularConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this) : null, value === 'endereço' ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.alignBox,\n            children: /*#__PURE__*/_jsxDEV(Hidden, {\n              smDown: true,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: classes.page,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"CEP\",\n                      label: \"CEP\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: cep || CEP,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: getInformacoes\n                      /* {\r\n                          cep === ''\r\n                            ? () => setValidarCEP('nao')\r\n                            : () => setValidarCEP('sim')\r\n                        } */\n                      ,\n                      onChange: e => setCEP(e.target.value),\n                      error: validarCEP === 'nao',\n                      onFocus: e => setCEP(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1257,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Logradouro\",\n                      label: \"Logradouro\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: logradouro,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: logradouro === '' ? () => setValidarLogradouro('nao') : () => setValidarLogradouro('sim'),\n                      onChange: e => setLogradouro(e.target.value),\n                      error: validarLogradouro === 'nao',\n                      onFocus: e => setLogradouro(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1284,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1283,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Numero\",\n                      label: \"N\\xFAmero\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: numero || Numero,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: numero === '' ? () => setValidarNumero('nao') : () => setValidarNumero('sim'),\n                      onChange: e => setNumero(e.target.value),\n                      error: validarNumero === 'nao',\n                      onFocus: e => setNumero(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1309,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1308,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                display: \"flex\",\n                flexDirection: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Bairro\",\n                      label: \"Bairro\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        style: {\n                          textTransform: 'uppercase'\n                        },\n                        shrink: true\n                      },\n                      value: bairro,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: bairro === '' ? () => setValidarBairro('nao') : () => setValidarBairro('sim'),\n                      onChange: e => setBairro(e.target.value),\n                      error: validarBairro === 'nao',\n                      onFocus: e => setBairro(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1336,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1335,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Cidade\",\n                      label: \"Cidade\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: cidade,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: cidade === '' ? () => setValidarCidade('nao') : () => setValidarCidade('sim'),\n                      onChange: e => setCidade(e.target.value),\n                      error: validarCidade === 'nao',\n                      onFocus: e => setCidade(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1362,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1361,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"TelefoneResidencial\",\n                      label: \"Telefone Residencial\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: foneMask(fone),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: fone === '' ? () => setValidarFone('nao') : () => setValidarFone('sim'),\n                      onChange: e => setFone(e.target.value),\n                      error: validarFone === 'nao',\n                      onFocus: e => setFone(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1387,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1386,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                display: \"flex\",\n                flexDirection: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"Matricula\",\n                      label: \"Matricula\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: matricula,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      disabled: true,\n                      onBlur: matricula === '' ? () => setValidarMatricula('nao') : () => setValidarMatricula('sim'),\n                      onChange: e => setMatricula(e.target.value),\n                      error: validarMatricula === 'nao',\n                      onFocus: e => setMatricula(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1414,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1413,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"CPF\",\n                      label: \"CPF\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: cpfMask(cpf),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: cpf === '' ? () => setValidarCPF('nao') : () => setValidarCPF('sim'),\n                      onChange: e => setCPF(e.target.value),\n                      error: validarCPF === 'nao',\n                      onFocus: e => setCPF(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1441,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1440,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1439,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"RG\",\n                      label: \"RG\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: rg || RG,\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: rg === '' ? () => setValidarRG('nao') : () => setValidarRG('sim'),\n                      onChange: e => setRG(e.target.value),\n                      error: validarRG === 'nao',\n                      onFocus: e => setRG(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1466,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1465,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataNascimento\",\n                      label: \"Data de Nascimento\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: dataMask(dataNascimento),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: dataNascimento === '' ? () => setValidarDataNascimento('nao') : () => setValidarDataNascimento('sim'),\n                      onChange: e => setDataNascimento(e.target.value),\n                      error: validarDataNascimento === 'nao',\n                      onFocus: e => setDataNascimento(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1491,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1490,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1489,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                flexDirection: \"row\",\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataConversao\",\n                      label: \"Data de Convers\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: dataMask(DataConversao),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataConversao === '' ? () => setValidarConversao('nao') : () => setValidarConversao('sim'),\n                      onChange: e => setConversao(e.target.value),\n                      error: validarConversao === 'nao',\n                      onFocus: e => setConversao(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1518,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1517,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1516,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataConsagracao\",\n                      label: \"Data de Consagra\\xE7\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataConsagracao),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataConsagracao === '' ? () => setValidarConsagracao('nao') : () => setValidarConsagracao('sim'),\n                      onChange: e => setConsagracao(e.target.value),\n                      error: validarConsagracao === 'nao',\n                      onFocus: e => setConsagracao(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1543,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1542,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataAscensao1\",\n                      label: \"Data 1\\xBA Ascens\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataAscensao1),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataAscensao1 === '' ? () => setValidarAscencao1('nao') : () => setValidarAscencao1('sim'),\n                      onChange: e => setAscensao1(e.target.value),\n                      error: validarAscencao1 === 'nao',\n                      onFocus: e => setAscensao1(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1569,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1568,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1567,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.novoBox,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.tf_m,\n                      id: \"DataAscensao2\",\n                      label: \"Data 2\\xBA Ascens\\xE3o\",\n                      type: \"text\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      disabled: true,\n                      value: dataMask(DataAscensao2),\n                      variant: \"outlined\",\n                      placeholder: \"\",\n                      size: \"small\",\n                      onBlur: DataAscensao2 === '' ? () => setValidarAscencao2('nao') : () => setValidarAscencao2('sim'),\n                      onChange: e => setAscensao2(e.target.value),\n                      error: validarAscencao2 === 'nao',\n                      onFocus: e => setAscensao2(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1595,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1594,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1593,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1515,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.novoBox,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.tf_m,\n                id: \"Logradouro\",\n                label: \"Logradouro\",\n                type: \"text\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                value: Logradouro || logradouro,\n                variant: \"outlined\",\n                placeholder: \"\",\n                size: \"small\",\n                onBlur: logradouro === '' ? () => setValidarLogradouro('nao') : () => setValidarLogradouro('sim'),\n                onChange: e => setLogradouro(e.target.value),\n                error: validarLogradouro === 'nao',\n                onFocus: e => setLogradouro(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1628,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1627,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1626,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.novoBox,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.tf_m,\n                id: \"Matricula\",\n                label: \"Matricula\",\n                type: \"text\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                value: Matricula || matricula,\n                variant: \"outlined\",\n                placeholder: \"\",\n                size: \"small\",\n                onBlur: matricula === '' ? () => setValidarMatricula('nao') : () => setValidarMatricula('sim'),\n                onChange: e => setMatricula(e.target.value),\n                error: validarMatricula === 'nao',\n                onFocus: e => setMatricula(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1655,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1654,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1680,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Naturalidade\",\n              label: \"Naturalidade\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Naturalidade,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Naturalidade === '' ? () => setValidarNaturalidade('nao') : () => setValidarNaturalidade('sim'),\n              onChange: e => setNaturalidade(e.target.value),\n              error: validarNaturalidade === 'nao',\n              onFocus: e => setNaturalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1684,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1683,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1682,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"EstadoNascimento\",\n              label: \"Estado do Nascimento\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: EstadoNascimento,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Nacionalidade === '' ? () => setEstadoNascimento('nao') : () => setEstadoNascimento('sim'),\n              onChange: e => setNacionalidade(e.target.value),\n              error: validarNacionalidade === 'nao',\n              onFocus: e => setNacionalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1710,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1709,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1708,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Nacionalidade\",\n              label: \"Nacionalidade\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Nacionalidade,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Nacionalidade === '' ? () => setNacionalidade('nao') : () => setNacionalidade('sim'),\n              onChange: e => setNacionalidade(e.target.value),\n              error: validarNacionalidade === 'nao',\n              onFocus: e => setNacionalidade(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1735,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1734,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Sexo\",\n              label: \"Sexo\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: sexo,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: sexo === '' ? () => setValidarSexo('nao') : () => setValidarSexo('sim'),\n              onChange: e => setSexo(e.target.value),\n              error: validarSexo === 'nao',\n              onFocus: e => setSexo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1758,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1681,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"JurisdicaoEstadual\",\n              label: \"Jurisdi\\xE7\\xE3o Estadual\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: JurisdicaoEstadual,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: JurisdicaoEstadual === '' ? () => setValidarJurisdicaoEstadual('nao') : () => setValidarJurisdicaoEstadual('sim'),\n              onChange: e => setJurisdicaoEstadual(e.target.value),\n              error: validarJurisdicaoEstadual === 'nao',\n              onFocus: e => setJurisdicaoEstadual(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1787,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1785,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Distrito\",\n              label: \"Distrito\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Distrito,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Distrito === '' ? () => setDistrito('nao') : () => setDistrito('sim'),\n              onChange: e => setDistrito(e.target.value),\n              error: validarDistrito === 'nao',\n              onFocus: e => setDistrito(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1813,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1812,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"FormacaoEscolar\",\n              label: \"FormacaoEscolar\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: FormacaoEscolar,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: FormacaoEscolar === '' ? () => setFormacaoEscolar('nao') : () => setFormacaoEscolar('sim'),\n              onChange: e => setFormacaoEscolar(e.target.value),\n              error: validarFormacaoEscolar === 'nao',\n              onFocus: e => setFormacaoEscolar(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1838,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1837,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1836,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1784,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"Conjuge\",\n              label: \"C\\xF4njuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: Conjuge,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: Conjuge === '' ? () => setValidarConjuge('nao') : () => setValidarConjuge('sim'),\n              onChange: e => setConjuge(e.target.value),\n              error: validarConjuge === 'nao',\n              onFocus: e => setConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1865,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"EstadoCivil\",\n              label: \"Estado Civil\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: EstadoCivil,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: EstadoCivil === '' ? () => setEstadoCivil('nao') : () => setEstadoCivil('sim'),\n              onChange: e => setEstadoCivil(e.target.value),\n              error: validarEstadoCivil === 'nao',\n              onFocus: e => setEstadoCivil(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1891,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"CPFConjuge\",\n              label: \"CPF do Conjuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: CPFConjuge,\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: CPFConjuge === '' ? () => setCPFConjuge('nao') : () => setCPFConjuge('sim'),\n              onChange: e => setCPFConjuge(e.target.value),\n              error: validarCPFConjuge === 'nao',\n              onFocus: e => setCPFConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1916,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.novoBox,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tf_m,\n              id: \"TelefoneConjuge\",\n              label: \"Telefone do C\\xF4njuge\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              value: celularMask(celularConjuge),\n              variant: \"outlined\",\n              placeholder: \"\",\n              size: \"small\",\n              onBlur: celularConjuge === '' ? () => setValidarCelularConjuge('nao') : () => setValidarCelularConjuge('sim'),\n              onChange: e => setcelularConjuge(e.target.value),\n              error: validarCelularConjuge === 'nao',\n              onFocus: e => setcelularConjuge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1941,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1939,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1862,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: enviarFoto,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1967,\n      columnNumber: 7\n    }, this), value === 'dPessoais' ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: subTela,\n      disabled: true,\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1969,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: subTela,\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1973,\n      columnNumber: 9\n    }, this), value !== 'dadosIDPB' && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTela,\n      children: \"Pr\\xF3xima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1975,\n      columnNumber: 33\n    }, this), value === 'dadosIDPB' && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTela,\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1976,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 519,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: secao ? /*#__PURE__*/_jsxDEV(Box, {\n      children: UserForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1979,\n      columnNumber: 21\n    }, this) : null\n  }, void 0, false);\n}\n\nexport default DadosPessoais;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/atualizar/userTelas/dadosPessoais.js"],"names":["makeStyles","Grid","signOut","TextField","Box","Tooltip","Button","capitalize","React","Image","api","axios","Hidden","cpfMask","dataMask","foneMask","celularMask","Divider","useStyles","theme","input","display","novoBox","flexGrow","padding","spacing","textAlign","color","palette","text","secondary","alignItems","alignBox","flexDirection","marginTop","img","maxWidth","maxHeight","width","height","imgMobile","logo","cursor","breakpoints","down","marginLeft","page","justifyContent","caption","textTransform","fontWeight","overflow","fontSize","typography","rotulo","tf_12","backgroundColor","margin","tf_m","tf_6","tf_4","tf_3","root","overflowX","DadosPessoais","item","secao","ministros","classes","dadosUser","filter","val","email","user","nome","setNome","useState","validarNome","setValidarNome","matricula","setMatricula","validarMatricula","setValidarMatricula","cpf","setCPF","validarCPF","setValidarCPF","rg","setRG","validarRG","setValidarRG","sexo","setSexo","validarSexo","setValidarSexo","jurisdicaoEstadual","setJurisdicaoEstadual","validarJurisdicaoEstadual","setValidarJurisdicaoEstadual","distrito","setDistrito","validarDistrito","setValidarDistrito","grau","setGrau","validarGrau","setValidarGrau","formacaoEscolar","setFormacaoEscolar","validarFormacaoEscolar","setValidarFormacaoEscolar","conjuge","setConjuge","validarConjuge","setValidarConjuge","cpfConjuge","setCPFConjuge","validarCPFConjuge","setValidarCPFConjuge","celularConjuge","setcelularConjuge","validarCelularConjuge","setValidarCelularConjuge","logradouro","setLogradouro","validarLogradouro","setValidarLogradouro","numero","setNumero","validarNumero","setValidarNumero","complemento","setComplemento","validarComplemento","setValidarComplemento","bairro","setBairro","validarBairro","setValidarBairro","fone","setFone","validarFone","setValidarFone","celular","setCelular","validarCelular","setValidarCelular","setEmail","validarEmail","setValidarEmail","cidade","setCidade","validarCidade","setValidarCidade","cep","setCEP","validarCEP","setValidarCEP","uf","setUF","validarUF","setValidarUF","estadoCivil","setEstadoCivil","validarEstadoCivil","setValidarEstadoCivil","dataNascimento","setDataNascimento","validarDataNascimento","setValidarDataNascimento","conversao","setConversao","validarConversao","setValidarConversao","consagracao","setConsagracao","validarConsagracao","setValidarConsagracao","ascensao1","setAscensao1","validarAscencao1","setValidarAscencao1","ascensao2","setAscensao2","validarAscencao2","setValidarAscencao2","naturalidade","setNaturalidade","validarNaturalidade","setValidarNaturalidade","estadoNacimento","setEstadoNascimento","validarEstadoNascimento","setValidarEstadoNascimento","nacionalidade","setNacionalidade","validarNacionalidade","setValidarNacionalidade","informacoes","setInformacoes","localidade","ibge","gia","fetcher","url","get","then","res","data","length","callbackUrl","window","location","origin","dadosMinistro","Email","selectedFile","setSelectedFile","fotoPerfil","previews","setPreview","processUpload","uploadedFile","nomeFoto","CPF","name","substring","lastIndexOf","dataFile","FormData","append","post","response","console","log","catch","onSelectFile","e","target","files","undefined","URL","createObjectURL","value","setValue","addTela","subTela","enviarFoto","Nome","Matricula","RG","Sexo","JurisdicaoEstadual","Distrito","GrauMinisterial","FormacaoEscolar","Conjuge","CPFConjuge","CelularConjuge","Logradouro","Numero","Complemento","Bairro","TelefoneResidencial","Celular","Cidade","CEP","UF","EstadoCivil","DataNascimento","DataConversao","DataConsagracao","DataAscensao1","DataAscensao2","Naturalidade","EstadoNascimento","Nacionalidade","useEffect","valid","handleChange","event","newValue","submitData","preventDefault","valida","setLoading","body","urlCreate","ids","fetch","method","headers","JSON","stringify","setEditar","mutate","errors","defaultProps","bgcolor","m","border","getInformacoes","handleDados","Userform","box","style","shrink","UserForm"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n// import Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { signOut } from 'next-auth/client';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Box, Tooltip, Button, capitalize } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Image from 'material-ui-image';\r\n// import { uniqueId } from 'lodash';\r\n// import filesize from 'filesize';\r\nimport api from 'src/components/services/api';\r\nimport axios from 'axios';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport cpfMask from 'src/components/mascaras/cpf';\r\nimport dataMask from 'src/components/mascaras/datas';\r\nimport foneMask from 'src/components/mascaras/fone';\r\nimport celularMask from 'src/components/mascaras/celular';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  novoBox: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    alignItems: 'center',\r\n  },\r\n  alignBox: {\r\n    padding: theme.spacing(0),\r\n    // display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    // backgroundColor: 'blue',\r\n    // height: '330px',\r\n    marginTop: 20,\r\n  },\r\n  img: {\r\n    maxWidth: '1410px',\r\n    maxHeight: '600px',\r\n    width: '100%',\r\n    height: 'auto',\r\n  },\r\n  imgMobile: {\r\n    maxWidth: '1110px',\r\n    maxHeight: '500px',\r\n    width: '100%',\r\n    height: 'auto',\r\n  },\r\n  logo: {\r\n    height: '100%',\r\n    cursor: 'pointer',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginLeft: 2,\r\n    },\r\n  },\r\n  page: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // backgroundColor: 'blue',\r\n  },\r\n  caption: {\r\n    marginTop: -5,\r\n    marginLeft: 5,\r\n    textTransform: 'capitalize',\r\n    fontWeight: 1000,\r\n    display: '-webkit-box',\r\n    '-webkit-line-clamp': 2,\r\n    '-webkit-box-orient': 'vertical',\r\n    overflow: 'hidden',\r\n    fontSize: '40px',\r\n    '@media (min-width:600px)': {\r\n      fontSize: '20px',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n  typography: {\r\n    color: 'black',\r\n    fontWeight: 1000,\r\n    marginTop: -10,\r\n    marginLeft: 5,\r\n    display: '-webkit-box',\r\n    '-webkit-line-clamp': 2,\r\n    '-webkit-box-orient': 'vertical',\r\n    overflow: 'hidden',\r\n    fontSize: '30px',\r\n    '@media (min-width:600px)': {\r\n      fontSize: '20px',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n  rotulo: {\r\n    color: 'blue',\r\n    textTransform: 'capitalize',\r\n    fontWeight: 500,\r\n    display: '-webkit-box',\r\n    '-webkit-line-clamp': 2,\r\n    '-webkit-box-orient': 'vertical',\r\n    overflow: 'hidden',\r\n    fontSize: '30px',\r\n    '@media (min-width:600px)': {\r\n      fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '14px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '12px',\r\n    },\r\n  },\r\n  tf_12: {\r\n    // marginLeft: theme.spacing(1),\r\n    //  marginRight: theme.spacing(1),\r\n    width: '500px',\r\n    backgroundColor: '#e3f2fd',\r\n\r\n    margin: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '20',\r\n    },\r\n  },\r\n  tf_m: {\r\n    backgroundColor: '#e3f2fd',\r\n\r\n    width: '100%',\r\n    fontSize: '5px',\r\n  },\r\n\r\n  tf_6: {\r\n    //    marginRight: 8,\r\n    backgroundColor: '#e3f2fd',\r\n\r\n    margin: 10,\r\n    width: '240px',\r\n    textAlign: 'center',\r\n    // alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: 10,\r\n      width: '205px',\r\n    },\r\n  },\r\n  tf_4: {\r\n    margin: 10,\r\n    // marginRight: 8,\r\n    backgroundColor: '#e3f2fd',\r\n    width: '155px',\r\n    textAlign: 'center', // alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginLeft: 10,\r\n      width: '130px',\r\n    },\r\n  },\r\n  tf_3: {\r\n    margin: 10,\r\n    textAlign: 'center',\r\n    backgroundColor: '#e3f2fd',\r\n    // marginRight: 8,\r\n    width: '120px',\r\n    // alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginLeft: 10,\r\n      width: '110px',\r\n    },\r\n  },\r\n  root: {\r\n    // position: 'absolute',\r\n    width: '100%',\r\n    // marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nfunction DadosPessoais({ item, secao, ministros }) {\r\n  const classes = useStyles();\r\n  const dadosUser = item.filter((val) => val.email === secao.user.email);\r\n  const [nome, setNome] = React.useState('');\r\n  const [validarNome, setValidarNome] = React.useState('sim');\r\n  const [matricula, setMatricula] = React.useState('');\r\n  const [validarMatricula, setValidarMatricula] = React.useState('sim');\r\n  const [cpf, setCPF] = React.useState('');\r\n  const [validarCPF, setValidarCPF] = React.useState('sim');\r\n  const [rg, setRG] = React.useState('');\r\n  const [validarRG, setValidarRG] = React.useState('sim');\r\n  const [sexo, setSexo] = React.useState('');\r\n  const [validarSexo, setValidarSexo] = React.useState('sim');\r\n  const [jurisdicaoEstadual, setJurisdicaoEstadual] = React.useState('');\r\n  const [\r\n    validarJurisdicaoEstadual,\r\n    setValidarJurisdicaoEstadual,\r\n  ] = React.useState('sim');\r\n  const [distrito, setDistrito] = React.useState('');\r\n  const [validarDistrito, setValidarDistrito] = React.useState('sim');\r\n  const [grau, setGrau] = React.useState('');\r\n  const [validarGrau, setValidarGrau] = React.useState('sim');\r\n  const [formacaoEscolar, setFormacaoEscolar] = React.useState('');\r\n  const [validarFormacaoEscolar, setValidarFormacaoEscolar] = React.useState(\r\n    'sim',\r\n  );\r\n  const [conjuge, setConjuge] = React.useState('');\r\n  const [validarConjuge, setValidarConjuge] = React.useState('sim');\r\n  const [cpfConjuge, setCPFConjuge] = React.useState('');\r\n  const [validarCPFConjuge, setValidarCPFConjuge] = React.useState('sim');\r\n  const [celularConjuge, setcelularConjuge] = React.useState('');\r\n  const [validarCelularConjuge, setValidarCelularConjuge] = React.useState(\r\n    'sim',\r\n  );\r\n  const [logradouro, setLogradouro] = React.useState('');\r\n  const [validarLogradouro, setValidarLogradouro] = React.useState('sim');\r\n  const [numero, setNumero] = React.useState('');\r\n  const [validarNumero, setValidarNumero] = React.useState('sim');\r\n  const [complemento, setComplemento] = React.useState('');\r\n  const [validarComplemento, setValidarComplemento] = React.useState('sim');\r\n  const [bairro, setBairro] = React.useState('');\r\n  const [validarBairro, setValidarBairro] = React.useState('sim');\r\n  const [fone, setFone] = React.useState('');\r\n  const [validarFone, setValidarFone] = React.useState('sim');\r\n  const [celular, setCelular] = React.useState('');\r\n  const [validarCelular, setValidarCelular] = React.useState('sim');\r\n  const [email, setEmail] = React.useState('');\r\n  const [validarEmail, setValidarEmail] = React.useState('sim');\r\n  const [cidade, setCidade] = React.useState('');\r\n  const [validarCidade, setValidarCidade] = React.useState('sim');\r\n  const [cep, setCEP] = React.useState('');\r\n  const [validarCEP, setValidarCEP] = React.useState('sim');\r\n  const [uf, setUF] = React.useState('');\r\n  const [validarUF, setValidarUF] = React.useState('sim');\r\n  const [estadoCivil, setEstadoCivil] = React.useState('');\r\n  const [validarEstadoCivil, setValidarEstadoCivil] = React.useState('sim');\r\n  const [dataNascimento, setDataNascimento] = React.useState('');\r\n  const [validarDataNascimento, setValidarDataNascimento] = React.useState(\r\n    'sim',\r\n  );\r\n  const [conversao, setConversao] = React.useState('');\r\n  const [validarConversao, setValidarConversao] = React.useState('sim');\r\n  const [consagracao, setConsagracao] = React.useState('');\r\n  const [validarConsagracao, setValidarConsagracao] = React.useState('sim');\r\n  const [ascensao1, setAscensao1] = React.useState('');\r\n  const [validarAscencao1, setValidarAscencao1] = React.useState('sim');\r\n  const [ascensao2, setAscensao2] = React.useState('');\r\n  const [validarAscencao2, setValidarAscencao2] = React.useState('sim');\r\n  const [naturalidade, setNaturalidade] = React.useState('');\r\n  const [validarNaturalidade, setValidarNaturalidade] = React.useState('sim');\r\n  const [estadoNacimento, setEstadoNascimento] = React.useState('');\r\n  const [validarEstadoNascimento, setValidarEstadoNascimento] = React.useState(\r\n    'sim',\r\n  );\r\n  const [nacionalidade, setNacionalidade] = React.useState('');\r\n  const [validarNacionalidade, setValidarNacionalidade] = React.useState('sim');\r\n  const [informacoes, setInformacoes] = React.useState({\r\n    cep: '',\r\n    logradouro: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    localidade: '',\r\n    uf: '',\r\n    ibge: '',\r\n    gia: '',\r\n  });\r\n  const fetcher = (url) => axios.get(url).then((res) => res.data);\r\n\r\n  if (dadosUser.length === 0)\r\n    signOut({\r\n      callbackUrl: `${window.location.origin}`,\r\n    });\r\n  const dadosMinistro = ministros.filter(\r\n    (val) => val.Email === dadosUser[0].email,\r\n  );\r\n\r\n  if (dadosUser.length === 0)\r\n    signOut({\r\n      callbackUrl: `${window.location.origin}`,\r\n    });\r\n  const [selectedFile, setSelectedFile] = React.useState(\r\n    dadosMinistro[0].fotoPerfil ? dadosMinistro[0].fotoPerfil : '',\r\n  );\r\n\r\n  const [previews, setPreview] = React.useState([]);\r\n\r\n  const processUpload = (uploadedFile) => {\r\n    const nomeFoto = `${dadosMinistro[0].CPF}${uploadedFile.name.substring(\r\n      uploadedFile.name.lastIndexOf('.'),\r\n    )}`;\r\n    const dataFile = new FormData();\r\n    dataFile.append('file', uploadedFile, nomeFoto);\r\n\r\n    api\r\n      .post('api/fotos', dataFile)\r\n      .then((response) => {\r\n        if (response) console.log(response);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const onSelectFile = (e) => {\r\n    setPreview(e.target.files[0]);\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n  const [value, setValue] = React.useState('dPessoais');\r\n\r\n  const addTela = () => {\r\n    //  console.log(value);\r\n    if (value === 'dPessoais') setValue('endereço');\r\n    if (value === 'endereço') setValue('dadosIDPB');\r\n    //    if (contador === 3) setValue('dadosIDPB');\r\n  };\r\n  const subTela = () => {\r\n    if (value === 'endereço') setValue('dPessoais');\r\n    if (value === 'dadosIDPB') setValue('endereço');\r\n  };\r\n\r\n  const enviarFoto = () => processUpload(previews);\r\n  // const url = `${window.location.origin}/api/consultaEventos/${item[0].codigoIgreja}`;\r\n  // const { data, erroros } = useSWR(url, fetcher);\r\n  // useSWR('/api/user', (id = 4) => fetcher(id));\r\n  // useSWR('/api/consultaDados', fetcher);\r\n\r\n  //---------------------------------------------------------------------------\r\n  // const dadosMinistro = data.filter((val) => val.dataEvento === dataEvento);\r\n  let Nome = '';\r\n  let Matricula = '';\r\n  let CPF = '';\r\n  let RG = '';\r\n  let Sexo = '';\r\n  let JurisdicaoEstadual = '';\r\n  let Distrito = '';\r\n  let GrauMinisterial = '';\r\n  let FormacaoEscolar = '';\r\n  let Conjuge = '';\r\n  let CPFConjuge = '';\r\n  let CelularConjuge = '';\r\n  let Logradouro = '';\r\n  let Numero = '';\r\n  let Complemento = '';\r\n  let Bairro = '';\r\n  let TelefoneResidencial = '';\r\n  let Celular = '';\r\n  let Email = '';\r\n  let Cidade = '';\r\n  let CEP = '';\r\n  let UF = '';\r\n  let EstadoCivil = '';\r\n  let DataNascimento = '';\r\n  let DataConversao = '';\r\n  let DataConsagracao = '';\r\n  let DataAscensao1 = '';\r\n  let DataAscensao2 = '';\r\n  let Naturalidade = '';\r\n  let EstadoNascimento = '';\r\n  let Nacionalidade = '';\r\n\r\n  //  {dadosMinistro[0].FuncaoNaIgreja}\r\n  if (dadosMinistro.length !== 0) {\r\n    Nome = dadosMinistro[0].Nome;\r\n    Matricula = dadosMinistro[0].Matricula;\r\n    CPF = dadosMinistro[0].CPF;\r\n    RG = dadosMinistro[0].RG;\r\n    Sexo = dadosMinistro[0].Sexo;\r\n    JurisdicaoEstadual = dadosMinistro[0].JurisdicaoEstadual;\r\n    Distrito = dadosMinistro[0].Distrito;\r\n    GrauMinisterial = dadosMinistro[0].GrauMinisterial;\r\n    FormacaoEscolar = dadosMinistro[0].FormacaoEscolar;\r\n    Conjuge = dadosMinistro[0].Conjuge;\r\n    CPFConjuge = dadosMinistro[0].CPFConjuge;\r\n    CelularConjuge = dadosMinistro[0].CelularConjuge;\r\n    Logradouro = dadosMinistro[0].Logradouro;\r\n    Numero = dadosMinistro[0].Numero;\r\n    Complemento = dadosMinistro[0].Complemento;\r\n    Bairro = dadosMinistro[0].Bairro;\r\n    TelefoneResidencial = dadosMinistro[0].TelefoneResidencial;\r\n    Celular = dadosMinistro[0].Celular;\r\n    Email = dadosMinistro[0].Email;\r\n    Cidade = dadosMinistro[0].Cidade;\r\n    CEP = dadosMinistro[0].CEP;\r\n    UF = dadosMinistro[0].UF;\r\n    EstadoCivil = dadosMinistro[0].EstadoCivil;\r\n    DataNascimento = dadosMinistro[0].DataNascimento;\r\n    DataConversao = dadosMinistro[0].DataConversao;\r\n    DataConsagracao = dadosMinistro[0].DataConsagracao;\r\n    DataAscensao1 = dadosMinistro[0].DataAscensao1;\r\n    DataAscensao2 = dadosMinistro[0].DataAscensao2;\r\n    Naturalidade = dadosMinistro[0].Naturalidade;\r\n    EstadoNascimento = dadosMinistro[0].EstadoNascimento;\r\n    Nacionalidade = dadosMinistro[0].Nacionalidade;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  React.useEffect(() => {\r\n    if (dadosMinistro.length !== 0) {\r\n      setNome(Nome);\r\n      setCPF(CPF);\r\n      setMatricula(Matricula);\r\n      setRG(RG);\r\n      setSexo(Sexo);\r\n      setJurisdicaoEstadual(JurisdicaoEstadual);\r\n      setDistrito(Distrito);\r\n      setGrau(GrauMinisterial);\r\n      setFormacaoEscolar(FormacaoEscolar);\r\n      setConjuge(Conjuge);\r\n      setCPFConjuge(CPFConjuge);\r\n      setcelularConjuge(CelularConjuge);\r\n      setLogradouro(Logradouro);\r\n      setNumero(Numero);\r\n      setComplemento(Complemento);\r\n      setBairro(Bairro);\r\n      setFone(TelefoneResidencial);\r\n      setCelular(Celular);\r\n      setEmail(Email);\r\n      setCidade(Cidade);\r\n      setCEP(CEP);\r\n      setUF(UF);\r\n      setEstadoCivil(EstadoCivil);\r\n      setDataNascimento(DataNascimento);\r\n      setConversao(DataConversao);\r\n      setConsagracao(DataConsagracao);\r\n      setAscensao1(DataAscensao1);\r\n      setAscensao2(DataAscensao2);\r\n      setNaturalidade(Naturalidade);\r\n      setEstadoCivil(EstadoNascimento);\r\n      setNacionalidade(Nacionalidade);\r\n    }\r\n  }, []);\r\n  //--------------------------------------------------------------------------\r\n  const valid = () => {\r\n    if (\r\n      !nome ||\r\n      !matricula ||\r\n      !cpf ||\r\n      !rg ||\r\n      !jurisdicaoEstadual ||\r\n      !distrito ||\r\n      !grau\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  //--------------------------------------------------------------------------\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n\r\n  const submitData = async (e) => {\r\n    e.preventDefault();\r\n    const valida = valid();\r\n    setLoading(true);\r\n\r\n    if (valida) {\r\n      try {\r\n        const body = {\r\n          Nome,\r\n          Matricula,\r\n          CPF,\r\n          RG,\r\n          Sexo,\r\n          JurisdicaoEstadual,\r\n          Distrito,\r\n          GrauMinisterial,\r\n        };\r\n\r\n        let urlCreate = '';\r\n        if (dadosMinistro.length === 0) {\r\n          urlCreate = `${window.location.origin}/api/criarEvento`;\r\n        } else {\r\n          urlCreate = `${window.location.origin}/api/updateEvento/${ids}`;\r\n        }\r\n\r\n        await fetch(urlCreate, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n        });\r\n        setLoading(false);\r\n        setEditar(false);\r\n        mutate(url);\r\n      } catch (errors) {\r\n        console.errors();\r\n      }\r\n    }\r\n  };\r\n  const defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 1,\r\n    width: '95%',\r\n  };\r\n  const getInformacoes = () => {\r\n    axios.get(`http://viacep.com.br/ws/${cep}/json/`).then((response) => {\r\n      setInformacoes(response.data);\r\n      setLogradouro(response.data.logradouro);\r\n      setBairro(response.data.bairro);\r\n      setCidade(response.data.localidade);\r\n    });\r\n  };\r\n  const handleDados = () => {\r\n    setNome(Nome);\r\n  };\r\n  const Userform = (\r\n    <form noValidate autoComplete=\"off\" width=\"100%\" className={classes.root}>\r\n      {value === 'dPessoais' ? (\r\n        <Box>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <Grid item xs={12} md={3}>\r\n              <Box\r\n                mt={1}\r\n                className={classes.box}\r\n                width=\"100%\"\r\n                //            maxWidth={1200}\r\n                height=\"auto\"\r\n                // borderRadius={16}\r\n                {...defaultProps}\r\n              >\r\n                <Tooltip title=\"Click para Mudar\" aria-label=\"foto\">\r\n                  <Box className={classes.novoBox}>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      id=\"contained-button-file\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={onSelectFile}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                      <Image\r\n                        src={selectedFile}\r\n                        alt=\"\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </label>\r\n                  </Box>\r\n                </Tooltip>\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={9}>\r\n              <Box className={classes.alignBox}>\r\n                <Hidden smDown>\r\n                  <Box className={classes.page}>\r\n                    <Grid item xs={12} md={9}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Nome\"\r\n                          label=\"Nome\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            style: { textTransform: 'uppercase' },\r\n                            shrink: true,\r\n                          }}\r\n                          value={nome}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            nome === ''\r\n                              ? () => setValidarNome('nao')\r\n                              : () => setValidarNome('sim')\r\n                          }\r\n                          onChange={(e) => setNome(capitalize(e.target.value))}\r\n                          error={validarNome === 'nao'}\r\n                          onFocus={(e) => setNome(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Grau Ministerial\"\r\n                          label=\"Grau Ministerial\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={grau || GrauMinisterial}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            grau === ''\r\n                              ? () => setValidarGrau('nao')\r\n                              : () => setValidarGrau('sim')\r\n                          }\r\n                          onChange={(e) => setGrau(e.target.value)}\r\n                          error={validarGrau === 'nao'}\r\n                          onFocus={(e) => setGrau(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box mt={2} display=\"flex\" flexDirection=\"row\">\r\n                    <Grid item xs={12} md={6}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Email\"\r\n                          label=\"Email\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            style: { textTransform: 'uppercase' },\r\n                            shrink: true,\r\n                          }}\r\n                          value={email}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            email === ''\r\n                              ? () => setValidarEmail('nao')\r\n                              : () => setValidarEmail('sim')\r\n                          }\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                          error={validarEmail === 'nao'}\r\n                          onFocus={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"TelefoneCelular\"\r\n                          label=\"Telefone Celular\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={celularMask(celular)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            celular === ''\r\n                              ? () => setValidarCelular('nao')\r\n                              : () => setValidarCelular('sim')\r\n                          }\r\n                          onChange={(e) => setCelular(e.target.value)}\r\n                          error={validarCelular === 'nao'}\r\n                          onFocus={(e) => setCelular(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"TelefoneResidencial\"\r\n                          label=\"Telefone Residencial\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={foneMask(fone)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            fone === ''\r\n                              ? () => setValidarFone('nao')\r\n                              : () => setValidarFone('sim')\r\n                          }\r\n                          onChange={(e) => setFone(e.target.value)}\r\n                          error={validarFone === 'nao'}\r\n                          onFocus={(e) => setFone(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box mt={2} display=\"flex\" flexDirection=\"row\">\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Matricula\"\r\n                          label=\"Matricula\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={matricula}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          disabled\r\n                          onBlur={\r\n                            matricula === ''\r\n                              ? () => setValidarMatricula('nao')\r\n                              : () => setValidarMatricula('sim')\r\n                          }\r\n                          onChange={(e) => setMatricula(e.target.value)}\r\n                          error={validarMatricula === 'nao'}\r\n                          onFocus={(e) => setMatricula(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"CPF\"\r\n                          label=\"CPF\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={cpfMask(cpf)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            cpf === ''\r\n                              ? () => setValidarCPF('nao')\r\n                              : () => setValidarCPF('sim')\r\n                          }\r\n                          onChange={(e) => setCPF(e.target.value)}\r\n                          error={validarCPF === 'nao'}\r\n                          onFocus={(e) => setCPF(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"RG\"\r\n                          label=\"RG\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={rg || RG}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            rg === ''\r\n                              ? () => setValidarRG('nao')\r\n                              : () => setValidarRG('sim')\r\n                          }\r\n                          onChange={(e) => setRG(e.target.value)}\r\n                          error={validarRG === 'nao'}\r\n                          onFocus={(e) => setRG(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataNascimento\"\r\n                          label=\"Data de Nascimento\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={dataMask(dataNascimento)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            dataNascimento === ''\r\n                              ? () => setValidarDataNascimento('nao')\r\n                              : () => setValidarDataNascimento('sim')\r\n                          }\r\n                          onChange={(e) => setDataNascimento(e.target.value)}\r\n                          error={validarDataNascimento === 'nao'}\r\n                          onFocus={(e) => setDataNascimento(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataConversao\"\r\n                          label=\"Data de Conversão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={dataMask(DataConversao)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataConversao === ''\r\n                              ? () => setValidarConversao('nao')\r\n                              : () => setValidarConversao('sim')\r\n                          }\r\n                          onChange={(e) => setConversao(e.target.value)}\r\n                          error={validarConversao === 'nao'}\r\n                          onFocus={(e) => setConversao(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataConsagracao\"\r\n                          label=\"Data de Consagração\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataConsagracao)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataConsagracao === ''\r\n                              ? () => setValidarConsagracao('nao')\r\n                              : () => setValidarConsagracao('sim')\r\n                          }\r\n                          onChange={(e) => setConsagracao(e.target.value)}\r\n                          error={validarConsagracao === 'nao'}\r\n                          onFocus={(e) => setConsagracao(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataAscensao1\"\r\n                          label=\"Data 1º Ascensão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataAscensao1)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataAscensao1 === ''\r\n                              ? () => setValidarAscencao1('nao')\r\n                              : () => setValidarAscencao1('sim')\r\n                          }\r\n                          onChange={(e) => setAscensao1(e.target.value)}\r\n                          error={validarAscencao1 === 'nao'}\r\n                          onFocus={(e) => setAscensao1(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataAscensao2\"\r\n                          label=\"Data 2º Ascensão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataAscensao2)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataAscensao2 === ''\r\n                              ? () => setValidarAscencao2('nao')\r\n                              : () => setValidarAscencao2('sim')\r\n                          }\r\n                          onChange={(e) => setAscensao2(e.target.value)}\r\n                          error={validarAscencao2 === 'nao'}\r\n                          onFocus={(e) => setAscensao2(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                </Hidden>\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Hidden smUp>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n              <Grid item xs={12} md={12}>\r\n                <Box className={classes.novoBox}>\r\n                  <TextField\r\n                    className={classes.tf_m}\r\n                    id=\"Nome\"\r\n                    label=\"Nome\"\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={Nome || nome}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"\"\r\n                    size=\"small\"\r\n                    onBlur={\r\n                      nome === ''\r\n                        ? () => setValidarNome('nao')\r\n                        : () => setValidarNome('sim')\r\n                    }\r\n                    onChange={(e) => setNome(e.target.value)}\r\n                    error={validarNome === 'nao'}\r\n                    onFocus={(e) => setNome(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n              <Grid item xs={6}>\r\n                <Box className={classes.novoBox}>\r\n                  <TextField\r\n                    className={classes.tf_m}\r\n                    id=\"Matricula\"\r\n                    label=\"Matricula\"\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={Matricula || matricula}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"\"\r\n                    size=\"small\"\r\n                    onBlur={\r\n                      matricula === ''\r\n                        ? () => setValidarMatricula('nao')\r\n                        : () => setValidarMatricula('sim')\r\n                    }\r\n                    onChange={(e) => setMatricula(e.target.value)}\r\n                    error={validarMatricula === 'nao'}\r\n                    onFocus={(e) => setMatricula(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n          </Hidden>\r\n          <Divider variant=\"middle\" />\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Naturalidade\"\r\n                  label=\"Naturalidade\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Naturalidade}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Naturalidade === ''\r\n                      ? () => setValidarNaturalidade('nao')\r\n                      : () => setValidarNaturalidade('sim')\r\n                  }\r\n                  onChange={(e) => setNaturalidade(e.target.value)}\r\n                  error={validarNaturalidade === 'nao'}\r\n                  onFocus={(e) => setNaturalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"EstadoNascimento\"\r\n                  label=\"Estado do Nascimento\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={EstadoNascimento}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Nacionalidade === ''\r\n                      ? () => setEstadoNascimento('nao')\r\n                      : () => setEstadoNascimento('sim')\r\n                  }\r\n                  onChange={(e) => setNacionalidade(e.target.value)}\r\n                  error={validarNacionalidade === 'nao'}\r\n                  onFocus={(e) => setNacionalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Nacionalidade\"\r\n                  label=\"Nacionalidade\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Nacionalidade}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Nacionalidade === ''\r\n                      ? () => setNacionalidade('nao')\r\n                      : () => setNacionalidade('sim')\r\n                  }\r\n                  onChange={(e) => setNacionalidade(e.target.value)}\r\n                  error={validarNacionalidade === 'nao'}\r\n                  onFocus={(e) => setNacionalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Sexo\"\r\n                  label=\"Sexo\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={sexo}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    sexo === ''\r\n                      ? () => setValidarSexo('nao')\r\n                      : () => setValidarSexo('sim')\r\n                  }\r\n                  onChange={(e) => setSexo(e.target.value)}\r\n                  error={validarSexo === 'nao'}\r\n                  onFocus={(e) => setSexo(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"JurisdicaoEstadual\"\r\n                  label=\"Jurisdição Estadual\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={JurisdicaoEstadual}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    JurisdicaoEstadual === ''\r\n                      ? () => setValidarJurisdicaoEstadual('nao')\r\n                      : () => setValidarJurisdicaoEstadual('sim')\r\n                  }\r\n                  onChange={(e) => setJurisdicaoEstadual(e.target.value)}\r\n                  error={validarJurisdicaoEstadual === 'nao'}\r\n                  onFocus={(e) => setJurisdicaoEstadual(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Distrito\"\r\n                  label=\"Distrito\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Distrito}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Distrito === ''\r\n                      ? () => setDistrito('nao')\r\n                      : () => setDistrito('sim')\r\n                  }\r\n                  onChange={(e) => setDistrito(e.target.value)}\r\n                  error={validarDistrito === 'nao'}\r\n                  onFocus={(e) => setDistrito(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"FormacaoEscolar\"\r\n                  label=\"FormacaoEscolar\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={FormacaoEscolar}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    FormacaoEscolar === ''\r\n                      ? () => setFormacaoEscolar('nao')\r\n                      : () => setFormacaoEscolar('sim')\r\n                  }\r\n                  onChange={(e) => setFormacaoEscolar(e.target.value)}\r\n                  error={validarFormacaoEscolar === 'nao'}\r\n                  onFocus={(e) => setFormacaoEscolar(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Conjuge\"\r\n                  label=\"Cônjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Conjuge}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Conjuge === ''\r\n                      ? () => setValidarConjuge('nao')\r\n                      : () => setValidarConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setConjuge(e.target.value)}\r\n                  error={validarConjuge === 'nao'}\r\n                  onFocus={(e) => setConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"EstadoCivil\"\r\n                  label=\"Estado Civil\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={EstadoCivil}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    EstadoCivil === ''\r\n                      ? () => setEstadoCivil('nao')\r\n                      : () => setEstadoCivil('sim')\r\n                  }\r\n                  onChange={(e) => setEstadoCivil(e.target.value)}\r\n                  error={validarEstadoCivil === 'nao'}\r\n                  onFocus={(e) => setEstadoCivil(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"CPFConjuge\"\r\n                  label=\"CPF do Conjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={CPFConjuge}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    CPFConjuge === ''\r\n                      ? () => setCPFConjuge('nao')\r\n                      : () => setCPFConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setCPFConjuge(e.target.value)}\r\n                  error={validarCPFConjuge === 'nao'}\r\n                  onFocus={(e) => setCPFConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"TelefoneConjuge\"\r\n                  label=\"Telefone do Cônjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={celularMask(celularConjuge)}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    celularConjuge === ''\r\n                      ? () => setValidarCelularConjuge('nao')\r\n                      : () => setValidarCelularConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setcelularConjuge(e.target.value)}\r\n                  error={validarCelularConjuge === 'nao'}\r\n                  onFocus={(e) => setcelularConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      ) : null}\r\n\r\n      {value === 'endereço' ? (\r\n        <Box>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <Grid item xs={12} md={12}>\r\n              <Box className={classes.alignBox}>\r\n                <Hidden smDown>\r\n                  <Box className={classes.page}>\r\n                    <Grid item xs={12} md={2}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"CEP\"\r\n                          label=\"CEP\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={cep || CEP}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            getInformacoes\r\n                          } /* {\r\n                                cep === ''\r\n                                  ? () => setValidarCEP('nao')\r\n                                  : () => setValidarCEP('sim')\r\n                              } */\r\n                          onChange={(e) => setCEP(e.target.value)}\r\n                          error={validarCEP === 'nao'}\r\n                          onFocus={(e) => setCEP(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Logradouro\"\r\n                          label=\"Logradouro\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={logradouro}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            logradouro === ''\r\n                              ? () => setValidarLogradouro('nao')\r\n                              : () => setValidarLogradouro('sim')\r\n                          }\r\n                          onChange={(e) => setLogradouro(e.target.value)}\r\n                          error={validarLogradouro === 'nao'}\r\n                          onFocus={(e) => setLogradouro(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={2}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Numero\"\r\n                          label=\"Número\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={numero || Numero}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            numero === ''\r\n                              ? () => setValidarNumero('nao')\r\n                              : () => setValidarNumero('sim')\r\n                          }\r\n                          onChange={(e) => setNumero(e.target.value)}\r\n                          error={validarNumero === 'nao'}\r\n                          onFocus={(e) => setNumero(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box mt={2} display=\"flex\" flexDirection=\"row\">\r\n                    <Grid item xs={12} md={6}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Bairro\"\r\n                          label=\"Bairro\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            style: { textTransform: 'uppercase' },\r\n                            shrink: true,\r\n                          }}\r\n                          value={bairro}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            bairro === ''\r\n                              ? () => setValidarBairro('nao')\r\n                              : () => setValidarBairro('sim')\r\n                          }\r\n                          onChange={(e) => setBairro(e.target.value)}\r\n                          error={validarBairro === 'nao'}\r\n                          onFocus={(e) => setBairro(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Cidade\"\r\n                          label=\"Cidade\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={cidade}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            cidade === ''\r\n                              ? () => setValidarCidade('nao')\r\n                              : () => setValidarCidade('sim')\r\n                          }\r\n                          onChange={(e) => setCidade(e.target.value)}\r\n                          error={validarCidade === 'nao'}\r\n                          onFocus={(e) => setCidade(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"TelefoneResidencial\"\r\n                          label=\"Telefone Residencial\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={foneMask(fone)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            fone === ''\r\n                              ? () => setValidarFone('nao')\r\n                              : () => setValidarFone('sim')\r\n                          }\r\n                          onChange={(e) => setFone(e.target.value)}\r\n                          error={validarFone === 'nao'}\r\n                          onFocus={(e) => setFone(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box mt={2} display=\"flex\" flexDirection=\"row\">\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"Matricula\"\r\n                          label=\"Matricula\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={matricula}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          disabled\r\n                          onBlur={\r\n                            matricula === ''\r\n                              ? () => setValidarMatricula('nao')\r\n                              : () => setValidarMatricula('sim')\r\n                          }\r\n                          onChange={(e) => setMatricula(e.target.value)}\r\n                          error={validarMatricula === 'nao'}\r\n                          onFocus={(e) => setMatricula(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"CPF\"\r\n                          label=\"CPF\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={cpfMask(cpf)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            cpf === ''\r\n                              ? () => setValidarCPF('nao')\r\n                              : () => setValidarCPF('sim')\r\n                          }\r\n                          onChange={(e) => setCPF(e.target.value)}\r\n                          error={validarCPF === 'nao'}\r\n                          onFocus={(e) => setCPF(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"RG\"\r\n                          label=\"RG\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={rg || RG}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            rg === ''\r\n                              ? () => setValidarRG('nao')\r\n                              : () => setValidarRG('sim')\r\n                          }\r\n                          onChange={(e) => setRG(e.target.value)}\r\n                          error={validarRG === 'nao'}\r\n                          onFocus={(e) => setRG(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataNascimento\"\r\n                          label=\"Data de Nascimento\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={dataMask(dataNascimento)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            dataNascimento === ''\r\n                              ? () => setValidarDataNascimento('nao')\r\n                              : () => setValidarDataNascimento('sim')\r\n                          }\r\n                          onChange={(e) => setDataNascimento(e.target.value)}\r\n                          error={validarDataNascimento === 'nao'}\r\n                          onFocus={(e) => setDataNascimento(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataConversao\"\r\n                          label=\"Data de Conversão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          value={dataMask(DataConversao)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataConversao === ''\r\n                              ? () => setValidarConversao('nao')\r\n                              : () => setValidarConversao('sim')\r\n                          }\r\n                          onChange={(e) => setConversao(e.target.value)}\r\n                          error={validarConversao === 'nao'}\r\n                          onFocus={(e) => setConversao(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataConsagracao\"\r\n                          label=\"Data de Consagração\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataConsagracao)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataConsagracao === ''\r\n                              ? () => setValidarConsagracao('nao')\r\n                              : () => setValidarConsagracao('sim')\r\n                          }\r\n                          onChange={(e) => setConsagracao(e.target.value)}\r\n                          error={validarConsagracao === 'nao'}\r\n                          onFocus={(e) => setConsagracao(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataAscensao1\"\r\n                          label=\"Data 1º Ascensão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataAscensao1)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataAscensao1 === ''\r\n                              ? () => setValidarAscencao1('nao')\r\n                              : () => setValidarAscencao1('sim')\r\n                          }\r\n                          onChange={(e) => setAscensao1(e.target.value)}\r\n                          error={validarAscencao1 === 'nao'}\r\n                          onFocus={(e) => setAscensao1(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Box className={classes.novoBox}>\r\n                        <TextField\r\n                          className={classes.tf_m}\r\n                          id=\"DataAscensao2\"\r\n                          label=\"Data 2º Ascensão\"\r\n                          type=\"text\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          disabled\r\n                          value={dataMask(DataAscensao2)}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"\"\r\n                          size=\"small\"\r\n                          onBlur={\r\n                            DataAscensao2 === ''\r\n                              ? () => setValidarAscencao2('nao')\r\n                              : () => setValidarAscencao2('sim')\r\n                          }\r\n                          onChange={(e) => setAscensao2(e.target.value)}\r\n                          error={validarAscencao2 === 'nao'}\r\n                          onFocus={(e) => setAscensao2(e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                </Hidden>\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Hidden smUp>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n              <Grid item xs={12} md={12}>\r\n                <Box className={classes.novoBox}>\r\n                  <TextField\r\n                    className={classes.tf_m}\r\n                    id=\"Logradouro\"\r\n                    label=\"Logradouro\"\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={Logradouro || logradouro}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"\"\r\n                    size=\"small\"\r\n                    onBlur={\r\n                      logradouro === ''\r\n                        ? () => setValidarLogradouro('nao')\r\n                        : () => setValidarLogradouro('sim')\r\n                    }\r\n                    onChange={(e) => setLogradouro(e.target.value)}\r\n                    error={validarLogradouro === 'nao'}\r\n                    onFocus={(e) => setLogradouro(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n              <Grid item xs={6}>\r\n                <Box className={classes.novoBox}>\r\n                  <TextField\r\n                    className={classes.tf_m}\r\n                    id=\"Matricula\"\r\n                    label=\"Matricula\"\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={Matricula || matricula}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"\"\r\n                    size=\"small\"\r\n                    onBlur={\r\n                      matricula === ''\r\n                        ? () => setValidarMatricula('nao')\r\n                        : () => setValidarMatricula('sim')\r\n                    }\r\n                    onChange={(e) => setMatricula(e.target.value)}\r\n                    error={validarMatricula === 'nao'}\r\n                    onFocus={(e) => setMatricula(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n          </Hidden>\r\n          <Divider variant=\"middle\" />\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Naturalidade\"\r\n                  label=\"Naturalidade\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Naturalidade}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Naturalidade === ''\r\n                      ? () => setValidarNaturalidade('nao')\r\n                      : () => setValidarNaturalidade('sim')\r\n                  }\r\n                  onChange={(e) => setNaturalidade(e.target.value)}\r\n                  error={validarNaturalidade === 'nao'}\r\n                  onFocus={(e) => setNaturalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"EstadoNascimento\"\r\n                  label=\"Estado do Nascimento\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={EstadoNascimento}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Nacionalidade === ''\r\n                      ? () => setEstadoNascimento('nao')\r\n                      : () => setEstadoNascimento('sim')\r\n                  }\r\n                  onChange={(e) => setNacionalidade(e.target.value)}\r\n                  error={validarNacionalidade === 'nao'}\r\n                  onFocus={(e) => setNacionalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Nacionalidade\"\r\n                  label=\"Nacionalidade\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Nacionalidade}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Nacionalidade === ''\r\n                      ? () => setNacionalidade('nao')\r\n                      : () => setNacionalidade('sim')\r\n                  }\r\n                  onChange={(e) => setNacionalidade(e.target.value)}\r\n                  error={validarNacionalidade === 'nao'}\r\n                  onFocus={(e) => setNacionalidade(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Sexo\"\r\n                  label=\"Sexo\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={sexo}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    sexo === ''\r\n                      ? () => setValidarSexo('nao')\r\n                      : () => setValidarSexo('sim')\r\n                  }\r\n                  onChange={(e) => setSexo(e.target.value)}\r\n                  error={validarSexo === 'nao'}\r\n                  onFocus={(e) => setSexo(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"JurisdicaoEstadual\"\r\n                  label=\"Jurisdição Estadual\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={JurisdicaoEstadual}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    JurisdicaoEstadual === ''\r\n                      ? () => setValidarJurisdicaoEstadual('nao')\r\n                      : () => setValidarJurisdicaoEstadual('sim')\r\n                  }\r\n                  onChange={(e) => setJurisdicaoEstadual(e.target.value)}\r\n                  error={validarJurisdicaoEstadual === 'nao'}\r\n                  onFocus={(e) => setJurisdicaoEstadual(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={3}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Distrito\"\r\n                  label=\"Distrito\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Distrito}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Distrito === ''\r\n                      ? () => setDistrito('nao')\r\n                      : () => setDistrito('sim')\r\n                  }\r\n                  onChange={(e) => setDistrito(e.target.value)}\r\n                  error={validarDistrito === 'nao'}\r\n                  onFocus={(e) => setDistrito(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"FormacaoEscolar\"\r\n                  label=\"FormacaoEscolar\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={FormacaoEscolar}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    FormacaoEscolar === ''\r\n                      ? () => setFormacaoEscolar('nao')\r\n                      : () => setFormacaoEscolar('sim')\r\n                  }\r\n                  onChange={(e) => setFormacaoEscolar(e.target.value)}\r\n                  error={validarFormacaoEscolar === 'nao'}\r\n                  onFocus={(e) => setFormacaoEscolar(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"Conjuge\"\r\n                  label=\"Cônjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={Conjuge}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    Conjuge === ''\r\n                      ? () => setValidarConjuge('nao')\r\n                      : () => setValidarConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setConjuge(e.target.value)}\r\n                  error={validarConjuge === 'nao'}\r\n                  onFocus={(e) => setConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"EstadoCivil\"\r\n                  label=\"Estado Civil\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={EstadoCivil}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    EstadoCivil === ''\r\n                      ? () => setEstadoCivil('nao')\r\n                      : () => setEstadoCivil('sim')\r\n                  }\r\n                  onChange={(e) => setEstadoCivil(e.target.value)}\r\n                  error={validarEstadoCivil === 'nao'}\r\n                  onFocus={(e) => setEstadoCivil(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"CPFConjuge\"\r\n                  label=\"CPF do Conjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={CPFConjuge}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    CPFConjuge === ''\r\n                      ? () => setCPFConjuge('nao')\r\n                      : () => setCPFConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setCPFConjuge(e.target.value)}\r\n                  error={validarCPFConjuge === 'nao'}\r\n                  onFocus={(e) => setCPFConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Box className={classes.novoBox}>\r\n                <TextField\r\n                  className={classes.tf_m}\r\n                  id=\"TelefoneConjuge\"\r\n                  label=\"Telefone do Cônjuge\"\r\n                  type=\"text\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={celularMask(celularConjuge)}\r\n                  variant=\"outlined\"\r\n                  placeholder=\"\"\r\n                  size=\"small\"\r\n                  onBlur={\r\n                    celularConjuge === ''\r\n                      ? () => setValidarCelularConjuge('nao')\r\n                      : () => setValidarCelularConjuge('sim')\r\n                  }\r\n                  onChange={(e) => setcelularConjuge(e.target.value)}\r\n                  error={validarCelularConjuge === 'nao'}\r\n                  onFocus={(e) => setcelularConjuge(e.target.value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      ) : null}\r\n      <Button onClick={enviarFoto}>Send</Button>\r\n      {value === 'dPessoais' ? (\r\n        <Button onClick={subTela} disabled>\r\n          Anterior\r\n        </Button>\r\n      ) : (\r\n        <Button onClick={subTela}>Anterior</Button>\r\n      )}\r\n      {value !== 'dadosIDPB' && <Button onClick={addTela}>Próxima</Button>}\r\n      {value === 'dadosIDPB' && <Button onClick={addTela}>Salvar</Button>}\r\n    </form>\r\n  );\r\n  return <>{secao ? <Box>{UserForm}</Box> : null}</>;\r\n}\r\n\r\nexport default DadosPessoais;\r\n"]},"metadata":{},"sourceType":"module"}