{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\pages\\\\relatorios.js\";\nimport React from 'react';\nimport { useSession } from 'next-auth/client'; // import { PrismaClient } from '@prisma/client';\n\nimport prisma from 'src/lib/prisma';\nimport { PageRelatorios } from 'src/components/relatorios/index';\nimport { PageRelSuper } from 'src/components/relSupervisao/index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport userPerfil from './userPerfil';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})); // import { PrismaClient } from '@prisma/client';\n// import useSWR from 'swr';\n// import fetch from 'unfetch';\n\nfunction relatorio({\n  org\n}) {\n  const classes = useStyles();\n  const [session] = useSession();\n  let secao = [{\n    email: ''\n  }];\n\n  if (session) {\n    secao = org.filter(val => val.email === session.user.email);\n\n    if (secao.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          className: classes.root,\n          children: \"Ocorreu um Erro ao fazer o Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.root,\n          children: [\"email: \", session.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.root,\n          children: \"n\\xE3o foi cadastrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [secao[0].NivelUser === 'ministro' ? /*#__PURE__*/_jsxDEV(PageRelatorios, {\n        item: org,\n        userPerfil: userPerfil,\n        title: \"SISTEMA-IDPB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : null, secao[0].NivelUser === 'sup-MM' ? /*#__PURE__*/_jsxDEV(PageRelSuper, {\n        item: org,\n        title: \"SISTEMA-IDPB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    align: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"IDPB - Pregando a palavra no poder do Esp\\xEDrito Santo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getStaticProps = async () => {\n  // pega o valor do banco de dados\n  const posts = await prisma.user.findMany();\n  return {\n    props: {\n      org: JSON.parse(JSON.stringify(posts))\n    } // will be passed to the page component as props\n    //  revalidate: 15, // faz atualizar a pagina de 15 em 15 segundo sem fazer build\n\n  };\n};\nexport default relatorio;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/relatorios.js"],"names":["React","useSession","prisma","PageRelatorios","PageRelSuper","makeStyles","Box","userPerfil","useStyles","root","display","alignItems","justifyContent","modal","relatorio","org","classes","session","secao","email","filter","val","user","length","NivelUser","getStaticProps","posts","findMany","props","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { useSession } from 'next-auth/client';\r\n// import { PrismaClient } from '@prisma/client';\r\nimport prisma from 'src/lib/prisma';\r\nimport { PageRelatorios } from 'src/components/relatorios/index';\r\nimport { PageRelSuper } from 'src/components/relSupervisao/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\nimport userPerfil from './userPerfil';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n// import { PrismaClient } from '@prisma/client';\r\n\r\n// import useSWR from 'swr';\r\n// import fetch from 'unfetch';\r\n\r\nfunction relatorio({ org }) {\r\n  const classes = useStyles();\r\n  const [session] = useSession();\r\n  let secao = [{ email: '' }];\r\n\r\n  if (session) {\r\n    secao = org.filter((val) => val.email === session.user.email);\r\n\r\n    if (secao.length === 0) {\r\n      return (\r\n        <Box mt={5}>\r\n          <br />\r\n          <br />\r\n          <Box mt={5} className={classes.root}>\r\n            Ocorreu um Erro ao fazer o Login\r\n          </Box>\r\n          <Box className={classes.root}>email: {session.user.email}</Box>\r\n          <Box className={classes.root}>não foi cadastrado</Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {secao[0].NivelUser === 'ministro' ? (\r\n          <PageRelatorios\r\n            item={org}\r\n            userPerfil={userPerfil}\r\n            title=\"SISTEMA-IDPB\"\r\n          />\r\n        ) : null}\r\n        {secao[0].NivelUser === 'sup-MM' ? (\r\n          <PageRelSuper item={org} title=\"SISTEMA-IDPB\" />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <Box align=\"center\" justifyContent=\"center\">\r\n      <h4>IDPB - Pregando a palavra no poder do Espírito Santo </h4>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const getStaticProps = async () => {\r\n  // pega o valor do banco de dados\r\n\r\n  const posts = await prisma.user.findMany();\r\n  return {\r\n    props: {\r\n      org: JSON.parse(JSON.stringify(posts)),\r\n    }, // will be passed to the page component as props\r\n    //  revalidate: 15, // faz atualizar a pagina de 15 em 15 segundo sem fazer build\r\n  };\r\n};\r\n\r\nexport default relatorio;\r\n"]},"metadata":{},"sourceType":"module"}