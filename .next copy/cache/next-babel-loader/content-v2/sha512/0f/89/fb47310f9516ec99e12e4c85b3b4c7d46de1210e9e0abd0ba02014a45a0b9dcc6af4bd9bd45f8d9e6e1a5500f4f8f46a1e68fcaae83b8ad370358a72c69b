{"ast":null,"code":"import aws from 'aws-sdk';\n\nconst downloadImgS3 = () => {\n  const region = process.env.AWSREGION;\n  const bucketName = 'sistemaidpb';\n  const accessKeyId = process.env.AWSACCESS_KEY;\n  const secretAccessKey = process.env.AWSSECRET_KEY;\n  const s3 = new aws.S3({\n    region,\n    accessKeyId,\n    secretAccessKey,\n    signatureVersion: 'v4'\n  });\n  const params = {\n    Bucket: bucketName,\n    Key: 'ARACAJU.png'\n  };\n\n  const handleDownload = () => {\n    console.log('lugar 1');\n\n    function downloadBlob(blob, name = 'ARACAJU.png') {\n      // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n      const blobUrl = URL.createObjectURL(blob); // Create a link element\n\n      const link = document.createElement('a'); // Set link's href to point to the Blob URL\n\n      link.href = blobUrl;\n      link.download = name; // Append link to the body\n\n      document.body.appendChild(link); // Dispatch click event on the link\n      // This is necessary as link.click() does not work on the latest firefox\n\n      link.dispatchEvent(new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n      })); // Remove link from body\n\n      document.body.removeChild(link);\n    }\n\n    s3.getObject(params, (err, data) => {\n      if (err) {\n        console.log('lugar 2-erro');\n        console.log(err, err.stack);\n      } else {\n        console.log('csvBlob:', data.Body); //  const blob = new Blob([image], {type: 'image/png'})\n        // const img = URL.createObjectURL(blob);\n\n        const csvBlob = new Blob([data.Body], {\n          type: 'image/*'\n        });\n        downloadBlob(csvBlob, 'ARACAJU.png');\n      }\n    });\n  };\n\n  handleDownload();\n};\n\nexport default downloadImgS3;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/downloadImgS3.js"],"names":["aws","downloadImgS3","region","process","env","AWSREGION","bucketName","accessKeyId","AWSACCESS_KEY","secretAccessKey","AWSSECRET_KEY","s3","S3","signatureVersion","params","Bucket","Key","handleDownload","console","log","downloadBlob","blob","name","blobUrl","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","getObject","err","data","stack","Body","csvBlob","Blob","type"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA3B;AACA,QAAMC,UAAU,GAAG,aAAnB;AACA,QAAMC,WAAW,GAAGJ,OAAO,CAACC,GAAR,CAAYI,aAAhC;AACA,QAAMC,eAAe,GAAGN,OAAO,CAACC,GAAR,CAAYM,aAApC;AACA,QAAMC,EAAE,GAAG,IAAIX,GAAG,CAACY,EAAR,CAAW;AACpBV,IAAAA,MADoB;AAEpBK,IAAAA,WAFoB;AAGpBE,IAAAA,eAHoB;AAIpBI,IAAAA,gBAAgB,EAAE;AAJE,GAAX,CAAX;AAOA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAET,UADK;AAEbU,IAAAA,GAAG,EAAE;AAFQ,GAAf;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAEA,aAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAAI,GAAG,aAAnC,EAAkD;AAChD;AACA,YAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAhB,CAFgD,CAGhD;;AACA,YAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb,CAJgD,CAKhD;;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAYN,OAAZ;AACAG,MAAAA,IAAI,CAACI,QAAL,GAAgBR,IAAhB,CAPgD,CAQhD;;AACAK,MAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B,EATgD,CAUhD;AACA;;AACAA,MAAAA,IAAI,CAACO,aAAL,CACE,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AACtBC,QAAAA,OAAO,EAAE,IADa;AAEtBC,QAAAA,UAAU,EAAE,IAFU;AAGtBC,QAAAA,IAAI,EAAEC;AAHgB,OAAxB,CADF,EAZgD,CAoBhD;;AACAX,MAAAA,QAAQ,CAACI,IAAT,CAAcQ,WAAd,CAA0Bb,IAA1B;AACD;;AAEDf,IAAAA,EAAE,CAAC6B,SAAH,CAAa1B,MAAb,EAAqB,CAAC2B,GAAD,EAAMC,IAAN,KAAe;AAClC,UAAID,GAAJ,EAAS;AACPvB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ,EAAiBA,GAAG,CAACE,KAArB;AACD,OAHD,MAGO;AACLzB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,IAAI,CAACE,IAA7B,EADK,CAEL;AACA;;AACA,cAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACJ,IAAI,CAACE,IAAN,CAAT,EAAsB;AACpCG,UAAAA,IAAI,EAAE;AAD8B,SAAtB,CAAhB;AAIA3B,QAAAA,YAAY,CAACyB,OAAD,EAAU,aAAV,CAAZ;AACD;AACF,KAdD;AAeD,GA1CD;;AA4CA5B,EAAAA,cAAc;AACf,CA7DD;;AA+DA,eAAehB,aAAf","sourcesContent":["import aws from 'aws-sdk';\r\n\r\nconst downloadImgS3 = () => {\r\n  const region = process.env.AWSREGION;\r\n  const bucketName = 'sistemaidpb';\r\n  const accessKeyId = process.env.AWSACCESS_KEY;\r\n  const secretAccessKey = process.env.AWSSECRET_KEY;\r\n  const s3 = new aws.S3({\r\n    region,\r\n    accessKeyId,\r\n    secretAccessKey,\r\n    signatureVersion: 'v4',\r\n  });\r\n\r\n  const params = {\r\n    Bucket: bucketName,\r\n    Key: 'ARACAJU.png',\r\n  };\r\n  const handleDownload = () => {\r\n    console.log('lugar 1');\r\n\r\n    function downloadBlob(blob, name = 'ARACAJU.png') {\r\n      // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\r\n      const blobUrl = URL.createObjectURL(blob);\r\n      // Create a link element\r\n      const link = document.createElement('a');\r\n      // Set link's href to point to the Blob URL\r\n      link.href = blobUrl;\r\n      link.download = name;\r\n      // Append link to the body\r\n      document.body.appendChild(link);\r\n      // Dispatch click event on the link\r\n      // This is necessary as link.click() does not work on the latest firefox\r\n      link.dispatchEvent(\r\n        new MouseEvent('click', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: window,\r\n        }),\r\n      );\r\n\r\n      // Remove link from body\r\n      document.body.removeChild(link);\r\n    }\r\n\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.log('lugar 2-erro');\r\n        console.log(err, err.stack);\r\n      } else {\r\n        console.log('csvBlob:', data.Body);\r\n        //  const blob = new Blob([image], {type: 'image/png'})\r\n        // const img = URL.createObjectURL(blob);\r\n        const csvBlob = new Blob([data.Body], {\r\n          type: 'image/*',\r\n        });\r\n\r\n        downloadBlob(csvBlob, 'ARACAJU.png');\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDownload();\r\n};\r\n\r\nexport default downloadImgS3;\r\n"]},"metadata":{},"sourceType":"module"}