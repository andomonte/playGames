{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\fileList\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport { uniqueId } from 'lodash';\nimport api from 'src/components/services/api';\nimport { Container, FileInfo, Preview } from './styles';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst fileList = ({\n  files\n}) => {\n  const newValue = [...new Map(files.map(item => [item.name, item])).values()];\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n\n  const updateFile = (id, data) => {\n    setState(newValue.map(uploadedFile => id === uploadedFile.id ? _objectSpread(_objectSpread({}, uploadedFile), data) : uploadedFile));\n  };\n\n  const processUpload = uploadedFile => {\n    const data = new FormData();\n    console.log('valor a ser enviado:', uploadedFile);\n    data.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', data, {\n      onUploadProgress: e => {\n        const progress = Number(Math.round(e.loaded * 100 / e.total));\n        updateFile(uploadedFile.id, {\n          progress\n        });\n        console.log('progress:', e);\n      }\n    });\n  };\n\n  const iniciarEnvio = () => {\n    newValue.forEach(processUpload);\n  };\n\n  useEffect(() => {\n    iniciarEnvio();\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: state.map(uploadedFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FileInfo, {\n          children: [/*#__PURE__*/_jsxDEV(Preview, {\n            src: uploadedFile.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: uploadedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [uploadedFile.readableSize, uploadedFile.url && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {},\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!uploadedFile.uploaded && !uploadedFile.error && /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            styles: {\n              root: {\n                width: 30\n              },\n              path: {\n                stroke: '#7159c1'\n              }\n            },\n            strokeWidth: 10,\n            percentage: uploadedFile.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), uploadedFile.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(MdLink, {\n              styles: {\n                marginRight: 8\n              },\n              size: 24,\n              color: \"#222\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), uploadedFile.uploaded && /*#__PURE__*/_jsxDEV(MdCheckCircle, {\n            size: 24,\n            color: \"#78e5d5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), uploadedFile.error && /*#__PURE__*/_jsxDEV(MdError, {\n            size: 24,\n            color: \"#e57878\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default fileList;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/fileList/index.js"],"names":["React","useState","useEffect","CircularProgressbar","MdCheckCircle","MdError","MdLink","uniqueId","api","Container","FileInfo","Preview","fileList","files","newValue","Map","map","item","name","values","state","setState","updateFile","id","data","uploadedFile","processUpload","FormData","console","log","append","file","post","onUploadProgress","e","progress","Number","Math","round","loaded","total","iniciarEnvio","forEach","preview","readableSize","url","uploaded","error","root","width","path","stroke","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\r\nimport { uniqueId } from 'lodash';\r\nimport api from 'src/components/services/api';\r\n\r\nimport { Container, FileInfo, Preview } from './styles';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst fileList = ({ files }) => {\r\n  const newValue = [\r\n    ...new Map(files.map((item) => [item.name, item])).values(),\r\n  ];\r\n  const [state, setState] = useState([]);\r\n\r\n  const updateFile = (id, data) => {\r\n    setState(\r\n      newValue.map((uploadedFile) =>\r\n        id === uploadedFile.id ? { ...uploadedFile, ...data } : uploadedFile,\r\n      ),\r\n    );\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const data = new FormData();\r\n    console.log('valor a ser enviado:', uploadedFile);\r\n    data.append('file', uploadedFile.file, uploadedFile.name);\r\n    api.post('api/fotos', data, {\r\n      onUploadProgress: (e) => {\r\n        const progress = Number(Math.round((e.loaded * 100) / e.total));\r\n        updateFile(uploadedFile.id, { progress });\r\n        console.log('progress:', e);\r\n      },\r\n    });\r\n  };\r\n  const iniciarEnvio = () => {\r\n    newValue.forEach(processUpload);\r\n  };\r\n  useEffect(() => {\r\n    iniciarEnvio();\r\n  }, [files]);\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {state.map((uploadedFile) => (\r\n          <li key={uniqueId()}>\r\n            <FileInfo>\r\n              <Preview src={uploadedFile.preview} />\r\n              <div>\r\n                <strong>{uploadedFile.name}</strong>\r\n                <span>\r\n                  {uploadedFile.readableSize}\r\n                  {uploadedFile.url && (\r\n                    <button type=\"button\" onClick={() => {}}>\r\n                      Excluir\r\n                    </button>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </FileInfo>\r\n            <div>\r\n              {!uploadedFile.uploaded && !uploadedFile.error && (\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: 30 },\r\n                    path: { stroke: '#7159c1' },\r\n                  }}\r\n                  strokeWidth={10}\r\n                  percentage={uploadedFile.progress}\r\n                />\r\n              )}\r\n              {uploadedFile.url && (\r\n                <a\r\n                  href=\"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <MdLink styles={{ marginRight: 8 }} size={24} color=\"#222\" />\r\n                </a>\r\n              )}\r\n              {uploadedFile.uploaded && (\r\n                <MdCheckCircle size={24} color=\"#78e5d5\" />\r\n              )}\r\n              {uploadedFile.error && <MdError size={24} color=\"#e57878\" />}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default fileList;\r\n"]},"metadata":{},"sourceType":"module"}