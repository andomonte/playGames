{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\midiaPlay\\\\userTelas\\\\Upload.js\";\nimport { useState } from 'react';\nimport Spinner from './Spinner';\nimport Video from './Video';\nexport default function Upload() {\n  const {\n    0: showSpinner,\n    1: setShowSpinner\n  } = useState(false);\n  const {\n    0: showVideo,\n    1: setShowVideo\n  } = useState(false);\n  const {\n    0: publicId,\n    1: setPublicId\n  } = useState('');\n\n  const onChange = async event => {\n    setShowSpinner(true);\n    event.preventDefault();\n    const formData = new FormData();\n    const file = event.target.files[0];\n    formData.append('inputFile', file);\n\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setPublicId(data.public_id);\n    } catch (error) {\n      setShowSpinner(false);\n    } finally {\n      setShowSpinner(false);\n      setShowVideo(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      displayed: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Video, {\n      publicId: publicId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/midiaPlay/userTelas/Upload.js"],"names":["useState","Spinner","Video","Upload","showSpinner","setShowSpinner","showVideo","setShowVideo","publicId","setPublicId","onChange","event","preventDefault","formData","FormData","file","target","files","append","response","fetch","method","body","data","json","public_id","error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMU,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCN,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAM,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAJ,IAAAA,QAAQ,CAACK,MAAT,CAAgB,WAAhB,EAA6BH,IAA7B;;AAEA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,IAAI,EAAET;AAFoC,OAAhB,CAA5B;AAIA,YAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAf,MAAAA,WAAW,CAACc,IAAI,CAACE,SAAN,CAAX;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdrB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KATD,SASU;AACRA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GApBD;;AAqBA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEI;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD","sourcesContent":["import { useState } from 'react';\r\nimport Spinner from './Spinner';\r\nimport Video from './Video';\r\n\r\nexport default function Upload() {\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showVideo, setShowVideo] = useState(false);\r\n  const [publicId, setPublicId] = useState('');\r\n  const onChange = async (event) => {\r\n    setShowSpinner(true);\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    const file = event.target.files[0];\r\n    formData.append('inputFile', file);\r\n\r\n    try {\r\n      const response = await fetch('/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n      setPublicId(data.public_id);\r\n    } catch (error) {\r\n      setShowSpinner(false);\r\n    } finally {\r\n      setShowSpinner(false);\r\n      setShowVideo(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Spinner displayed={showSpinner} />\r\n      <Video publicId={publicId} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}