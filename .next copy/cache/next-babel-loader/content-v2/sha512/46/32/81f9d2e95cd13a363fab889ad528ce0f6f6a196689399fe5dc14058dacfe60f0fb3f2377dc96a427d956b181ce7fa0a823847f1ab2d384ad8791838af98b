{"ast":null,"code":"import aws from 'aws-sdk'; // import crypto from 'crypto';\n// import { promisify } from 'util';\n// const randomBytes = promisify(crypto.randomBytes);\n\nconst region = process.env.AWSREGION;\nconst bucketName = 'sistemaidpb';\nconst accessKeyId = process.env.AWSACCESS_KEY;\nconst secretAccessKey = process.env.AWSSECRET_KEY;\naws.config.update({\n  secretAccessKey: process.env.AWSSECRET_KEY,\n  accessKeyId: process.env.AWSACCESS_KEY,\n  region: process.env.AWSREGION\n});\nconst s3 = new aws.S3({\n  region,\n  accessKeyId,\n  secretAccessKey,\n  signatureVersion: 'v4'\n});\nexport async function uploadVideosS3({\n  fileName\n}) {\n  // const rawBytes = await randomBytes(16);\n  // const imageName = rawBytes.toString('hex');\n  const params = {\n    Bucket: bucketName,\n    Key: fileName.fileName\n  };\n  const uploadURL = await s3.getSignedUrlPromise('putObject', params);\n  return uploadURL;\n}\nexport default uploadVideosS3;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/uploadImagensS3.js"],"names":["aws","region","process","env","AWSREGION","bucketName","accessKeyId","AWSACCESS_KEY","secretAccessKey","AWSSECRET_KEY","config","update","s3","S3","signatureVersion","uploadVideosS3","fileName","params","Bucket","Key","uploadURL","getSignedUrlPromise"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB,C,CACA;AACA;AAEA;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA3B;AACA,MAAMC,UAAU,GAAG,aAAnB;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAACC,GAAR,CAAYI,aAAhC;AACA,MAAMC,eAAe,GAAGN,OAAO,CAACC,GAAR,CAAYM,aAApC;AAEAT,GAAG,CAACU,MAAJ,CAAWC,MAAX,CAAkB;AAChBH,EAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM,aADb;AAEhBH,EAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,aAFT;AAGhBN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHJ,CAAlB;AAMA,MAAMQ,EAAE,GAAG,IAAIZ,GAAG,CAACa,EAAR,CAAW;AACpBZ,EAAAA,MADoB;AAEpBK,EAAAA,WAFoB;AAGpBE,EAAAA,eAHoB;AAIpBM,EAAAA,gBAAgB,EAAE;AAJE,CAAX,CAAX;AAOA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AACjD;AACA;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEb,UADK;AAEbc,IAAAA,GAAG,EAAEH,QAAQ,CAACA;AAFD,GAAf;AAKA,QAAMI,SAAS,GAAG,MAAMR,EAAE,CAACS,mBAAH,CAAuB,WAAvB,EAAoCJ,MAApC,CAAxB;AAEA,SAAOG,SAAP;AACD;AAED,eAAeL,cAAf","sourcesContent":["import aws from 'aws-sdk';\r\n// import crypto from 'crypto';\r\n// import { promisify } from 'util';\r\n\r\n// const randomBytes = promisify(crypto.randomBytes);\r\n\r\nconst region = process.env.AWSREGION;\r\nconst bucketName = 'sistemaidpb';\r\nconst accessKeyId = process.env.AWSACCESS_KEY;\r\nconst secretAccessKey = process.env.AWSSECRET_KEY;\r\n\r\naws.config.update({\r\n  secretAccessKey: process.env.AWSSECRET_KEY,\r\n  accessKeyId: process.env.AWSACCESS_KEY,\r\n  region: process.env.AWSREGION,\r\n});\r\n\r\nconst s3 = new aws.S3({\r\n  region,\r\n  accessKeyId,\r\n  secretAccessKey,\r\n  signatureVersion: 'v4',\r\n});\r\n\r\nexport async function uploadVideosS3({ fileName }) {\r\n  // const rawBytes = await randomBytes(16);\r\n  // const imageName = rawBytes.toString('hex');\r\n\r\n  const params = {\r\n    Bucket: bucketName,\r\n    Key: fileName.fileName,\r\n  };\r\n\r\n  const uploadURL = await s3.getSignedUrlPromise('putObject', params);\r\n\r\n  return uploadURL;\r\n}\r\n\r\nexport default uploadVideosS3;\r\n"]},"metadata":{},"sourceType":"module"}