{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\utils\\\\uploadImagensS3.js\";\nimport aws from 'aws-sdk'; // import crypto from 'crypto';\n// import { promisify } from 'util';\n\nimport { HttpRequest } from '@aws-sdk/protocol-http';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { parseUrl } from '@aws-sdk/url-parser';\nimport { Sha256 } from '@aws-crypto/sha256-browser';\nimport { Hash } from '@aws-sdk/hash-node';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport Iframe from 'react-iframe'; // const randomBytes = promisify(crypto.randomBytes);\n\nconst region = process.env.AWSREGION;\nconst bucketName = 'sistemaidpb';\nconst accessKeyId = process.env.AWSACCESS_KEY;\nconst secretAccessKey = process.env.AWSSECRET_KEY;\naws.config.update({\n  secretAccessKey: process.env.AWSSECRET_KEY,\n  accessKeyId: process.env.AWSACCESS_KEY,\n  region: process.env.AWSREGION\n});\nconst credentials = {\n  accessKeyId,\n  secretAccessKey,\n  signatureVersion: 'v4'\n};\nexport async function uploadVideosS3(fileName) {\n  // const rawBytes = await randomBytes(16);\n  // const imageName = rawBytes.toString('hex');\n  const params = {\n    Bucket: bucketName,\n    Key: fileName\n  }; // pergar URL DO bucket\n  // const uploadURL = await s3.getSignedUrlPromise('putObject', params);\n\n  const s3ObjectUrl = parseUrl(`https://${bucketName}.s3.${region}.amazonaws.com/${fileName}`);\n  const presigner = new S3RequestPresigner({\n    credentials,\n    region,\n    // sha256: Hash.bind(null, 'sha256'), // In Node.js\n    sha256: Sha256 // In browsers\n\n  }); // Create a GET request from S3 url.\n\n  console.log('filenName', fileName);\n  const uploadURL = await presigner.presign(new HttpRequest(s3ObjectUrl));\n  console.log('PRESIGNED URL: ', formatUrl(uploadURL));\n  const urls = formatUrl(uploadURL); // pegar a lista do bucket\n\n  /*   const uploadURL = await s3\r\n    .listObjectsV2({\r\n      Bucket: bucketName,\r\n    })\r\n    .promise();\r\n  */\n\n  return (console.log('vai logo'), /*#__PURE__*/_jsxDEV(Iframe, {\n    url: urls,\n    width: \"150px\",\n    height: \"150px\",\n    id: \"myId\",\n    className: \"myClassname\",\n    display: \"initial\",\n    position: \"relative\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this)), formatUrl(uploadURL);\n}\nexport default uploadVideosS3;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/uploadImagensS3.js"],"names":["aws","HttpRequest","S3RequestPresigner","parseUrl","Sha256","Hash","formatUrl","Iframe","region","process","env","AWSREGION","bucketName","accessKeyId","AWSACCESS_KEY","secretAccessKey","AWSSECRET_KEY","config","update","credentials","signatureVersion","uploadVideosS3","fileName","params","Bucket","Key","s3ObjectUrl","presigner","sha256","console","log","uploadURL","presign","urls"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,SAAhB,C,CACA;AACA;;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA3B;AACA,MAAMC,UAAU,GAAG,aAAnB;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAACC,GAAR,CAAYI,aAAhC;AACA,MAAMC,eAAe,GAAGN,OAAO,CAACC,GAAR,CAAYM,aAApC;AAEAhB,GAAG,CAACiB,MAAJ,CAAWC,MAAX,CAAkB;AAChBH,EAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM,aADb;AAEhBH,EAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,aAFT;AAGhBN,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHJ,CAAlB;AAMA,MAAMQ,WAAW,GAAG;AAClBN,EAAAA,WADkB;AAElBE,EAAAA,eAFkB;AAGlBK,EAAAA,gBAAgB,EAAE;AAHA,CAApB;AAMA,OAAO,eAAeC,cAAf,CAA8BC,QAA9B,EAAwC;AAC7C;AACA;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEZ,UADK;AAEba,IAAAA,GAAG,EAAEH;AAFQ,GAAf,CAJ6C,CAQ7C;AACA;;AAEA,QAAMI,WAAW,GAAGvB,QAAQ,CACzB,WAAUS,UAAW,OAAMJ,MAAO,kBAAiBc,QAAS,EADnC,CAA5B;AAGA,QAAMK,SAAS,GAAG,IAAIzB,kBAAJ,CAAuB;AACvCiB,IAAAA,WADuC;AAEvCX,IAAAA,MAFuC;AAGvC;AACAoB,IAAAA,MAAM,EAAExB,MAJ+B,CAIvB;;AAJuB,GAAvB,CAAlB,CAd6C,CAoB7C;;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,QAAzB;AACA,QAAMS,SAAS,GAAG,MAAMJ,SAAS,CAACK,OAAV,CAAkB,IAAI/B,WAAJ,CAAgByB,WAAhB,CAAlB,CAAxB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BxB,SAAS,CAACyB,SAAD,CAAxC;AACA,QAAME,IAAI,GAAG3B,SAAS,CAACyB,SAAD,CAAtB,CAzB6C,CA2B7C;;AACA;AACF;AACA;AACA;AACA;AACA;;AAAI,SACA,CAACF,OAAO,CAACC,GAAR,CAAY,UAAZ,gBAEC,QAAC,MAAD;AACE,IAAA,GAAG,EAAEG,IADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,EAAE,EAAC,MAJL;AAKE,IAAA,SAAS,EAAC,aALZ;AAME,IAAA,OAAO,EAAC,SANV;AAOE,IAAA,QAAQ,EAAC;AAPX;AAAA;AAAA;AAAA;AAAA,UAFF,GAYA3B,SAAS,CAACyB,SAAD,CAbT;AAeH;AAED,eAAeV,cAAf","sourcesContent":["import aws from 'aws-sdk';\r\n// import crypto from 'crypto';\r\n// import { promisify } from 'util';\r\n\r\nimport { HttpRequest } from '@aws-sdk/protocol-http';\r\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\r\nimport { parseUrl } from '@aws-sdk/url-parser';\r\nimport { Sha256 } from '@aws-crypto/sha256-browser';\r\nimport { Hash } from '@aws-sdk/hash-node';\r\nimport { formatUrl } from '@aws-sdk/util-format-url';\r\nimport Iframe from 'react-iframe';\r\n\r\n// const randomBytes = promisify(crypto.randomBytes);\r\n\r\nconst region = process.env.AWSREGION;\r\nconst bucketName = 'sistemaidpb';\r\nconst accessKeyId = process.env.AWSACCESS_KEY;\r\nconst secretAccessKey = process.env.AWSSECRET_KEY;\r\n\r\naws.config.update({\r\n  secretAccessKey: process.env.AWSSECRET_KEY,\r\n  accessKeyId: process.env.AWSACCESS_KEY,\r\n  region: process.env.AWSREGION,\r\n});\r\n\r\nconst credentials = {\r\n  accessKeyId,\r\n  secretAccessKey,\r\n  signatureVersion: 'v4',\r\n};\r\n\r\nexport async function uploadVideosS3(fileName) {\r\n  // const rawBytes = await randomBytes(16);\r\n  // const imageName = rawBytes.toString('hex');\r\n\r\n  const params = {\r\n    Bucket: bucketName,\r\n    Key: fileName,\r\n  };\r\n  // pergar URL DO bucket\r\n  // const uploadURL = await s3.getSignedUrlPromise('putObject', params);\r\n\r\n  const s3ObjectUrl = parseUrl(\r\n    `https://${bucketName}.s3.${region}.amazonaws.com/${fileName}`,\r\n  );\r\n  const presigner = new S3RequestPresigner({\r\n    credentials,\r\n    region,\r\n    // sha256: Hash.bind(null, 'sha256'), // In Node.js\r\n    sha256: Sha256, // In browsers\r\n  });\r\n  // Create a GET request from S3 url.\r\n  console.log('filenName', fileName);\r\n  const uploadURL = await presigner.presign(new HttpRequest(s3ObjectUrl));\r\n\r\n  console.log('PRESIGNED URL: ', formatUrl(uploadURL));\r\n  const urls = formatUrl(uploadURL);\r\n\r\n  // pegar a lista do bucket\r\n  /*   const uploadURL = await s3\r\n    .listObjectsV2({\r\n      Bucket: bucketName,\r\n    })\r\n    .promise();\r\n */ return (\r\n    (console.log('vai logo'),\r\n    (\r\n      <Iframe\r\n        url={urls}\r\n        width=\"150px\"\r\n        height=\"150px\"\r\n        id=\"myId\"\r\n        className=\"myClassname\"\r\n        display=\"initial\"\r\n        position=\"relative\"\r\n      />\r\n    )),\r\n    formatUrl(uploadURL)\r\n  );\r\n}\r\n\r\nexport default uploadVideosS3;\r\n"]},"metadata":{},"sourceType":"module"}