{"ast":null,"code":"import _defineProperty from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\uploadFile.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  color: \", \";\\n  justify-content: center;\\n  align-items: center;\\n  padding: 15px 0;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border: 3px dashed #ddd;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: height 0.2s ease;\\n\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-color: #ff5722;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  border-color: #76ff03;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport styled, { css } from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport api from 'src/components/services/api';\nimport FileList from '../../fileList/index';\nvar dragActive = css(_templateObject());\nvar dragReject = css(_templateObject2());\nvar messageColors = {\n  \"default\": '#fff',\n  error: '#ff5722',\n  success: '#76ff03'\n};\nvar DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})(_templateObject3(), function (props) {\n  return props.isDragActive && dragActive;\n}, function (props) {\n  return props.isDragReject && dragReject;\n});\n_c = DropContainer;\nvar UploadMessage = styled.p(_templateObject4(), function (props) {\n  return messageColors[props.type || 'default'];\n});\n/* const useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n}; */\n\n_c2 = UploadMessage;\n\nfunction DropzoneComponent() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useState2 = useState([]),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var newValue = [];\n  var newList = [];\n  var onDrop = useCallback(function (acceptedFiles) {\n    setFiles(acceptedFiles.map(function (file) {\n      return Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        id: uniqueId()\n      });\n    })); // setState(files);\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop,\n    accept: 'image/jpeg, image/png'\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragReject = _useDropzone.isDragReject;\n\n  var handleUpload = function handleUpload() {\n    var uploadedFiles = files.map(function (file) {\n      return {\n        file: file,\n        id: uniqueId(),\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: URL.createObjectURL(file),\n        progress: 0,\n        uploaded: false,\n        error: false,\n        url: null\n      };\n    });\n\n    if (uploadedFiles) {\n      setState(function (old) {\n        return [].concat(_toConsumableArray(old), _toConsumableArray(uploadedFiles));\n      }); //     setState();\n\n      console.log('state:', state);\n    }\n  };\n\n  var thumbs = files.map(function (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        alt: file.name,\n        height: 1,\n        width: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, _this)\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, _this);\n  });\n\n  var novoValor = function novoValor(novoArquivo) {\n    newValue = _toConsumableArray(new Map(novoArquivo.map(function (item) {\n      return [item.name, item];\n    })).values()); // console.log('deu certo:', newValue);\n  }; //= =========================================================================\n\n\n  var updateFile = function updateFile(id, data) {\n    var vList = newValue.map(function (uploadedFile) {\n      return id === uploadedFile.id ? _objectSpread(_objectSpread({}, uploadedFile), data) : uploadedFile;\n    }); //  console.log('vList:', vList, newValue);\n  };\n\n  var processUpload = function processUpload(uploadedFile) {\n    var data = new FormData();\n    data.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', data, {\n      onUploadProgress: function onUploadProgress(e) {\n        var progress = Math.round(e.loaded * 100 / e.total);\n        updateFile(uploadedFile.id, {\n          progress: progress\n        });\n      }\n    });\n  };\n\n  var iniciarEnvio = function iniciarEnvio() {\n    newValue.forEach(processUpload);\n  };\n\n  useEffect(function () {\n    handleUpload();\n    novoValor(state);\n    iniciarEnvio(); // iniciarEnvio();\n  }, [files]); //= =========================================================================\n  // clean up\n\n  var DragMessage = function DragMessage(a, b) {\n    if (!a) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, _this);\n    }\n\n    if (b) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), DragMessage(isDragActive, isDragReject)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [state.length > 0 && /*#__PURE__*/_jsxDEV(FileList, {\n        files: newValue,\n        arquivo: files[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 30\n      }, this), thumbs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropzoneComponent, \"R1MSHtbhIxeFWQssI+W6uTIuO+U=\", false, function () {\n  return [useDropzone];\n});\n\n_c3 = DropzoneComponent;\nexport default DropzoneComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DropContainer\");\n$RefreshReg$(_c2, \"UploadMessage\");\n$RefreshReg$(_c3, \"DropzoneComponent\");","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/uploadFile.js"],"names":["React","useCallback","useState","useEffect","useDropzone","styled","css","uniqueId","filesize","api","FileList","dragActive","dragReject","messageColors","error","success","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","type","DropzoneComponent","files","setFiles","state","setState","newValue","newList","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","id","accept","getRootProps","getInputProps","handleUpload","uploadedFiles","name","readableSize","size","progress","uploaded","url","old","console","log","thumbs","novoValor","novoArquivo","Map","item","values","updateFile","data","vList","uploadedFile","processUpload","FormData","append","post","onUploadProgress","e","Math","round","loaded","total","iniciarEnvio","forEach","DragMessage","a","b","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport styled, { css } from 'styled-components';\r\nimport { uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\nimport api from 'src/components/services/api';\r\nimport FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\nconst messageColors = {\r\n  default: '#fff',\r\n  error: '#ff5722',\r\n  success: '#76ff03',\r\n};\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  color: ${(props) => messageColors[props.type || 'default']};\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\n/* const useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n}; */\r\n\r\nfunction DropzoneComponent() {\r\n  const [files, setFiles] = useState([]);\r\n  const [state, setState] = useState([]);\r\n  let newValue = [];\r\n  const newList = [];\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n          id: uniqueId(),\r\n        }),\r\n      ),\r\n    );\r\n    // setState(files);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\r\n    useDropzone({\r\n      onDrop,\r\n      accept: 'image/jpeg, image/png',\r\n    });\r\n\r\n  const handleUpload = () => {\r\n    const uploadedFiles = files.map((file) => ({\r\n      file,\r\n      id: uniqueId(),\r\n      name: file.name,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n\r\n    if (uploadedFiles) {\r\n      setState((old) => [...old, ...uploadedFiles]);\r\n      //     setState();\r\n      console.log('state:', state);\r\n    }\r\n  };\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.id}>\r\n      <img src={file.preview} alt={file.name} height={1} width={1} />\r\n    </div>\r\n  ));\r\n  const novoValor = (novoArquivo) => {\r\n    newValue = [\r\n      ...new Map(novoArquivo.map((item) => [item.name, item])).values(),\r\n    ];\r\n    // console.log('deu certo:', newValue);\r\n  };\r\n\r\n  //= =========================================================================\r\n  const updateFile = (id, data) => {\r\n    const vList = newValue.map((uploadedFile) =>\r\n      id === uploadedFile.id ? { ...uploadedFile, ...data } : uploadedFile,\r\n    );\r\n    //  console.log('vList:', vList, newValue);\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const data = new FormData();\r\n    data.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api.post('api/fotos', data, {\r\n      onUploadProgress: (e) => {\r\n        const progress = Math.round((e.loaded * 100) / e.total);\r\n        updateFile(uploadedFile.id, { progress });\r\n      },\r\n    });\r\n  };\r\n\r\n  const iniciarEnvio = () => {\r\n    newValue.forEach(processUpload);\r\n  };\r\n  useEffect(() => {\r\n    handleUpload();\r\n\r\n    novoValor(state);\r\n\r\n    iniciarEnvio();\r\n\r\n    // iniciarEnvio();\r\n  }, [files]);\r\n  //= =========================================================================\r\n\r\n  // clean up\r\n  const DragMessage = (a, b) => {\r\n    if (!a) {\r\n      return <UploadMessage>Arraste arquivos aqui..</UploadMessage>;\r\n    }\r\n    if (b) {\r\n      return (\r\n        <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n      );\r\n    }\r\n    return (\r\n      <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n    );\r\n  };\r\n  return (\r\n    <section>\r\n      <DropContainer\r\n        {...getRootProps()}\r\n        isDragActive={isDragActive}\r\n        isDragReject={isDragReject}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {DragMessage(isDragActive, isDragReject)}\r\n      </DropContainer>\r\n\r\n      <aside>\r\n        {state.length > 0 && <FileList files={newValue} arquivo={files[0]} />}\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DropzoneComponent;\r\n"]},"metadata":{},"sourceType":"module"}