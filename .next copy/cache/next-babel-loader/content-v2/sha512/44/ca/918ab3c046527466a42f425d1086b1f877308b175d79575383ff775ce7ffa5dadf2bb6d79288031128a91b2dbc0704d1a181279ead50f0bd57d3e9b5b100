{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from 'mongodb';\nvar uri = process.env.MONGODB_URI;\nvar dbName = process.env.MONGODB_DB;\nvar cachedDb;\nvar cachedClient; // console.log(uri);\n\nif (!uri) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\nif (!dbName) {\n  throw new Error('Please define the MONGODB_DB environment variable inside .env.local');\n}\n\nexport function connectToDatabase() {\n  return _connectToDatabase.apply(this, arguments);\n}\n\nfunction _connectToDatabase() {\n  _connectToDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client, db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(cachedClient && cachedDb)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              client: cachedClient,\n              db: cachedDb\n            });\n\n          case 2:\n            _context.next = 4;\n            return MongoClient.connect(uri, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            client = _context.sent;\n            _context.next = 7;\n            return client.db(dbName);\n\n          case 7:\n            db = _context.sent;\n            cachedClient = client;\n            cachedDb = db;\n            return _context.abrupt(\"return\", {\n              client: client,\n              db: db\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectToDatabase.apply(this, arguments);\n}\n\nexport default connectToDatabase;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/mongodb.js"],"names":["MongoClient","uri","process","env","MONGODB_URI","dbName","MONGODB_DB","cachedDb","cachedClient","Error","connectToDatabase","client","db","connect","useNewUrlParser","useUnifiedTopology"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAxB;AACA,IAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,UAA3B;AAEA,IAAIC,QAAJ;AACA,IAAIC,YAAJ,C,CACA;;AACA,IAAI,CAACP,GAAL,EAAU;AACR,QAAM,IAAIQ,KAAJ,CACJ,sEADI,CAAN;AAGD;;AAED,IAAI,CAACJ,MAAL,EAAa;AACX,QAAM,IAAII,KAAJ,CACJ,qEADI,CAAN;AAGD;;AAED,gBAAsBC,iBAAtB;AAAA;AAAA;;;gFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACDF,YAAY,IAAID,QADf;AAAA;AAAA;AAAA;;AAAA,6CAEI;AAAEI,cAAAA,MAAM,EAAEH,YAAV;AAAwBI,cAAAA,EAAE,EAAEL;AAA5B,aAFJ;;AAAA;AAAA;AAAA,mBAKgBP,WAAW,CAACa,OAAZ,CAAoBZ,GAApB,EAAyB;AAC5Ca,cAAAA,eAAe,EAAE,IAD2B;AAE5CC,cAAAA,kBAAkB,EAAE;AAFwB,aAAzB,CALhB;;AAAA;AAKCJ,YAAAA,MALD;AAAA;AAAA,mBAUYA,MAAM,CAACC,EAAP,CAAUP,MAAV,CAVZ;;AAAA;AAUCO,YAAAA,EAVD;AAYLJ,YAAAA,YAAY,GAAGG,MAAf;AACAJ,YAAAA,QAAQ,GAAGK,EAAX;AAbK,6CAeE;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,EAAE,EAAFA;AAAV,aAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,eAAeF,iBAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst dbName = process.env.MONGODB_DB;\r\n\r\nlet cachedDb;\r\nlet cachedClient;\r\n// console.log(uri);\r\nif (!uri) {\r\n  throw new Error(\r\n    'Please define the MONGODB_URI environment variable inside .env.local',\r\n  );\r\n}\r\n\r\nif (!dbName) {\r\n  throw new Error(\r\n    'Please define the MONGODB_DB environment variable inside .env.local',\r\n  );\r\n}\r\n\r\nexport async function connectToDatabase() {\r\n  if (cachedClient && cachedDb) {\r\n    return { client: cachedClient, db: cachedDb };\r\n  }\r\n\r\n  const client = await MongoClient.connect(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n  });\r\n\r\n  const db = await client.db(dbName);\r\n\r\n  cachedClient = client;\r\n  cachedDb = db;\r\n\r\n  return { client, db };\r\n}\r\n\r\nexport default connectToDatabase;\r\n"]},"metadata":{},"sourceType":"module"}