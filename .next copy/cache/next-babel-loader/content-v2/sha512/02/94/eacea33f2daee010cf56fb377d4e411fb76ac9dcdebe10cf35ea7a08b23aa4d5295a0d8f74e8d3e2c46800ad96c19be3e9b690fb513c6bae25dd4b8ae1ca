{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import excutQuery from 'src/utils/mysql';\nimport { PrismaClient } from '@prisma/client';\nvar prisma = new PrismaClient();\n\nfunction main(_x) {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(table) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain()[\"catch\"](function (e) {\n  throw e;\n})[\"finally\"]( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return prisma.$disconnect();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport default main;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/database/getTable.js"],"names":["PrismaClient","prisma","main","table","e","$disconnect"],"mappings":";;AAAA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,IAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;;SACeE,I;;;;;mEAAf,kBAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAGAD,IAAI,WAAJ,CACS,UAACE,CAAD,EAAO;AACZ,QAAMA,CAAN;AACD,CAHH,oFAIW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACDH,MAAM,CAACI,WAAP,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAJX;AAQA,eAAeH,IAAf","sourcesContent":["// import excutQuery from 'src/utils/mysql';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\nasync function main(table) {\r\n  // ... you will write your Prisma Client queries here\r\n}\r\nmain()\r\n  .catch((e) => {\r\n    throw e;\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}