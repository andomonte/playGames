{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\telaEventos.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { signOut } from 'next-auth/client';\n\nimport { Box } from '@material-ui/core';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport styled, { css } from 'styled-components';\nimport FileList from '../../fileList/index';\nconst dragActive = css`\n  border-color: #76ff03;\n`;\nconst dragReject = css`\n  border-color: #ff5722;\n`;\nconst messageColors = {\n  default: '#fff',\n  error: '#ff5722',\n  success: '#76ff03'\n};\nconst DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border: 3px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n\n  ${props => props.isDragActive && dragActive}\n  ${props => props.isDragReject && dragReject}\n`;\nconst UploadMessage = styled.p`\n  display: flex;\n  color: ${props => messageColors[props.type || 'default']};\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  boxInterno: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '30px',\n    background: '#bcaaa4',\n    borderRadius: '4px',\n    padding: '20px'\n  },\n  dragMessage: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '30px',\n    background: '#bcaaa4',\n    borderRadius: '4px',\n    padding: '20px'\n  }\n}));\n\nfunction MyDropzone() {\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  } = useDropzone({\n    accept: 'image/*'\n  }, onDrop);\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: file.preview,\n      alt: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)); // clean up\n\n  useEffect(() => () => {\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const DragMessage = (a, b) => {\n    if (!a) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (b) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      children: () => /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n        isDragActive: isDragActive,\n        isDragReject: isDragReject,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), DragMessage(isDragActive, isDragReject)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function TelaEventos() {\n  const classes = useStyles();\n  const state = {\n    uploadedFiles: []\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.box,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.boxInterno,\n      children: [/*#__PURE__*/_jsxDEV(MyDropzone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/telaEventos.js"],"names":["React","useCallback","useEffect","useState","makeStyles","Box","Dropzone","useDropzone","styled","css","FileList","dragActive","dragReject","messageColors","default","error","success","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","type","useStyles","box","display","alignItems","justifyContent","height","boxInterno","width","maxWidth","margin","background","borderRadius","padding","dragMessage","MyDropzone","files","setFiles","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","accept","thumbs","name","forEach","revokeObjectURL","DragMessage","a","b","TelaEventos","classes","state","uploadedFiles"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { signOut } from 'next-auth/client';\r\nimport { Box } from '@material-ui/core';\r\nimport Dropzone, { useDropzone } from 'react-dropzone';\r\nimport styled, { css } from 'styled-components';\r\nimport FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\nconst messageColors = {\r\n  default: '#fff',\r\n  error: '#ff5722',\r\n  success: '#76ff03',\r\n};\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  color: ${(props) => messageColors[props.type || 'default']};\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nfunction MyDropzone() {\r\n  const [files, setFiles] = useState([]);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        }),\r\n      ),\r\n    );\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\r\n    useDropzone({ accept: 'image/*' }, onDrop);\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <img src={file.preview} alt={file.name} />\r\n    </div>\r\n  ));\r\n\r\n  // clean up\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files],\r\n  );\r\n\r\n  const DragMessage = (a, b) => {\r\n    if (!a) {\r\n      return <UploadMessage>Arraste arquivos aqui..</UploadMessage>;\r\n    }\r\n    if (b) {\r\n      return (\r\n        <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n      );\r\n    }\r\n    return (\r\n      <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Dropzone>\r\n        {() => (\r\n          <DropContainer\r\n            {...getRootProps()}\r\n            isDragActive={isDragActive}\r\n            isDragReject={isDragReject}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {DragMessage(isDragActive, isDragReject)}\r\n          </DropContainer>\r\n        )}\r\n      </Dropzone>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default function TelaEventos() {\r\n  const classes = useStyles();\r\n  const state = {\r\n    uploadedFiles: [],\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Box className={classes.boxInterno}>\r\n        <MyDropzone />\r\n        <FileList />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}