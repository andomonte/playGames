{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Box, Button, Divider } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport SentimentSatisfiedTwoToneIcon from '@material-ui/icons/SentimentSatisfiedTwoTone';\nimport SentimentDissatisfiedTwoToneIcon from '@material-ui/icons/SentimentDissatisfiedTwoTone';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\n\nconst fetcher = url => axios.get(url).then(res => res.data);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  selectEmpty: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '83.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  },\n  table: {\n    marginLeft: -10,\n    marginRight: -10,\n    size: 'small',\n    alignItems: 'center',\n    marginTop: 1,\n    width: '60%'\n  },\n  caption: {\n    fontWeight: 500,\n    fontSize: '14px',\n    display: '-webkit-box',\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden',\n    color: '#000',\n    marginRight: 20\n  },\n  tableCell: {\n    padding: '0px 0px',\n    fontSize: '12px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(1, 1, 1)\n  }\n}));\nconst StyledTableContainer = withStyles(() => ({\n  root: {\n    width: 'max-content'\n  }\n}))(TableContainer);\nconst StyledTableCell = withStyles(() => ({\n  root: {\n    padding: '0px 0px',\n    '&:hover': {\n      backgroundColor: 'red'\n    }\n  }\n}))(TableCell);\n\nfunction createData(descricao, sem1, sem2, sem3, sem4, sem5, total) {\n  return {\n    descricao,\n    sem1,\n    sem2,\n    sem3,\n    sem4,\n    sem5,\n    total\n  };\n}\n\nexport default function TabelaMobile({\n  dadosRel,\n  item,\n  mes\n}) {\n  const classes = useStyles();\n  const url = `${window.location.origin}/api/consultaRIgreja/${item[0].RegiaoIDPB}`;\n  const {\n    data\n  } = useSWR(url, fetcher);\n  let dataIgreja;\n  const newDadosRel = [];\n  const dadosMes = [{\n    adultos: '',\n    indAdul: '',\n    mediaAdul: ''\n  }, {\n    adolecentes: '',\n    indAdol: '',\n    mediaAdol: ''\n  }, {\n    criancas: '',\n    indCri: '',\n    mediaCri: ''\n  }, {\n    visitantes: '',\n    indVis: '',\n    mediaVis: ''\n  }, {\n    conversoes: '',\n    indConv: '',\n    mediaConv: ''\n  }, {\n    ofertas: '',\n    indOfer: '',\n    mediaOfer: ''\n  }, {\n    dizimos: '',\n    indDiz: '',\n    mediaDiz: ''\n  }, {\n    somatorio: 0,\n    indSoma: 0,\n    mediaSoma: 0\n  }]; // dados dos mes anterior\n\n  const dadosMAnt = [{\n    adultos: '',\n    indAdul: '',\n    mediaAdul: ''\n  }, {\n    adolecentes: '',\n    indAdol: '',\n    mediaAdol: ''\n  }, {\n    criancas: '',\n    indCri: '',\n    mediaCri: ''\n  }, {\n    visitantes: '',\n    indVis: '',\n    mediaVis: ''\n  }, {\n    conversoes: '',\n    indConv: '',\n    mediaConv: ''\n  }, {\n    ofertas: '',\n    indOfer: '',\n    mediaOfer: ''\n  }, {\n    dizimos: '',\n    indDiz: '',\n    mediaDiz: ''\n  }, {\n    somatorio: 0,\n    indSoma: 0,\n    mediaSoma: 0\n  }];\n  const CabeçalhoTabela = [{\n    item: 'adultos',\n    total: '',\n    media: ''\n  }, {\n    item: 'adolecentes',\n    total: '',\n    media: ''\n  }, {\n    item: 'criancas',\n    total: '',\n    media: ''\n  }, {\n    item: 'visitantes',\n    total: '',\n    media: ''\n  }, {\n    item: 'conversoes',\n    total: '',\n    media: ''\n  }];\n  const dadosMesAnterior = [{\n    item: 'adultos',\n    total: '',\n    media: ''\n  }, {\n    item: 'adolecentes',\n    total: '',\n    media: ''\n  }, {\n    item: 'criancas',\n    total: '',\n    media: ''\n  }, {\n    item: 'visitantes',\n    total: '',\n    media: ''\n  }, {\n    item: 'conversoes',\n    total: '',\n    media: ''\n  }];\n  const Panel2 = [];\n  const Tabelas = [];\n  const showIgrejas = [];\n  const [age, setAge] = React.useState('');\n  const [igrejaSelecionada, setIgrejaSelecionada] = React.useState([]);\n  const [mesAnterior, setMesAnterior] = React.useState([]);\n  const [open, setOpen] = React.useState(false); //------------------------------------------------------------------------\n\n  const handleSelect = event => {\n    // const codigoIgreja = event.target.value;\n    const {\n      codigoIgreja\n    } = event.codigoIgreja;\n    setAge(event.target.value);\n    setIgrejaSelecionada(dadosRel.filter(val => val.codigoIgreja === codigoIgreja));\n  };\n\n  const handleIgreja = eventos => {\n    // const codigoIgreja = event.target.value;\n    //  const { codigoIgreja } = data[event];\n    const dadosIgreja = dadosRel.filter(val => {\n      if (val.codigoIgreja === eventos && val.mes === mes) {\n        return val;\n      }\n\n      return null;\n    });\n    if (dadosIgreja.length > 0) setOpen(true);\n    setIgrejaSelecionada(dadosIgreja);\n    const mesPassado = String(mes - 1);\n    setMesAnterior(dadosRel.filter(val => {\n      if (val.codigoIgreja === eventos && val.mes === mesPassado) {\n        return val;\n      }\n\n      return null;\n    }));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //-----------------------------------------------------------------------------\n\n\n  let rows = [];\n  let dizimoMes = 0;\n  let ofertaMes = 0;\n  let dizimoMesAnterior = 0;\n  let ofertaMesAnterior = 0;\n\n  if (igrejaSelecionada.length > 0) {\n    for (let i = 0; i < CabeçalhoTabela.length; i += 1) {\n      const reducer = igrejaSelecionada.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue[CabeçalhoTabela[i].item]), 0);\n      dizimoMes = igrejaSelecionada.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.dizimos.replace(',', '.')), 0);\n      ofertaMes = igrejaSelecionada.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.ofertas.replace(',', '.')), 0);\n      CabeçalhoTabela[i].total = reducer;\n      CabeçalhoTabela[i].media = Number(reducer / igrejaSelecionada.length).toFixed(1);\n    }\n  }\n\n  if (mesAnterior.length > 0) {\n    for (let i = 0; i < dadosMesAnterior.length; i += 1) {\n      const reducer = mesAnterior.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue[dadosMesAnterior[i].item]), 0);\n      dizimoMesAnterior = mesAnterior.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.dizimos.replace(',', '.')), 0);\n      ofertaMesAnterior = mesAnterior.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.ofertas.replace(',', '.')), 0);\n      dadosMesAnterior[i].total = reducer;\n      dadosMesAnterior[i].media = Number(reducer / mesAnterior.length).toFixed(0);\n    }\n  }\n  /* const taxaCrescimento = (igrejaAnalizada, index) => {\r\n    const mesAnalizado = dadosRel.filter((val) => {\r\n      if (val.codigoIgreja === igrejaAnalizada && val.mes === mes) {\r\n        return val;\r\n      }\r\n      return null;\r\n    });\r\n    if (mesAnalizado.length > 0) {\r\n      totalMesAtual = 0;\r\n      divisorMesAtual = 5 * mesAnalizado.length;\r\n      for (let i = 0; i < CabeçalhoTabela.length; i += 1) {\r\n        const reducer = mesAnalizado.reduce(\r\n          (accumulator, currentValue) =>\r\n            Number(accumulator) + Number(currentValue[CabeçalhoTabela[i].item]),\r\n          0,\r\n        );\r\n          CabeçalhoTabela[i].total = reducer;\r\n        CabeçalhoTabela[i].media = Number(\r\n          reducer / mesAnalizado.length,\r\n        ).toFixed(0);\r\n        totalMesAtual += CabeçalhoTabela[i].total;\r\n      }\r\n    }\r\n    const mesPassado = String(mes - 1);\r\n      const mesAnteriorAnalizado = dadosRel.filter((val) => {\r\n      if (val.codigoIgreja === igrejaAnalizada && val.mes === mesPassado) {\r\n        return val;\r\n      }\r\n      return null;\r\n    });\r\n      if (mesAnteriorAnalizado.length > 0) {\r\n      totalMesAnterior = 0;\r\n      divisorMesAnteiror = 5 * mesAnteriorAnalizado.length;\r\n        for (let i = 0; i < dadosMesAnterior.length; i += 1) {\r\n        const reducer = mesAnteriorAnalizado.reduce(\r\n          (accumulator, currentValue) =>\r\n            Number(accumulator) +\r\n            Number(currentValue[dadosMesAnterior[i].item]),\r\n          0,\r\n        );\r\n        dadosMesAnterior[i].total = reducer;\r\n        dadosMesAnterior[i].media = Number(\r\n          reducer / mesAnteriorAnalizado.length,\r\n        ).toFixed(0);\r\n        totalMesAnterior += dadosMesAnterior[i].total;\r\n      }\r\n    }\r\n      mtMesAtual[index] = (totalMesAtual / divisorMesAtual).toFixed(0);\r\n    mtMesAnterior[index] = (totalMesAnterior / divisorMesAnteiror).toFixed(0);\r\n      if (mesAnalizado.length > 0 && mesAnteriorAnalizado.length > 0) {\r\n      pc[index] = (\r\n        (mtMesAtual[index] * 100) / mtMesAnterior[index] -\r\n        100\r\n      ).toFixed(2);\r\n    } else {\r\n      pc[index] = 'Sem Relatório';\r\n    }\r\n  }; */\n\n\n  const taxaCrescimento = (igrejaAnalizada, index) => {\n    let div = 1;\n    const mesAnalizado = dadosRel.filter(val => {\n      if (val.codigoIgreja === igrejaAnalizada && val.mes === mes) {\n        return val;\n      }\n\n      return null;\n    });\n\n    if (mesAnalizado.length > 0) {\n      for (let i = 0; i < CabeçalhoTabela.length; i += 1) {\n        const reducer = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue[CabeçalhoTabela[i].item]), 0);\n        dadosMes[index].adultos = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.adultos), 0);\n        dadosMes[index].adolecentes = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.adolecentes), 0);\n        dadosMes[index].criancas = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.criancas), 0);\n        dadosMes[index].visitantes = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.visitantes), 0);\n        dadosMes[index].conversoes = mesAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.conversoes), 0);\n        dadosMes[index].dizimos = mesAnalizado.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.dizimos.replace(',', '.')), 0);\n        dadosMes[index].ofertas = mesAnalizado.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.ofertas.replace(',', '.')), 0);\n        dizimoMes = igrejaSelecionada.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.dizimos.replace(',', '.')), 0);\n        ofertaMes = igrejaSelecionada.reduce((accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue.ofertas.replace(',', '.')), 0);\n        CabeçalhoTabela[i].total = reducer;\n        CabeçalhoTabela[i].media = Number(reducer / mesAnalizado.length).toFixed(1);\n      }\n    }\n\n    const mesPassado = String(mes - 1);\n    const mesAnteriorAnalizado = dadosRel.filter(val => {\n      if (val.codigoIgreja === igrejaAnalizada && val.mes === mesPassado) {\n        return val;\n      }\n\n      return null;\n    });\n\n    if (mesAnteriorAnalizado.length > 0) {\n      for (let i = 0; i < dadosMesAnterior.length; i += 1) {\n        dadosMAnt[index].adultos = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.adultos), 0); // if (!mesAnteriorAnalizado[i]) adulMAnt[i] = 0;\n\n        dadosMAnt[index].adolecentes = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.adolecentes), 0);\n        dadosMAnt[index].criancas = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.criancas), 0);\n        dadosMAnt[index].visitantes = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.visitantes), 0);\n        dadosMAnt[index].conversoes = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.conversoes), 0);\n        dadosMAnt[index].ofertas = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.ofertas.replace(',', '.')), 0);\n        dadosMAnt[index].dizimos = mesAnteriorAnalizado.reduce((accumulator, currentValue) => Number(accumulator) + Number(currentValue.dizimos.replace(',', '.')), 0); //= =========================================================================\n        //= ===========================================================================\n      }\n    } //---------------------------------------------------------------------------\n    // Calculo dos percentuais de cada intem referente ao mês anterior\n    //---------------------------------------------------------------------------\n\n\n    dadosMes[index].mediaAdul = Number(dadosMes[index].adultos / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaAdul = Number(dadosMAnt[index].adultos / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaAdul === 'NaN') dadosMAnt[index].mediaAdul = dadosMes[index].mediaAdul;\n    if (dadosMAnt[index].mediaAdul > 0) div = dadosMAnt[index].mediaAdul;\n    dadosMes[index].indAdul = ((dadosMes[index].mediaAdul - dadosMAnt[index].mediaAdul) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // adolentes\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaAdol = Number(dadosMes[index].adolecentes / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaAdol = Number(dadosMAnt[index].adolecentes / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaAdol === 'NaN') dadosMAnt[index].mediaAdol = dadosMes[index].mediaAdol;\n    if (dadosMAnt[index].mediaAdol > 0) div = dadosMAnt[index].mediaAdol;\n    dadosMes[index].indAdol = ((dadosMes[index].mediaAdol - dadosMAnt[index].mediaAdol) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // Crianças\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaCri = Number(dadosMes[index].criancas / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaCri = Number(dadosMAnt[index].criancas / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaCri === 'NaN') dadosMAnt[index].mediaCri = dadosMes[index].mediaCri;\n    if (dadosMAnt[index].mediaCri > 0) div = dadosMAnt[index].mediaCri;\n    dadosMes[index].indCri = ((dadosMes[index].mediaCri - dadosMAnt[index].mediaCri) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // Visitantes\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaVis = Number(dadosMes[index].visitantes / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaVis = Number(dadosMAnt[index].visitantes / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaVis === 'NaN') dadosMAnt[index].mediaVis = dadosMes[index].mediaVis;\n    if (dadosMAnt[index].mediaVis > 0) div = dadosMAnt[index].mediaVis;\n    dadosMes[index].indVis = ((dadosMes[index].mediaVis - dadosMAnt[index].mediaVis) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // conversão\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaConv = Number(dadosMes[index].conversoes / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaConv = Number(dadosMAnt[index].conversoes / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaConv === 'NaN') dadosMAnt[index].mediaConv = dadosMes[index].mediaConv;\n    if (dadosMAnt[index].mediaConv > 0) div = dadosMAnt[index].mediaConv;\n    dadosMes[index].indConv = ((dadosMes[index].mediaConv - dadosMAnt[index].mediaConv) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    //---------------------------------------------------------------------------\n    // ofertas\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaOfer = Number(dadosMes[index].ofertas / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaOfer = Number(dadosMAnt[index].ofertas / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaOfer === 'NaN') dadosMAnt[index].mediaOfer = dadosMes[index].mediaOfer;\n    if (dadosMAnt[index].mediaOfer > 0) div = dadosMAnt[index].mediaOfer;\n    dadosMes[index].indOfer = ((dadosMes[index].mediaOfer - dadosMAnt[index].mediaOfer) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // dízimos\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].mediaDiz = Number(dadosMes[index].dizimos / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaDiz = Number(dadosMAnt[index].dizimos / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaDiz === 'NaN') dadosMAnt[index].mediaDiz = dadosMes[index].mediaDiz;\n    if (dadosMAnt[index].mediaDiz > 0) div = dadosMAnt[index].mediaDiz;\n    dadosMes[index].indDiz = ((dadosMes[index].mediaDiz - dadosMAnt[index].mediaDiz) * 100 / div).toFixed(2); //---------------------------------------------------------------------------\n    // somatório\n    //---------------------------------------------------------------------------\n\n    dadosMes[index].somatorio = parseFloat(dadosMes[index].adultos + dadosMes[index].adolecentes + dadosMes[index].criancas + dadosMes[index].visitantes + dadosMes[index].conversoes);\n    dadosMAnt[index].somatorio = parseFloat(dadosMAnt[index].adultos + dadosMAnt[index].adolecentes + dadosMAnt[index].criancas + dadosMAnt[index].visitantes + dadosMAnt[index].conversoes);\n    const divisor = parseFloat(5 * mesAnalizado.length);\n    dadosMes[index].mediaSoma = parseFloat(dadosMes[index].somatorio / divisor).toFixed(2);\n    dadosMes[index].mediaSoma = parseFloat(dadosMes[index].somatorio / mesAnalizado.length).toFixed(2);\n    dadosMAnt[index].mediaSoma = parseFloat(dadosMAnt[index].somatorio / mesAnteriorAnalizado.length).toFixed(2);\n    div = 1;\n    if (dadosMAnt[index].mediaSoma === 'NaN') dadosMAnt[index].mediaSoma = dadosMes[index].mediaSoma;\n    if (dadosMAnt[index].mediaSoma > 0) div = dadosMAnt[index].mediaSoma;\n    dadosMes[index].indSoma = ((dadosMes[index].mediaSoma - dadosMAnt[index].mediaSoma) * 100 / div).toFixed(2);\n  };\n\n  rows = [createData('Adultos', igrejaSelecionada[0] ? igrejaSelecionada[0].adultos : '--', igrejaSelecionada[1] ? igrejaSelecionada[1].adultos : '--', igrejaSelecionada[2] ? igrejaSelecionada[2].adultos : '--', igrejaSelecionada[3] ? igrejaSelecionada[3].adultos : '--', igrejaSelecionada[4] ? igrejaSelecionada[4].adultos : '--', CabeçalhoTabela[0].media && CabeçalhoTabela[0].media), createData('Adolecentes', igrejaSelecionada[0] ? igrejaSelecionada[0].adolecentes : '--', igrejaSelecionada[1] ? igrejaSelecionada[1].adolecentes : '--', igrejaSelecionada[2] ? igrejaSelecionada[2].adolecentes : '--', igrejaSelecionada[3] ? igrejaSelecionada[3].adolecentes : '--', igrejaSelecionada[4] ? igrejaSelecionada[4].adolecentes : '--', CabeçalhoTabela[1].media && CabeçalhoTabela[1].media), createData('Crianças', igrejaSelecionada[0] ? igrejaSelecionada[0].criancas : '--', igrejaSelecionada[1] ? igrejaSelecionada[1].criancas : '--', igrejaSelecionada[2] ? igrejaSelecionada[2].criancas : '--', igrejaSelecionada[3] ? igrejaSelecionada[3].criancas : '--', igrejaSelecionada[4] ? igrejaSelecionada[4].criancas : '--', CabeçalhoTabela[2].media && CabeçalhoTabela[2].media), createData('Visitantes', igrejaSelecionada[0] ? igrejaSelecionada[0].visitantes : '--', igrejaSelecionada[1] ? igrejaSelecionada[1].visitantes : '--', igrejaSelecionada[2] ? igrejaSelecionada[2].visitantes : '--', igrejaSelecionada[3] ? igrejaSelecionada[3].visitantes : '--', igrejaSelecionada[4] ? igrejaSelecionada[4].visitantes : '--', CabeçalhoTabela[3].media && CabeçalhoTabela[3].media), createData('Conversões', igrejaSelecionada[0] ? igrejaSelecionada[0].conversoes : '--', igrejaSelecionada[1] ? igrejaSelecionada[1].conversoes : '--', igrejaSelecionada[2] ? igrejaSelecionada[2].conversoes : '--', igrejaSelecionada[3] ? igrejaSelecionada[3].conversoes : '--', igrejaSelecionada[4] ? igrejaSelecionada[4].conversoes : '--', CabeçalhoTabela[4].media && CabeçalhoTabela[4].media)];\n  const windowWidth = window.innerWidth;\n\n  if (data) {\n    var _dataIgreja;\n\n    dataIgreja = data;\n\n    for (let i = 0; i < dataIgreja.length; i += 1) {\n      newDadosRel[i] = dadosRel.filter(val => val.codigoIgreja === data[i].codigoIgreja);\n    }\n\n    Panel2.push( /*#__PURE__*/_jsxs(FormControl, {\n      variant: \"outlined\",\n      className: classes.selectEmpty,\n      size: \"small\",\n      children: [/*#__PURE__*/_jsx(FormHelperText, {\n        style: {\n          color: '#000'\n        },\n        children: \"Escolha a Igreja\"\n      }), /*#__PURE__*/_jsxs(Select, {\n        labelId: \"demo-simple-select-placeholder-label-label\",\n        id: \"demo-simple-select-placeholder-label\",\n        value: age,\n        onChange: handleSelect,\n        displayEmpty: true,\n        className: classes.selectEmpty,\n        children: [/*#__PURE__*/_jsx(MenuItem, {\n          value: age,\n          children: /*#__PURE__*/_jsx(\"em\", {\n            children: \"Todas\"\n          })\n        }), (_dataIgreja = dataIgreja) === null || _dataIgreja === void 0 ? void 0 : _dataIgreja.map(items => {\n          var _items$igreja;\n\n          return /*#__PURE__*/_jsx(MenuItem, {\n            value: items.codigoIgreja,\n            children: (_items$igreja = items.igreja) !== null && _items$igreja !== void 0 ? _items$igreja : items.igreja\n          }, items.igreja);\n        })]\n      })]\n    }, \"select\"));\n\n    if (igrejaSelecionada.length > 0) {\n      const largRotulo = windowWidth / 7 + 20;\n      const larg = (windowWidth - largRotulo) / 7;\n      Tabelas.push( /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(StyledTableContainer, {\n          component: Paper,\n          style: {\n            border: '1px solid rgba(0,0,0,0.2)',\n            padding: 4\n          },\n          children: /*#__PURE__*/_jsxs(Table, {\n            style: {\n              tableLayout: 'auto'\n            },\n            children: [/*#__PURE__*/_jsx(TableHead, {\n              children: /*#__PURE__*/_jsxs(TableRow, {\n                children: [/*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  className: classes.tableCell,\n                  style: {\n                    width: largRotulo,\n                    backgroundColor: '#ffff8d'\n                  },\n                  children: \"Semana\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#448aff'\n                  },\n                  align: \"center\",\n                  children: \"1\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#ffff8d'\n                  },\n                  align: \"center\",\n                  children: \"2\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#448aff'\n                  },\n                  align: \"center\",\n                  children: \"3\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#ffff8d'\n                  },\n                  align: \"center\",\n                  children: \"4\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#448aff'\n                  },\n                  children: \"5\"\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  className: classes.tableCell,\n                  style: {\n                    width: larg,\n                    backgroundColor: '#ffff8d'\n                  },\n                  children: \"MD\"\n                })]\n              }, newDadosRel[1].id)\n            }), /*#__PURE__*/_jsx(TableBody, {\n              children: rows.map(row => /*#__PURE__*/_jsxs(TableRow, {\n                style: {\n                  width: larg,\n                  backgroundColor: '#ffff8d'\n                },\n                height: 30,\n                children: [/*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  component: \"th\",\n                  scope: \"row\",\n                  children: /*#__PURE__*/_jsx(Box, {\n                    style: {\n                      width: largRotulo,\n                      fontSize: '10px'\n                    },\n                    children: row.descricao\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  style: {\n                    width: larg,\n                    backgroundColor: '#448aff'\n                  },\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsx(Box, {\n                    style: {\n                      width: larg,\n                      fontSize: '12px',\n                      height: '100%'\n                    },\n                    children: row.sem1\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  style: {\n                    backgroundColor: '#ffff8d'\n                  },\n                  children: /*#__PURE__*/_jsx(Box, {\n                    variant: \"outlined\",\n                    style: {\n                      width: larg,\n                      fontSize: '12px'\n                    },\n                    children: row.sem2\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  style: {\n                    backgroundColor: '#448aff'\n                  },\n                  children: /*#__PURE__*/_jsx(Box, {\n                    variant: \"outlined\",\n                    style: {\n                      width: larg,\n                      fontSize: '12px'\n                    },\n                    children: row.sem3\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  style: {\n                    backgroundColor: '#ffff8d'\n                  },\n                  children: /*#__PURE__*/_jsx(Box, {\n                    variant: \"outlined\",\n                    style: {\n                      width: larg,\n                      fontSize: '12px'\n                    },\n                    children: row.sem4\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  style: {\n                    backgroundColor: '#448aff'\n                  },\n                  children: /*#__PURE__*/_jsx(Box, {\n                    variant: \"outlined\",\n                    style: {\n                      width: larg,\n                      fontSize: '12px'\n                    },\n                    children: row.sem5\n                  })\n                }), /*#__PURE__*/_jsx(StyledTableCell, {\n                  align: \"center\",\n                  style: {\n                    backgroundColor: '#ffff8d'\n                  },\n                  children: /*#__PURE__*/_jsx(Box, {\n                    variant: \"outlined\",\n                    style: {\n                      width: larg,\n                      fontSize: '12px'\n                    },\n                    children: row.total\n                  })\n                })]\n              }, row.descricao))\n            })]\n          })\n        })\n      }, igrejaSelecionada));\n    }\n    /* if (igrejaSelecionada.length > 0) {\r\n      ListaIgrejas.push(\r\n        <div key={igrejaSelecionada[1].id}>\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead size=\"small\">\r\n                <TableRow key={newDadosRel[1].id} size=\"small\">\r\n                  <TableCell align=\"center\" size=\"small\">\r\n                    Sem\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    1\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    2\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    3\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    4\r\n                  </TableCell>\r\n                  {qtSemana === 5 && (\r\n                    <TableCell size=\"small\" align=\"center\">\r\n                      5\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    M\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n                <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.descricao}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.descricao}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.sem1}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.sem2}</TableCell>\r\n                    <TableCell align=\"right\">{row.sem3}</TableCell>\r\n                    <TableCell align=\"right\">{row.sem4}</TableCell>\r\n                    {qtSemana === 5 && (\r\n                      <TableCell align=\"right\">{row.sem5}</TableCell>\r\n                    )}\r\n                    <TableCell align=\"right\">{row.total}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>,\r\n      );\r\n    } */\n\n  } // const tc = CabeçalhoTabela[4].media && CabeçalhoTabela[4].media,\n\n\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 1\n  };\n\n  if (data) {\n    showIgrejas.push( /*#__PURE__*/_jsx(Box, {\n      children: data === null || data === void 0 ? void 0 : data.map((items, index) => {\n        var _items$igreja2;\n\n        return /*#__PURE__*/_jsxs(Box, {\n          onClick: () => {\n            handleIgreja(items.codigoIgreja);\n          },\n          type: \"button\",\n          justifyContent: \"flex-start\",\n          children: [taxaCrescimento(items.codigoIgreja, index), /*#__PURE__*/_jsxs(Box, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxs(Box, {\n              mr: -2,\n              ml: 2,\n              mt: 1,\n              children: [dadosMes[index].indSoma === 'NaN' && /*#__PURE__*/_jsx(CancelRoundedIcon, {\n                style: {\n                  fontSize: 40,\n                  color: '#3f51b5'\n                }\n              }), parseFloat(dadosMes[index].indSoma) > 0 && /*#__PURE__*/_jsx(SentimentSatisfiedTwoToneIcon, {\n                style: {\n                  fontSize: 40,\n                  color: '#8bc34a'\n                }\n              }), parseFloat(dadosMes[index].indSoma) < 0 && /*#__PURE__*/_jsx(SentimentDissatisfiedTwoToneIcon, {\n                style: {\n                  fontSize: 40,\n                  color: 'red'\n                }\n              }), parseFloat(dadosMes[index].indSoma) === 0 && /*#__PURE__*/_jsx(SentimentSatisfiedIcon, {\n                style: {\n                  fontSize: 40,\n                  color: '#e65100'\n                }\n              })]\n            }), /*#__PURE__*/_jsxs(Box, {\n              m: 1,\n              ml: 3,\n              children: [/*#__PURE__*/_jsx(Typography, {\n                variant: \"body1\",\n                display: \"block\",\n                gutterBottom: true,\n                align: \"left\",\n                className: classes.caption,\n                children: (_items$igreja2 = items.igreja) !== null && _items$igreja2 !== void 0 ? _items$igreja2 : items.igreja\n              }), /*#__PURE__*/_jsxs(Typography, {\n                display: \"block\",\n                variant: \"body2\",\n                color: \"textSecondary\",\n                style: {\n                  marginRight: 30\n                },\n                children: [(Number(dadosMes[index].indSoma) >= 0 || Number(dadosMes[index].indSoma) <= 0) && 'Crescimento de ', (Number(dadosMes[index].indSoma) >= 0 || Number(dadosMes[index].indSoma) <= 0) && /*#__PURE__*/_jsxs(\"strong\", {\n                  style: {\n                    color: '#000'\n                  },\n                  children: [dadosMes[index].indSoma, \" %\"]\n                }), !(Number(dadosMes[index].indSoma) >= 0 || Number(dadosMes[index].indSoma) <= 0) && 'Não tem Relatório']\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(Divider, {})]\n        }, items.igreja);\n      })\n    }, data));\n  }\n\n  const largRotulo = windowWidth / 7 + 20;\n  const larg = (windowWidth - largRotulo) / 7;\n  const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n\n  const body = /*#__PURE__*/_jsxs(Box, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxs(StyledTableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsx(Box, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxs(\"strong\", {\n          children: [' ', igrejaSelecionada[0] && igrejaSelecionada[0].igreja]\n        })\n      }), /*#__PURE__*/_jsx(Box, {\n        align: \"center\",\n        mb: 2,\n        children: /*#__PURE__*/_jsxs(\"strong\", {\n          children: [\"Relat\\xF3rio Mes de \", meses[mes - 1]]\n        })\n      }), /*#__PURE__*/_jsxs(Table, {\n        style: {\n          tableLayout: 'auto'\n        },\n        children: [/*#__PURE__*/_jsx(TableHead, {\n          children: /*#__PURE__*/_jsxs(TableRow, {\n            children: [/*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              style: {\n                width: largRotulo,\n                backgroundColor: '#ffff8d'\n              },\n              children: \"Semana\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#448aff'\n              },\n              align: \"center\",\n              children: \"1\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#ffff8d'\n              },\n              align: \"center\",\n              children: \"2\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#448aff'\n              },\n              align: \"center\",\n              children: \"3\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#ffff8d'\n              },\n              align: \"center\",\n              children: \"4\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#448aff'\n              },\n              children: \"5\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              className: classes.tableCell,\n              style: {\n                width: larg,\n                backgroundColor: '#ffff8d'\n              },\n              children: \"MD\"\n            })]\n          }, \"id\")\n        }), /*#__PURE__*/_jsx(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxs(TableRow, {\n            style: {\n              width: larg,\n              backgroundColor: '#ffff8d'\n            },\n            height: 30,\n            children: [/*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              component: \"th\",\n              scope: \"row\",\n              children: /*#__PURE__*/_jsx(Box, {\n                style: {\n                  width: largRotulo,\n                  fontSize: '10px'\n                },\n                children: row.descricao\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              style: {\n                width: larg,\n                backgroundColor: '#448aff'\n              },\n              align: \"center\",\n              children: /*#__PURE__*/_jsx(Box, {\n                style: {\n                  width: larg,\n                  fontSize: '12px',\n                  height: '100%'\n                },\n                children: row.sem1\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#ffff8d'\n              },\n              children: /*#__PURE__*/_jsx(Box, {\n                variant: \"outlined\",\n                style: {\n                  width: larg,\n                  fontSize: '12px'\n                },\n                children: row.sem2\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#448aff'\n              },\n              children: /*#__PURE__*/_jsx(Box, {\n                variant: \"outlined\",\n                style: {\n                  width: larg,\n                  fontSize: '12px'\n                },\n                children: row.sem3\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#ffff8d'\n              },\n              children: /*#__PURE__*/_jsx(Box, {\n                variant: \"outlined\",\n                style: {\n                  width: larg,\n                  fontSize: '12px'\n                },\n                children: row.sem4\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#448aff'\n              },\n              children: /*#__PURE__*/_jsx(Box, {\n                variant: \"outlined\",\n                style: {\n                  width: larg,\n                  fontSize: '12px'\n                },\n                children: row.sem5\n              })\n            }), /*#__PURE__*/_jsx(StyledTableCell, {\n              align: \"center\",\n              style: {\n                backgroundColor: '#ffff8d'\n              },\n              children: /*#__PURE__*/_jsx(Box, {\n                variant: \"outlined\",\n                style: {\n                  width: larg,\n                  fontSize: '12px'\n                },\n                children: row.total\n              })\n            })]\n          }, row.descricao))\n        })]\n      }), /*#__PURE__*/_jsxs(Box, {\n        m: 2,\n        mt: 2,\n        children: [\"Oferta do M\\xEAs Atual: \", /*#__PURE__*/_jsxs(\"strong\", {\n          children: [\" R$ \", ofertaMes, \" \"]\n        })]\n      }), /*#__PURE__*/_jsxs(Box, {\n        m: 2,\n        mt: 2,\n        children: [\"Oferta do M\\xEAs Anterior: \", /*#__PURE__*/_jsxs(\"strong\", {\n          children: [\"R$ \", ofertaMesAnterior, \" \"]\n        })]\n      }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(Box, {\n        m: 2,\n        mt: 2,\n        children: [\"D\\xEDzimo do M\\xEAs Atual: \", /*#__PURE__*/_jsxs(\"strong\", {\n          children: [\" R$ \", dizimoMes, \" \"]\n        })]\n      }), /*#__PURE__*/_jsxs(Box, {\n        m: 2,\n        mt: 2,\n        children: [\"D\\xEDzimo do M\\xEAs Anterior: \", /*#__PURE__*/_jsxs(\"strong\", {\n          children: [\" R$ \", dizimoMesAnterior, \" \"]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Box, {\n      textAlign: \"center\",\n      mt: 2,\n      children: /*#__PURE__*/_jsx(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: '#448aff'\n        },\n        onClick: handleClose,\n        children: \"Fechar\"\n      })\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(Box, _objectSpread(_objectSpread({\n    borderRadius: 16\n  }, defaultProps), {}, {\n    ml: -3,\n    mr: -3,\n    children: [showIgrejas, /*#__PURE__*/_jsx(Modal, {\n      open: open,\n      onClose: handleClose,\n      className: classes.modal,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}