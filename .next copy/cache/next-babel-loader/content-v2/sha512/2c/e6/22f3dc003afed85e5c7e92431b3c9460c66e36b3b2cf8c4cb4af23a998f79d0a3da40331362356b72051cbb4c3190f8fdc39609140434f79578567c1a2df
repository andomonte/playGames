{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\fileList\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport { uniqueId } from 'lodash';\nimport api from 'src/components/services/api';\nimport { Container, FileInfo, Preview } from './styles';\nimport 'react-circular-progressbar/dist/styles.css';\n\nvar fileList = function fileList(_ref) {\n  _s();\n\n  var files = _ref.files,\n      arquivo = _ref.arquivo;\n\n  var newValue = _toConsumableArray(new Map(files.map(function (item) {\n    return [item.name, item];\n  })).values());\n\n  var _useState = useState([]),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(),\n      listFile = _useState2[0],\n      setListFile = _useState2[1];\n\n  var updateFile = function updateFile(id, data) {\n    setState(newValue.map(function (uploadedFile) {\n      return id === uploadedFile.id ? _objectSpread(_objectSpread({}, uploadedFile), data) : uploadedFile;\n    }));\n  };\n\n  var processUpload = function processUpload(uploadedFile) {\n    var data = new FormData();\n    data.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', data, {\n      onUploadProgress: function onUploadProgress(e) {\n        var progress = Math.round(e.loaded * 100 / e.total);\n        updateFile(uploadedFile.id, {\n          progress: progress\n        });\n      }\n    });\n  };\n\n  var iniciarEnvio = function iniciarEnvio() {\n    setListFile(listFile.map(function (uploadedFile) {\n      return arquivo.name === uploadedFile.name ? _objectSpread(_objectSpread({}, uploadedFile), data) : uploadedFile;\n    }));\n    console.log('arquivo:', arquivo);\n    newValue.forEach(processUpload);\n  };\n\n  useEffect(function () {\n    setListFile(function () {\n      return listFile.concat(files);\n    });\n    iniciarEnvio();\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: state.map(function (uploadedFile) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(FileInfo, {\n            children: [/*#__PURE__*/_jsxDEV(Preview, {\n              src: uploadedFile.preview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: uploadedFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [uploadedFile.readableSize, uploadedFile.url && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: function onClick() {},\n                  children: \"Excluir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [!uploadedFile.uploaded && !uploadedFile.error && /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              styles: {\n                root: {\n                  width: 30\n                },\n                path: {\n                  stroke: '#7159c1'\n                }\n              },\n              strokeWidth: 10 // percentage={20} // {uploadedFile.progress}\n              ,\n              value: uploadedFile.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, _this), uploadedFile.url && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(MdLink, {\n                styles: {\n                  marginRight: 8\n                },\n                size: 24,\n                color: \"#222\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, _this), uploadedFile.uploaded && /*#__PURE__*/_jsxDEV(MdCheckCircle, {\n              size: 24,\n              color: \"#78e5d5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, _this), uploadedFile.error && /*#__PURE__*/_jsxDEV(MdError, {\n              size: 24,\n              color: \"#e57878\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 38\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this)]\n        }, uniqueId(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(fileList, \"EsEHHIhJCq38JViDaYdssm275D0=\");\n\nexport default fileList;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/fileList/index.js"],"names":["React","useState","useEffect","CircularProgressbar","MdCheckCircle","MdError","MdLink","uniqueId","api","Container","FileInfo","Preview","fileList","files","arquivo","newValue","Map","map","item","name","values","state","setState","listFile","setListFile","updateFile","id","data","uploadedFile","processUpload","FormData","append","file","post","onUploadProgress","e","progress","Math","round","loaded","total","iniciarEnvio","console","log","forEach","concat","preview","readableSize","url","uploaded","error","root","width","path","stroke","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\r\nimport { uniqueId } from 'lodash';\r\nimport api from 'src/components/services/api';\r\n\r\nimport { Container, FileInfo, Preview } from './styles';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst fileList = ({ files, arquivo }) => {\r\n  const newValue = [\r\n    ...new Map(files.map((item) => [item.name, item])).values(),\r\n  ];\r\n  const [state, setState] = useState([]);\r\n  const [listFile, setListFile] = useState();\r\n  const updateFile = (id, data) => {\r\n    setState(\r\n      newValue.map((uploadedFile) =>\r\n        id === uploadedFile.id ? { ...uploadedFile, ...data } : uploadedFile,\r\n      ),\r\n    );\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const data = new FormData();\r\n    data.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api.post('api/fotos', data, {\r\n      onUploadProgress: (e) => {\r\n        const progress = Math.round((e.loaded * 100) / e.total);\r\n        updateFile(uploadedFile.id, { progress });\r\n      },\r\n    });\r\n  };\r\n  const iniciarEnvio = () => {\r\n    setListFile(\r\n      listFile.map((uploadedFile) =>\r\n        arquivo.name === uploadedFile.name\r\n          ? { ...uploadedFile, ...data }\r\n          : uploadedFile,\r\n      ),\r\n    );\r\n    console.log('arquivo:', arquivo);\r\n\r\n    newValue.forEach(processUpload);\r\n  };\r\n  useEffect(() => {\r\n    setListFile(() => listFile.concat(files));\r\n    iniciarEnvio();\r\n  }, [files]);\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {state.map((uploadedFile) => (\r\n          <li key={uniqueId()}>\r\n            <FileInfo>\r\n              <Preview src={uploadedFile.preview} />\r\n              <div>\r\n                <strong>{uploadedFile.name}</strong>\r\n                <span>\r\n                  {uploadedFile.readableSize}\r\n                  {uploadedFile.url && (\r\n                    <button type=\"button\" onClick={() => {}}>\r\n                      Excluir\r\n                    </button>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </FileInfo>\r\n            <div>\r\n              {!uploadedFile.uploaded && !uploadedFile.error && (\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: 30 },\r\n                    path: { stroke: '#7159c1' },\r\n                  }}\r\n                  strokeWidth={10}\r\n                  // percentage={20} // {uploadedFile.progress}\r\n                  value={uploadedFile.progress}\r\n                />\r\n              )}\r\n              {uploadedFile.url && (\r\n                <a\r\n                  href=\"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <MdLink styles={{ marginRight: 8 }} size={24} color=\"#222\" />\r\n                </a>\r\n              )}\r\n              {uploadedFile.uploaded && (\r\n                <MdCheckCircle size={24} color=\"#78e5d5\" />\r\n              )}\r\n              {uploadedFile.error && <MdError size={24} color=\"#e57878\" />}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default fileList;\r\n"]},"metadata":{},"sourceType":"module"}