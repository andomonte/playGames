{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\midiaPlay\\\\enviar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { signOut } from 'next-auth/client';\n\nimport { Box, Button, Modal } from '@material-ui/core';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport styled, { css } from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport { Container, FileInfo, Preview } from './styles';\nimport 'react-circular-progressbar/dist/styles.css'; // import FileList from '../../fileList/index';\n\nconst dragActive = css`\n  border-color: #76ff03;\n`;\nconst dragReject = css`\n  border-color: #ff5722;\n`;\nconst DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border: 3px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n\n  ${props => props.isDragActive && dragActive}\n  ${props => props.isDragReject && dragReject}\n`;\nconst UploadMessage = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: #000;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;\nconst useStyles = makeStyles(() => ({\n  boxUp: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  boxInterno: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '3px',\n    background: '#fff',\n    borderRadius: '4px',\n    padding: '20px'\n  },\n  qtyLetras: {\n    maxWidth: '150px',\n    // Limite maximo do texto\n    whitespace: 'nowrap',\n    // Removendo quebra de linha\n    overflow: 'hidden',\n    // Removendo a barra de rolagem\n    textoverflow: 'ellipsis' // Adicionando \"...\" ao final do texto\n\n  },\n  dragMessage: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '30px',\n    background: '#bcaaa4',\n    borderRadius: '4px',\n    padding: '20px'\n  }\n}));\n\nfunction enviar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const uploadedFiles = [];\n  const [fileObjects, setFileObjects] = React.useState([]);\n\n  const FileList = ({\n    files\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: files.map(uploadedFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FileInfo, {\n          children: [/*#__PURE__*/_jsxDEV(Preview, {\n            src: uploadedFile.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.qtyLetras,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: uploadedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [uploadedFile.readableSize, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {// console.log(uploadedFile.id);\n                },\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!uploadedFile.uploaded && !uploadedFile.error && /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            styles: {\n              root: {\n                width: 30\n              },\n              path: {\n                stroke: '#7159c1'\n              }\n            },\n            strokeWidth: 10 // percentage={20} // {uploadedFile.progress}\n            ,\n            value: uploadedFile.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), uploadedFile.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(MdLink, {\n              styles: {\n                marginRight: 8\n              },\n              size: 24,\n              color: \"#222\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), uploadedFile.uploaded && /*#__PURE__*/_jsxDEV(MdCheckCircle, {\n            size: 24,\n            color: \"#78e5d5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), uploadedFile.error && /*#__PURE__*/_jsxDEV(MdError, {\n            size: 24,\n            color: \"#e57878\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /* const handleOpen = () => {\r\n    setOpen(true);\r\n  }; */\n\n\n  const [send, setSend] = React.useState(false);\n\n  function MyDropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n      setFileObjects(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        id: uniqueId(),\n        readableSize: filesize(file.size),\n        progress: 0,\n        uploaded: false,\n        error: false,\n        url: null\n      })));\n      setFileObjects([].concat(fileObjects, acceptedFiles));\n    });\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    } = useDropzone({\n      onDrop,\n      accept: 'image/*'\n    });\n\n    const DragMessage = (a, b) => {\n      if (send) {\n        return /*#__PURE__*/_jsxDEV(UploadMessage, {\n          children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            style: {\n              color: '#76ff03',\n              fontSize: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (!a && !send) {\n        return /*#__PURE__*/_jsxDEV(UploadMessage, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(ImageSearchIcon, {\n              fontSize: \"large\",\n              style: {\n                color: 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), \"Pressione Aqui para Inseir Imagens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (b && !send) {\n        return /*#__PURE__*/_jsxDEV(UploadMessage, {\n          type: \"error\",\n          children: \"Arquivo n\\xE3o suportado..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"success\",\n        children: \"Solte os arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        children: () => /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps({\n          onClick: event => {\n            if (send) {\n              event.stopPropagation();\n            }\n          }\n        })), {}, {\n          isDragActive: isDragActive,\n          isDragReject: isDragReject,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), DragMessage(isDragActive, isDragReject)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), fileObjects.length > 0 && /*#__PURE__*/_jsxDEV(FileList, {\n        files: fileObjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MyDropzone, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 10\n  }, this);\n}\n\nexport default enviar;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/midiaPlay/enviar.js"],"names":["React","useCallback","makeStyles","Box","Button","Modal","Dropzone","useDropzone","styled","css","uniqueId","filesize","CircularProgressbar","MdCheckCircle","MdError","MdLink","ImageSearchIcon","Container","FileInfo","Preview","dragActive","dragReject","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","useStyles","boxUp","display","alignItems","justifyContent","height","boxInterno","width","maxWidth","margin","background","borderRadius","padding","qtyLetras","whitespace","overflow","textoverflow","dragMessage","enviar","classes","open","setOpen","useState","uploadedFiles","fileObjects","setFileObjects","FileList","files","map","uploadedFile","preview","name","readableSize","uploaded","error","root","path","stroke","progress","url","marginRight","handleClose","send","setSend","MyDropzone","onDrop","acceptedFiles","file","Object","assign","URL","createObjectURL","id","size","concat","getRootProps","getInputProps","accept","DragMessage","a","b","color","fontSize","onClick","event","stopPropagation","length"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { signOut } from 'next-auth/client';\r\nimport { Box, Button, Modal } from '@material-ui/core';\r\nimport Dropzone, { useDropzone } from 'react-dropzone';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport { Container, FileInfo, Preview } from './styles';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n// import FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: #000;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\nconst useStyles = makeStyles(() => ({\r\n  boxUp: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '3px',\r\n    background: '#fff',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  qtyLetras: {\r\n    maxWidth: '150px', // Limite maximo do texto\r\n    whitespace: 'nowrap', // Removendo quebra de linha\r\n    overflow: 'hidden', // Removendo a barra de rolagem\r\n    textoverflow: 'ellipsis', // Adicionando \"...\" ao final do texto\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nfunction enviar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const uploadedFiles = [];\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n  const FileList = ({ files }) => (\r\n    <div>\r\n      <Container>\r\n        {files.map((uploadedFile) => (\r\n          <li key={uniqueId()}>\r\n            <FileInfo>\r\n              <Preview src={uploadedFile.preview} />\r\n              <Box className={classes.qtyLetras}>\r\n                <strong>{uploadedFile.name}</strong>\r\n                <span>\r\n                  {uploadedFile.readableSize}\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      // console.log(uploadedFile.id);\r\n                    }}\r\n                  >\r\n                    Excluir\r\n                  </button>\r\n                </span>\r\n              </Box>\r\n            </FileInfo>\r\n            <div>\r\n              {!uploadedFile.uploaded && !uploadedFile.error && (\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: 30 },\r\n                    path: { stroke: '#7159c1' },\r\n                  }}\r\n                  strokeWidth={10}\r\n                  // percentage={20} // {uploadedFile.progress}\r\n\r\n                  value={uploadedFile.progress}\r\n                />\r\n              )}\r\n              {uploadedFile.url && (\r\n                <a\r\n                  href=\"https://sistemaidpb.s3.amazonaws.com/CAMPO%20GRANDE.png\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <MdLink styles={{ marginRight: 8 }} size={24} color=\"#222\" />\r\n                </a>\r\n              )}\r\n              {uploadedFile.uploaded && (\r\n                <MdCheckCircle size={24} color=\"#78e5d5\" />\r\n              )}\r\n              {uploadedFile.error && <MdError size={24} color=\"#e57878\" />}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  /* const handleOpen = () => {\r\n    setOpen(true);\r\n  }; */\r\n  const [send, setSend] = React.useState(false);\r\n\r\n  function MyDropzone() {\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n      setFileObjects(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n            id: uniqueId(),\r\n            readableSize: filesize(file.size),\r\n            progress: 0,\r\n            uploaded: false,\r\n            error: false,\r\n            url: null,\r\n          }),\r\n        ),\r\n      );\r\n      setFileObjects([].concat(fileObjects, acceptedFiles));\r\n    });\r\n\r\n    const {\r\n      getRootProps,\r\n      getInputProps,\r\n      isDragActive,\r\n      isDragReject,\r\n    } = useDropzone({\r\n      onDrop,\r\n\r\n      accept: 'image/*',\r\n    });\r\n\r\n    const DragMessage = (a, b) => {\r\n      if (send) {\r\n        return (\r\n          <UploadMessage>\r\n            <CheckCircleIcon style={{ color: '#76ff03', fontSize: 50 }} />\r\n          </UploadMessage>\r\n        );\r\n      }\r\n      if (!a && !send) {\r\n        return (\r\n          <UploadMessage>\r\n            <Button>\r\n              <ImageSearchIcon fontSize=\"large\" style={{ color: 'black' }} />\r\n            </Button>\r\n            Pressione Aqui para Inseir Imagens\r\n          </UploadMessage>\r\n        );\r\n      }\r\n      if (b && !send) {\r\n        return (\r\n          <UploadMessage type=\"error\">Arquivo não suportado..</UploadMessage>\r\n        );\r\n      }\r\n      return (\r\n        <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Dropzone>\r\n          {() => (\r\n            <DropContainer\r\n              {...getRootProps({\r\n                onClick: (event) => {\r\n                  if (send) {\r\n                    event.stopPropagation();\r\n                  }\r\n                },\r\n              })}\r\n              isDragActive={isDragActive}\r\n              isDragReject={isDragReject}\r\n            >\r\n              <input {...getInputProps()} />\r\n              {DragMessage(isDragActive, isDragReject)}\r\n            </DropContainer>\r\n          )}\r\n        </Dropzone>\r\n        {/* type: file.name.str.substr('.'), */}\r\n        {fileObjects.length > 0 && <FileList files={fileObjects} />}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <MyDropzone />;\r\n}\r\n\r\nexport default enviar;\r\n"]},"metadata":{},"sourceType":"module"}