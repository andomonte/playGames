{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\midiaPlay\\\\enviar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\nimport { Button, Box } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Theaters } from '@material-ui/icons';\nimport api from 'src/components/services/api';\nimport filesize from 'filesize';\n\nconst handlePreviewIcon = (fileObject, classes) => {\n  const iconProps = {\n    className: classes.image\n  };\n  return /*#__PURE__*/_jsxDEV(Theaters, _objectSpread({}, iconProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\nconst enviar = ({\n  item,\n  perfilUser\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [fileObjects, setFileObjects] = React.useState([]);\n\n  const dialogTitle = () => {\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Envio de V\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          right: '12px',\n          top: '8px',\n          position: 'absolute'\n        },\n        onClick: () => {\n          setOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n\n  const dataAtual = new Date();\n  const dia = dataAtual.getDate(); //= ======================================================================\n  // Carregar AWS s3 com as fotos\n  //= ======================================================================\n\n  let progresso = 0;\n\n  const updateFile = tempo => {\n    progresso = (tempo + progresso) / 500;\n  };\n\n  const processUpload = uploadedFile => {\n    const dataFile = new FormData();\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', dataFile, {\n      onUploadProgress: e => {\n        const progress = Math.round(e.loaded * 100 / e.total);\n        updateFile(progress);\n      }\n    }).then(response => {\n      if (response) console.log(response); //  updateFile(uploadedFile.id, { uploaded: true });\n    }).catch(() => {//  updateFile(uploadedFile.id, { error: true });\n    });\n  };\n\n  const iniciarEnvio = async e => {\n    const uploadedFiles = fileObjects.map(file => ({\n      file,\n      id: item[0].id,\n      name: `img${file.id}_${dia}_${item[0].codigoIgreja}`,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n    uploadedFiles.forEach(processUpload);\n    e.preventDefault();\n  }; //= ======================================================================\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: 100,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      align: \"center\",\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          setOpen(true);\n          setFileObjects([]);\n        },\n        children: \"+ Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), console.log(fileObjects.length), /*#__PURE__*/_jsxDEV(DropzoneDialogBase, {\n      dialogTitle: dialogTitle(),\n      acceptedFiles: ['video/*'],\n      fileObjects: fileObjects,\n      cancelButtonText: \"Cancel\",\n      submitButtonText: \"Enviar\",\n      maxFileSize: 5000000000,\n      open: open,\n      onAdd: newFileObjs => {\n        if (fileObjects.length === 0) {\n          console.log('onAdd', newFileObjs);\n          setFileObjects([].concat(fileObjects, newFileObjs));\n        }\n      },\n      onDelete: deleteFileObj => {\n        setFileObjects([]);\n        console.log('onDelete', deleteFileObj);\n      },\n      onClose: () => setOpen(false),\n      onSave: () => {\n        //  console.log('onSave', fileObjects);\n        // iniciarEnvio();\n        setFileObjects([]);\n        setOpen(false);\n      },\n      onCancel: () => {\n        //  console.log('onSave', fileObjects);\n        setFileObjects([]);\n        setOpen(false);\n      },\n      dropzoneText: \"Click AQUI para inserir Video\",\n      previewText: \"\",\n      showPreviews: true,\n      showFileNames: true,\n      getPreviewIcon: handlePreviewIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\nexport default enviar;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/midiaPlay/enviar.js"],"names":["React","DropzoneDialogBase","Button","Box","IconButton","CloseIcon","Theaters","api","filesize","handlePreviewIcon","fileObject","classes","iconProps","className","image","enviar","item","perfilUser","open","setOpen","useState","fileObjects","setFileObjects","dialogTitle","right","top","position","dataAtual","Date","dia","getDate","progresso","updateFile","tempo","processUpload","uploadedFile","dataFile","FormData","append","file","name","post","onUploadProgress","e","progress","Math","round","loaded","total","then","response","console","log","catch","iniciarEnvio","uploadedFiles","map","id","codigoIgreja","readableSize","size","preview","URL","createObjectURL","uploaded","error","url","forEach","preventDefault","length","newFileObjs","concat","deleteFileObj"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Theaters } from '@material-ui/icons';\r\nimport api from 'src/components/services/api';\r\nimport filesize from 'filesize';\r\n\r\nconst handlePreviewIcon = (fileObject, classes) => {\r\n  const iconProps = {\r\n    className: classes.image,\r\n  };\r\n\r\n  return <Theaters {...iconProps} />;\r\n};\r\nconst enviar = ({ item, perfilUser }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n\r\n  const dialogTitle = () => {\r\n    <>\r\n      <span>Envio de Vídeo</span>\r\n      <IconButton\r\n        style={{ right: '12px', top: '8px', position: 'absolute' }}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </>;\r\n  };\r\n  const dataAtual = new Date();\r\n  const dia = dataAtual.getDate();\r\n  //= ======================================================================\r\n  // Carregar AWS s3 com as fotos\r\n  //= ======================================================================\r\n  let progresso = 0;\r\n\r\n  const updateFile = (tempo) => {\r\n    progresso = (tempo + progresso) / 500;\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const dataFile = new FormData();\r\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api\r\n      .post('api/fotos', dataFile, {\r\n        onUploadProgress: (e) => {\r\n          const progress = Math.round((e.loaded * 100) / e.total);\r\n\r\n          updateFile(progress);\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response) console.log(response);\r\n        //  updateFile(uploadedFile.id, { uploaded: true });\r\n      })\r\n      .catch(() => {\r\n        //  updateFile(uploadedFile.id, { error: true });\r\n      });\r\n  };\r\n\r\n  const iniciarEnvio = async (e) => {\r\n    const uploadedFiles = fileObjects.map((file) => ({\r\n      file,\r\n      id: item[0].id,\r\n      name: `img${file.id}_${dia}_${item[0].codigoIgreja}`,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n    uploadedFiles.forEach(processUpload);\r\n\r\n    e.preventDefault();\r\n  };\r\n  //= ======================================================================\r\n\r\n  return (\r\n    <Box height={100}>\r\n      <Box align=\"center\" mt={20}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setFileObjects([]);\r\n          }}\r\n        >\r\n          + Imagem\r\n        </Button>\r\n      </Box>\r\n      {console.log(fileObjects.length)}\r\n\r\n      <DropzoneDialogBase\r\n        dialogTitle={dialogTitle()}\r\n        acceptedFiles={['video/*']}\r\n        fileObjects={fileObjects}\r\n        cancelButtonText=\"Cancel\"\r\n        submitButtonText=\"Enviar\"\r\n        maxFileSize={5000000000}\r\n        open={open}\r\n        onAdd={(newFileObjs) => {\r\n          if (fileObjects.length === 0) {\r\n            console.log('onAdd', newFileObjs);\r\n            setFileObjects([].concat(fileObjects, newFileObjs));\r\n          }\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          setFileObjects([]);\r\n          console.log('onDelete', deleteFileObj);\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        onSave={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          // iniciarEnvio();\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        onCancel={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        dropzoneText=\"Click AQUI para inserir Video\"\r\n        previewText=\"\"\r\n        showPreviews\r\n        showFileNames\r\n        getPreviewIcon={handlePreviewIcon}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default enviar;\r\n"]},"metadata":{},"sourceType":"module"}