{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\midiaPlay\\\\enviar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Theaters } from '@material-ui/icons';\n\nconst handlePreviewIcon = (fileObject, classes) => {\n  const iconProps = {\n    className: classes.image\n  };\n  return /*#__PURE__*/_jsxDEV(Theaters, _objectSpread({}, iconProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\nconst enviar = () => {\n  const [open, setOpen] = React.useState(false);\n  const [fileObjects, setFileObjects] = React.useState([]);\n\n  const dialogTitle = () => {\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Envio de V\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          right: '12px',\n          top: '8px',\n          position: 'absolute'\n        },\n        onClick: () => {\n          setOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n\n  const dataAtual = new Date();\n  console.log(dataAtual);\n  /* //= ======================================================================\r\n  // Carregar AWS s3 com as fotos\r\n  //= ======================================================================\r\n    const updateFile = (tempo) => {\r\n    progresso = (tempo + progresso) / 500;\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const dataFile = new FormData();\r\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\r\n      api\r\n      .post('api/fotos', dataFile, {\r\n        onUploadProgress: (e) => {\r\n          const progress = Math.round((e.loaded * 100) / e.total);\r\n            updateFile(progress);\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response) console.log(response);\r\n        //  updateFile(uploadedFile.id, { uploaded: true });\r\n      })\r\n      .catch(() => {\r\n        //  updateFile(uploadedFile.id, { error: true });\r\n      });\r\n  };\r\n    const iniciarEnvio = async (e) => {\r\n    const dataAtual = new Date();\r\n    console.log(dataAtual);\r\n    const uploadedFiles = fileObjects.map((file) => ({\r\n      file,\r\n      id: uniqueId(),\r\n      name: `img${file.id}_${dataEvento}_${\r\n        item[0].codigoIgreja\r\n      }${file.name.substring(file.name.lastIndexOf('.'))}`,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n    uploadedFiles.forEach(processUpload);\r\n      e.preventDefault();\r\n  };\r\n  //= ======================================================================\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        setOpen(true);\n        setFileObjects([]);\n      },\n      children: \"+ Imagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), console.log(fileObjects.length), /*#__PURE__*/_jsxDEV(DropzoneDialogBase, {\n      dialogTitle: dialogTitle(),\n      acceptedFiles: ['video/*'],\n      fileObjects: fileObjects,\n      cancelButtonText: \"Cancel\",\n      submitButtonText: \"Enviar\",\n      maxFileSize: 5000000000,\n      open: open,\n      onAdd: newFileObjs => {\n        if (fileObjects.length === 0) {\n          console.log('onAdd', newFileObjs);\n          setFileObjects([].concat(fileObjects, newFileObjs));\n        }\n      },\n      onDelete: deleteFileObj => {\n        setFileObjects([]);\n        console.log('onDelete', deleteFileObj);\n      },\n      onClose: () => setOpen(false),\n      onSave: () => {\n        //  console.log('onSave', fileObjects);\n        setFileObjects([]);\n        setOpen(false);\n      },\n      onCancel: () => {\n        //  console.log('onSave', fileObjects);\n        setFileObjects([]);\n        setOpen(false);\n      },\n      dropzoneText: \"Click AQUI para inserir Video\",\n      previewText: \"\",\n      showPreviews: true,\n      showFileNames: true,\n      getPreviewIcon: handlePreviewIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\nexport default enviar;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/midiaPlay/enviar.js"],"names":["React","DropzoneDialogBase","Button","IconButton","CloseIcon","Theaters","handlePreviewIcon","fileObject","classes","iconProps","className","image","enviar","open","setOpen","useState","fileObjects","setFileObjects","dialogTitle","right","top","position","dataAtual","Date","console","log","length","newFileObjs","concat","deleteFileObj"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Theaters } from '@material-ui/icons';\r\n\r\nconst handlePreviewIcon = (fileObject, classes) => {\r\n  const iconProps = {\r\n    className: classes.image,\r\n  };\r\n\r\n  return <Theaters {...iconProps} />;\r\n};\r\nconst enviar = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n\r\n  const dialogTitle = () => {\r\n    <>\r\n      <span>Envio de Vídeo</span>\r\n      <IconButton\r\n        style={{ right: '12px', top: '8px', position: 'absolute' }}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </>;\r\n  };\r\n  const dataAtual = new Date();\r\n  console.log(dataAtual);\r\n  /* //= ======================================================================\r\n  // Carregar AWS s3 com as fotos\r\n  //= ======================================================================\r\n\r\n  const updateFile = (tempo) => {\r\n    progresso = (tempo + progresso) / 500;\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const dataFile = new FormData();\r\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api\r\n      .post('api/fotos', dataFile, {\r\n        onUploadProgress: (e) => {\r\n          const progress = Math.round((e.loaded * 100) / e.total);\r\n\r\n          updateFile(progress);\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response) console.log(response);\r\n        //  updateFile(uploadedFile.id, { uploaded: true });\r\n      })\r\n      .catch(() => {\r\n        //  updateFile(uploadedFile.id, { error: true });\r\n      });\r\n  };\r\n\r\n  const iniciarEnvio = async (e) => {\r\n    const dataAtual = new Date();\r\n    console.log(dataAtual);\r\n    const uploadedFiles = fileObjects.map((file) => ({\r\n      file,\r\n      id: uniqueId(),\r\n      name: `img${file.id}_${dataEvento}_${\r\n        item[0].codigoIgreja\r\n      }${file.name.substring(file.name.lastIndexOf('.'))}`,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n    uploadedFiles.forEach(processUpload);\r\n\r\n    e.preventDefault();\r\n  };\r\n  //= ======================================================================\r\n */\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setFileObjects([]);\r\n        }}\r\n      >\r\n        + Imagem\r\n      </Button>\r\n      {console.log(fileObjects.length)}\r\n\r\n      <DropzoneDialogBase\r\n        dialogTitle={dialogTitle()}\r\n        acceptedFiles={['video/*']}\r\n        fileObjects={fileObjects}\r\n        cancelButtonText=\"Cancel\"\r\n        submitButtonText=\"Enviar\"\r\n        maxFileSize={5000000000}\r\n        open={open}\r\n        onAdd={(newFileObjs) => {\r\n          if (fileObjects.length === 0) {\r\n            console.log('onAdd', newFileObjs);\r\n            setFileObjects([].concat(fileObjects, newFileObjs));\r\n          }\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          setFileObjects([]);\r\n          console.log('onDelete', deleteFileObj);\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        onSave={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        onCancel={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        dropzoneText=\"Click AQUI para inserir Video\"\r\n        previewText=\"\"\r\n        showPreviews\r\n        showFileNames\r\n        getPreviewIcon={handlePreviewIcon}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default enviar;\r\n"]},"metadata":{},"sourceType":"module"}