{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\relatorios\\\\userTelas\\\\uploadFile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport styled, { css } from 'styled-components';\nimport { set, uniqueId } from 'lodash';\nimport filesize from 'filesize';\nimport api from 'src/components/services/api';\nimport { Button } from '@material-ui/core';\nimport FileList from '../../fileList/index';\nconst dragActive = css`\n  border-color: #76ff03;\n`;\nconst dragReject = css`\n  border-color: #ff5722;\n`;\nconst messageColors = {\n  default: '#fff',\n  error: '#ff5722',\n  success: '#76ff03'\n};\nconst DropContainer = styled.div.attrs({\n  className: 'dropzone'\n})`\n  border: 3px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n\n  ${props => props.isDragActive && dragActive}\n  ${props => props.isDragReject && dragReject}\n`;\nconst UploadMessage = styled.p`\n  display: flex;\n  color: ${props => messageColors[props.type || 'default']};\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n`;\n/* const useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n}; */\n\nfunction DropzoneComponent() {\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n  const {\n    0: lista,\n    1: setLista\n  } = useState(0);\n  const {\n    0: send,\n    1: setSend\n  } = useState(false);\n  let newValue = [];\n  let newList = [];\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file),\n      id: uniqueId()\n    }))); // setState(files);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n\n  const handleUpload = () => {\n    const uploadedFiles = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n\n    if (uploadedFiles) {\n      setState(old => [...old, ...uploadedFiles]); //     setState();\n      // console.log('state:', state);\n    }\n  };\n\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: file.preview,\n      alt: file.name,\n      height: 1,\n      width: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, file.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this));\n\n  const novoValor = novoArquivo => {\n    newValue = [...new Map(novoArquivo.map(item => [item.name, item])).values()]; // console.log('deu certo:', newValue);\n  }; //= =========================================================================\n\n\n  const updateFile = (id, data) => {\n    newList = newValue.map(uploadedFile => id === uploadedFile.id ? _objectSpread(_objectSpread({}, uploadedFile), data) : uploadedFile);\n    console.log('valor:', newList); // console.log('newlist', newList);\n  };\n\n  const processUpload = uploadedFile => {\n    const data = new FormData();\n    data.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', data, {\n      onUploadProgress: e => {\n        const progress = Math.round(e.loaded * 100 / e.total);\n        updateFile(uploadedFile.id, {\n          progress\n        });\n      }\n    });\n  };\n\n  const iniciarEnvio = () => {\n    setSend(true);\n    newValue.forEach(processUpload);\n    console.log('comeÃ§ou o envio dos dados');\n  };\n\n  useEffect(() => {\n    handleUpload();\n    setLista(lista + 1);\n    if (lista >= 5) setLista(0); // setLista(newList);\n    // iniciarEnvio();\n  }, [files]); //= =========================================================================\n  // clean up\n\n  const DragMessage = (a, b) => {\n    if (!a) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste arquivos aqui..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (b) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), DragMessage(isDragActive, isDragReject)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [!send ? novoValor(state) : novoValor(newList), newList.length > 0 && console.log('newList:', newList), newValue.length > 0 && /*#__PURE__*/_jsxDEV(FileList, {\n        files: newValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }, this), thumbs, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: iniciarEnvio,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: setSend(false),\n        children: \"Deletar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\nexport default DropzoneComponent;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/relatorios/userTelas/uploadFile.js"],"names":["React","useCallback","useState","useEffect","useDropzone","styled","css","set","uniqueId","filesize","api","Button","FileList","dragActive","dragReject","messageColors","default","error","success","DropContainer","div","attrs","className","props","isDragActive","isDragReject","UploadMessage","p","type","DropzoneComponent","files","setFiles","state","setState","lista","setLista","send","setSend","newValue","newList","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","id","getRootProps","getInputProps","accept","handleUpload","uploadedFiles","name","readableSize","size","progress","uploaded","url","old","thumbs","novoValor","novoArquivo","Map","item","values","updateFile","data","uploadedFile","console","log","processUpload","FormData","append","post","onUploadProgress","e","Math","round","loaded","total","iniciarEnvio","forEach","DragMessage","a","b","length"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,QAA9B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,UAAU,GAAGP,GAAI;AACvB;AACA,CAFA;AAGA,MAAMQ,UAAU,GAAGR,GAAI;AACvB;AACA,CAFA;AAGA,MAAMS,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,MADW;AAEpBC,EAAAA,KAAK,EAAE,SAFa;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;AAMA,MAAMC,aAAa,GAAGd,MAAM,CAACe,GAAP,CAAWC,KAAX,CAAiB;AACrCC,EAAAA,SAAS,EAAE;AAD0B,CAAjB,CAEnB;AACH;AACA;AACA;AACA;AACA;AACA,IAAKC,KAAD,IAAWA,KAAK,CAACC,YAAN,IAAsBX,UAAW;AAChD,IAAKU,KAAD,IAAWA,KAAK,CAACE,YAAN,IAAsBX,UAAW;AAChD,CAVA;AAWA,MAAMY,aAAa,GAAGrB,MAAM,CAACsB,CAAE;AAC/B;AACA,WAAYJ,KAAD,IAAWR,aAAa,CAACQ,KAAK,CAACK,IAAN,IAAc,SAAf,CAA0B;AAC7D;AACA;AACA;AACA,CANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAC8B,KAAD;AAAA,OAAQC;AAAR,MAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACgC,KAAD;AAAA,OAAQC;AAAR,MAAoBjC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACkC,IAAD;AAAA,OAAOC;AAAP,MAAkBnC,QAAQ,CAAC,KAAD,CAAhC;AAEA,MAAIoC,QAAQ,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMC,MAAM,GAAGvC,WAAW,CAAEwC,aAAD,IAAmB;AAC5CV,IAAAA,QAAQ,CACNU,aAAa,CAACC,GAAd,CAAmBC,IAAD,IAChBC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAClBG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CADS;AAElBM,MAAAA,EAAE,EAAEzC,QAAQ;AAFM,KAApB,CADF,CADM,CAAR,CAD4C,CAS5C;AACD,GAVyB,EAUvB,EAVuB,CAA1B;AAYA,QAAM;AAAE0C,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+B3B,IAAAA,YAA/B;AAA6CC,IAAAA;AAA7C,MACJrB,WAAW,CAAC;AACVoC,IAAAA,MADU;AAEVY,IAAAA,MAAM,EAAE;AAFE,GAAD,CADb;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,aAAa,GAAGxB,KAAK,CAACY,GAAN,CAAWC,IAAD,KAAW;AACzCA,MAAAA,IADyC;AAEzCM,MAAAA,EAAE,EAAEzC,QAAQ,EAF6B;AAGzC+C,MAAAA,IAAI,EAAEZ,IAAI,CAACY,IAH8B;AAIzCC,MAAAA,YAAY,EAAE/C,QAAQ,CAACkC,IAAI,CAACc,IAAN,CAJmB;AAKzCX,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CALgC;AAMzCe,MAAAA,QAAQ,EAAE,CAN+B;AAOzCC,MAAAA,QAAQ,EAAE,KAP+B;AAQzC1C,MAAAA,KAAK,EAAE,KARkC;AASzC2C,MAAAA,GAAG,EAAE;AAToC,KAAX,CAAV,CAAtB;;AAYA,QAAIN,aAAJ,EAAmB;AACjBrB,MAAAA,QAAQ,CAAE4B,GAAD,IAAS,CAAC,GAAGA,GAAJ,EAAS,GAAGP,aAAZ,CAAV,CAAR,CADiB,CAEjB;AACA;AACD;AACF,GAlBD;;AAmBA,QAAMQ,MAAM,GAAGhC,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACvB;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACG,OAAf;AAAwB,MAAA,GAAG,EAAEH,IAAI,CAACY,IAAlC;AAAwC,MAAA,MAAM,EAAE,CAAhD;AAAmD,MAAA,KAAK,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA;AADF,KAAUZ,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;;AAKA,QAAMc,SAAS,GAAIC,WAAD,IAAiB;AACjC1B,IAAAA,QAAQ,GAAG,CACT,GAAG,IAAI2B,GAAJ,CAAQD,WAAW,CAACtB,GAAZ,CAAiBwB,IAAD,IAAU,CAACA,IAAI,CAACX,IAAN,EAAYW,IAAZ,CAA1B,CAAR,EAAsDC,MAAtD,EADM,CAAX,CADiC,CAIjC;AACD,GALD,CAlD2B,CAyD3B;;;AACA,QAAMC,UAAU,GAAG,CAACnB,EAAD,EAAKoB,IAAL,KAAc;AAC/B9B,IAAAA,OAAO,GAAGD,QAAQ,CAACI,GAAT,CAAc4B,YAAD,IACrBrB,EAAE,KAAKqB,YAAY,CAACrB,EAApB,mCAA8BqB,YAA9B,GAA+CD,IAA/C,IAAwDC,YADhD,CAAV;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBjC,OAAtB,EAL+B,CAM/B;AACD,GAPD;;AASA,QAAMkC,aAAa,GAAIH,YAAD,IAAkB;AACtC,UAAMD,IAAI,GAAG,IAAIK,QAAJ,EAAb;AACAL,IAAAA,IAAI,CAACM,MAAL,CAAY,MAAZ,EAAoBL,YAAY,CAAC3B,IAAjC,EAAuC2B,YAAY,CAACf,IAApD;AAEA7C,IAAAA,GAAG,CAACkE,IAAJ,CAAS,WAAT,EAAsBP,IAAtB,EAA4B;AAC1BQ,MAAAA,gBAAgB,EAAGC,CAAD,IAAO;AACvB,cAAMpB,QAAQ,GAAGqB,IAAI,CAACC,KAAL,CAAYF,CAAC,CAACG,MAAF,GAAW,GAAZ,GAAmBH,CAAC,CAACI,KAAhC,CAAjB;AACAd,QAAAA,UAAU,CAACE,YAAY,CAACrB,EAAd,EAAkB;AAAES,UAAAA;AAAF,SAAlB,CAAV;AACD;AAJyB,KAA5B;AAMD,GAVD;;AAYA,QAAMyB,YAAY,GAAG,MAAM;AACzB9C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC8C,OAAT,CAAiBX,aAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,GAJD;;AAMArE,EAAAA,SAAS,CAAC,MAAM;AACdkD,IAAAA,YAAY;AACZlB,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,QAAIA,KAAK,IAAI,CAAb,EAAgBC,QAAQ,CAAC,CAAD,CAAR,CAHF,CAId;AACA;AACD,GANQ,EAMN,CAACL,KAAD,CANM,CAAT,CArF2B,CA6F3B;AAEA;;AACA,QAAMuD,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5B,QAAI,CAACD,CAAL,EAAQ;AACN,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIC,CAAJ,EAAO;AACL,0BACE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AACD,wBACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAZD;;AAaA,sBACE;AAAA,4BACE,QAAC,aAAD,kCACMrC,YAAY,EADlB;AAEE,MAAA,YAAY,EAAE1B,YAFhB;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAAA,8BAKE,mCAAW0B,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA,cALF,EAMGkC,WAAW,CAAC7D,YAAD,EAAeC,YAAf,CANd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,iBACG,CAACW,IAAD,GAAQ2B,SAAS,CAAC/B,KAAD,CAAjB,GAA2B+B,SAAS,CAACxB,OAAD,CADvC,EAEGA,OAAO,CAACiD,MAAR,GAAiB,CAAjB,IAAsBjB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjC,OAAxB,CAFzB,EAGGD,QAAQ,CAACkD,MAAT,GAAkB,CAAlB,iBAAuB,QAAC,QAAD;AAAU,QAAA,KAAK,EAAElD;AAAjB;AAAA;AAAA;AAAA;AAAA,cAH1B,EAIGwB,MAJH,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEqB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE9C,OAAO,CAAC,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;AAED,eAAeR,iBAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport styled, { css } from 'styled-components';\r\nimport { set, uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\nimport api from 'src/components/services/api';\r\nimport { Button } from '@material-ui/core';\r\nimport FileList from '../../fileList/index';\r\n\r\nconst dragActive = css`\r\n  border-color: #76ff03;\r\n`;\r\nconst dragReject = css`\r\n  border-color: #ff5722;\r\n`;\r\nconst messageColors = {\r\n  default: '#fff',\r\n  error: '#ff5722',\r\n  success: '#76ff03',\r\n};\r\n\r\nconst DropContainer = styled.div.attrs({\r\n  className: 'dropzone',\r\n})`\r\n  border: 3px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n\r\n  ${(props) => props.isDragActive && dragActive}\r\n  ${(props) => props.isDragReject && dragReject}\r\n`;\r\nconst UploadMessage = styled.p`\r\n  display: flex;\r\n  color: ${(props) => messageColors[props.type || 'default']};\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\n/* const useStyles = makeStyles(() => ({\r\n  box: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  boxInterno: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n  dragMessage: {\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '30px',\r\n    background: '#bcaaa4',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n  },\r\n}));\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n}; */\r\n\r\nfunction DropzoneComponent() {\r\n  const [files, setFiles] = useState([]);\r\n  const [state, setState] = useState([]);\r\n  const [lista, setLista] = useState(0);\r\n  const [send, setSend] = useState(false);\r\n\r\n  let newValue = [];\r\n  let newList = [];\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n          id: uniqueId(),\r\n        }),\r\n      ),\r\n    );\r\n    // setState(files);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\r\n    useDropzone({\r\n      onDrop,\r\n      accept: 'image/jpeg, image/png',\r\n    });\r\n\r\n  const handleUpload = () => {\r\n    const uploadedFiles = files.map((file) => ({\r\n      file,\r\n      id: uniqueId(),\r\n      name: file.name,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n\r\n    if (uploadedFiles) {\r\n      setState((old) => [...old, ...uploadedFiles]);\r\n      //     setState();\r\n      // console.log('state:', state);\r\n    }\r\n  };\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.id}>\r\n      <img src={file.preview} alt={file.name} height={1} width={1} />\r\n    </div>\r\n  ));\r\n  const novoValor = (novoArquivo) => {\r\n    newValue = [\r\n      ...new Map(novoArquivo.map((item) => [item.name, item])).values(),\r\n    ];\r\n    // console.log('deu certo:', newValue);\r\n  };\r\n\r\n  //= =========================================================================\r\n  const updateFile = (id, data) => {\r\n    newList = newValue.map((uploadedFile) =>\r\n      id === uploadedFile.id ? { ...uploadedFile, ...data } : uploadedFile,\r\n    );\r\n\r\n    console.log('valor:', newList);\r\n    // console.log('newlist', newList);\r\n  };\r\n\r\n  const processUpload = (uploadedFile) => {\r\n    const data = new FormData();\r\n    data.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api.post('api/fotos', data, {\r\n      onUploadProgress: (e) => {\r\n        const progress = Math.round((e.loaded * 100) / e.total);\r\n        updateFile(uploadedFile.id, { progress });\r\n      },\r\n    });\r\n  };\r\n\r\n  const iniciarEnvio = () => {\r\n    setSend(true);\r\n    newValue.forEach(processUpload);\r\n    console.log('comeÃ§ou o envio dos dados');\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleUpload();\r\n    setLista(lista + 1);\r\n    if (lista >= 5) setLista(0);\r\n    // setLista(newList);\r\n    // iniciarEnvio();\r\n  }, [files]);\r\n\r\n  //= =========================================================================\r\n\r\n  // clean up\r\n  const DragMessage = (a, b) => {\r\n    if (!a) {\r\n      return <UploadMessage>Arraste arquivos aqui..</UploadMessage>;\r\n    }\r\n    if (b) {\r\n      return (\r\n        <UploadMessage type=\"error\">Arquivo nÃ£o suportado..</UploadMessage>\r\n      );\r\n    }\r\n    return (\r\n      <UploadMessage type=\"success\">Solte os arquivos aqui..</UploadMessage>\r\n    );\r\n  };\r\n  return (\r\n    <section>\r\n      <DropContainer\r\n        {...getRootProps()}\r\n        isDragActive={isDragActive}\r\n        isDragReject={isDragReject}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {DragMessage(isDragActive, isDragReject)}\r\n      </DropContainer>\r\n      <aside>\r\n        {!send ? novoValor(state) : novoValor(newList)}\r\n        {newList.length > 0 && console.log('newList:', newList)}\r\n        {newValue.length > 0 && <FileList files={newValue} />}\r\n        {thumbs}\r\n        <Button onClick={iniciarEnvio}>Enviar</Button>\r\n        <Button onClick={setSend(false)}>Deletar</Button>\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DropzoneComponent;\r\n"]},"metadata":{},"sourceType":"module"}