{"ast":null,"code":"import _slicedToArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { signIn } from 'next-auth/client';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nvar handleLogin = function handleLogin() {\n  signIn('credentials', {\n    email: email,\n    password: password,\n    // The page where you want to redirect to after a\n    // successful login\n    callbackUrl: \"\".concat(window.location.origin, \"/account_page\")\n  });\n};\n\nexport default function Login() {\n  _s();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loginError = _React$useState6[0],\n      setLoginError = _React$useState6[1];\n\n  var router = useRouter();\n  React.useEffect(function () {\n    // Getting the error details from URL\n    if (router.query.error) {\n      setLoginError(router.query.error); // Shown below the input field in my example\n\n      setEmail(router.query.email); // To prefill the email after redirect\n    }\n  }, [router]);\n}\n\n_s(Login, \"AN9akSGv4uA5ws9iBKP/8DTQRGY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/login.js"],"names":["signIn","useRouter","React","handleLogin","email","password","callbackUrl","window","location","origin","Login","useState","setEmail","setPassword","loginError","setLoginError","router","useEffect","query","error"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,EAAAA,MAAM,CAAC,aAAD,EAAgB;AACpBI,IAAAA,KAAK,EAALA,KADoB;AAEpBC,IAAAA,QAAQ,EAARA,QAFoB;AAGpB;AACA;AACAC,IAAAA,WAAW,YAAKC,MAAM,CAACC,QAAP,CAAgBC,MAArB;AALS,GAAhB,CAAN;AAOD,CARD;;AASA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,wBACJR,KAAK,CAACS,QAAN,CAAe,EAAf,CADI;AAAA;AAAA,MACvBP,KADuB;AAAA,MAChBQ,QADgB;;AAAA,yBAEEV,KAAK,CAACS,QAAN,CAAe,EAAf,CAFF;AAAA;AAAA,MAEvBN,QAFuB;AAAA,MAEbQ,WAFa;;AAAA,yBAGMX,KAAK,CAACS,QAAN,CAAe,EAAf,CAHN;AAAA;AAAA,MAGvBG,UAHuB;AAAA,MAGXC,aAHW;;AAI9B,MAAMC,MAAM,GAAGf,SAAS,EAAxB;AAEAC,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AACpB;AACA,QAAID,MAAM,CAACE,KAAP,CAAaC,KAAjB,EAAwB;AACtBJ,MAAAA,aAAa,CAACC,MAAM,CAACE,KAAP,CAAaC,KAAd,CAAb,CADsB,CACa;;AACnCP,MAAAA,QAAQ,CAACI,MAAM,CAACE,KAAP,CAAad,KAAd,CAAR,CAFsB,CAEQ;AAC/B;AACF,GAND,EAMG,CAACY,MAAD,CANH;AAOD;;GAbuBN,K;UAIPT,S;;;KAJOS,K","sourcesContent":["import { signIn } from 'next-auth/client';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nconst handleLogin = () => {\n  signIn('credentials', {\n    email,\n    password,\n    // The page where you want to redirect to after a\n    // successful login\n    callbackUrl: `${window.location.origin}/account_page`,\n  });\n};\nexport default function Login() {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [loginError, setLoginError] = React.useState('');\n  const router = useRouter();\n\n  React.useEffect(() => {\n    // Getting the error details from URL\n    if (router.query.error) {\n      setLoginError(router.query.error); // Shown below the input field in my example\n      setEmail(router.query.email); // To prefill the email after redirect\n    }\n  }, [router]);\n}\n"]},"metadata":{},"sourceType":"module"}