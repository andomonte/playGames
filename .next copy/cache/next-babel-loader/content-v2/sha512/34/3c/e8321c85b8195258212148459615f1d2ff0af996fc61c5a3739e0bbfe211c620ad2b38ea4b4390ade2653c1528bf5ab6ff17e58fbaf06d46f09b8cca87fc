{"ast":null,"code":"import NextAuth from 'next-auth';\nimport Providers from 'next-auth/providers'; // const data = getUsuarios();\n// Configure one or more authentication providers\n\nconst usuarios = [{\n  email: 'andomonte@gmail.com',\n  nivel: 'master'\n}];\nconst options = {\n  providers: [// ...add more providers here\n  Providers.Google({\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth?prompt=consent&access_type=offline&response_type=code'\n  })],\n  callbacks: {\n    async signIn(user, account, profile) {\n      //      const dados = await prisma.Usuarios({ loginUsuario: user });\n      // if (!data) return <div>loading...</div>;\n      //   return <div>hello {data.name}!</div>;\n      const dados = usuarios.reduce(() => profile.email);\n      const email = dados;\n      console.log(dados);\n\n      if (account.provider === 'google' && profile.verified_email === true && profile.email.endsWith(email)) {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n  session: {\n    jwt: true\n  },\n  jwt: {\n    secret: process.env.JWT_SECRET\n  } // A database is optional, but required to persist accounts in a database\n  // database: process.env.DATABASE_URL,\n\n};\nexport default ((req, res) => NextAuth(req, res, options));","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","usuarios","email","nivel","options","providers","Google","clientId","process","env","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","authorizationUrl","callbacks","signIn","user","account","profile","dados","reduce","console","log","provider","verified_email","endsWith","session","jwt","secret","JWT_SECRET","req","res"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,qBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADe,CAAjB;AAMA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,CACT;AACAL,EAAAA,SAAS,CAACM,MAAV,CAAiB;AACfC,IAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADP;AAEfC,IAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFX;AAGfC,IAAAA,gBAAgB,EACd;AAJa,GAAjB,CAFS,CADG;AAUdC,EAAAA,SAAS,EAAE;AACT,UAAMC,MAAN,CAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqC;AACnC;AAEA;AACA;AAEA,YAAMC,KAAK,GAAGlB,QAAQ,CAACmB,MAAT,CAAgB,MAAMF,OAAO,CAAChB,KAA9B,CAAd;AACA,YAAMA,KAAK,GAAGiB,KAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UACEF,OAAO,CAACM,QAAR,KAAqB,QAArB,IACAL,OAAO,CAACM,cAAR,KAA2B,IAD3B,IAEAN,OAAO,CAAChB,KAAR,CAAcuB,QAAd,CAAuBvB,KAAvB,CAHF,EAIE;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;AAlBQ,GAVG;AA8BdwB,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GA9BK;AAiCdA,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAEpB,OAAO,CAACC,GAAR,CAAYoB;AADjB,GAjCS,CAoCd;AACA;;AArCc,CAAhB;AAwCA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAchC,QAAQ,CAAC+B,GAAD,EAAMC,GAAN,EAAW3B,OAAX,CAArC","sourcesContent":["import NextAuth from 'next-auth';\r\nimport Providers from 'next-auth/providers';\r\n\r\n// const data = getUsuarios();\r\n// Configure one or more authentication providers\r\nconst usuarios = [\r\n  {\r\n    email: 'andomonte@gmail.com',\r\n    nivel: 'master',\r\n  },\r\n];\r\nconst options = {\r\n  providers: [\r\n    // ...add more providers here\r\n    Providers.Google({\r\n      clientId: process.env.GOOGLE_CLIENT_ID,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\r\n      authorizationUrl:\r\n        'https://accounts.google.com/o/oauth2/v2/auth?prompt=consent&access_type=offline&response_type=code',\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async signIn(user, account, profile) {\r\n      //      const dados = await prisma.Usuarios({ loginUsuario: user });\r\n\r\n      // if (!data) return <div>loading...</div>;\r\n      //   return <div>hello {data.name}!</div>;\r\n\r\n      const dados = usuarios.reduce(() => profile.email);\r\n      const email = dados;\r\n      console.log(dados);\r\n      if (\r\n        account.provider === 'google' &&\r\n        profile.verified_email === true &&\r\n        profile.email.endsWith(email)\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n  session: {\r\n    jwt: true,\r\n  },\r\n  jwt: {\r\n    secret: process.env.JWT_SECRET,\r\n  },\r\n  // A database is optional, but required to persist accounts in a database\r\n  // database: process.env.DATABASE_URL,\r\n};\r\n\r\nexport default (req, res) => NextAuth(req, res, options);\r\n"]},"metadata":{},"sourceType":"module"}