{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// Display posts in frontend (in /pages/index.tsx)\nimport React from 'react';\nimport useSWR from 'swr';\nimport fetch from 'unfetch';\nimport { Box, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FuzzySearch from 'fuzzy-search'; // Or: var FuzzySearch = require('fuzzy-search');\n\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip'; // dica ao passar o mouse\n\nimport SearchList from './searchList';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    input_Box: _defineProperty({\n      marginLeft: 18,\n      marginRight: 18,\n      marginTop: 4\n    }, theme.breakpoints.down('md'), {\n      marginLeft: 4,\n      marginRight: 4,\n      marginTop: 4\n    }),\n    popover: {\n      pointerEvents: 'none'\n    },\n    paper: {\n      padding: theme.spacing(1)\n    },\n    search: _defineProperty({\n      // backgroundColor: '#fafafa',\n      padding: '4px 4px',\n      display: 'flex',\n      // alignItems: 'center',\n      height: 45,\n      width: '100%',\n      borderRadius: 16,\n      marginLeft: 100,\n      maxWidth: 900,\n      marginBottom: 0\n    }, theme.breakpoints.down('md'), {\n      width: '100%',\n      marginLeft: 4,\n      marginTop: 4,\n      marginBottom: 5\n    }),\n    input: {\n      flex: 1,\n      padding: 10,\n      borderRadius: 16\n    },\n    imgSearch: _defineProperty({\n      display: 'flex',\n      alignItems: 'center',\n      height: '40%',\n      width: '15%',\n      marginLeft: '40%',\n      marginBottom: 20,\n      justifyContent: 'center'\n    }, theme.breakpoints.down('md'), {\n      width: '20%',\n      marginLeft: '40%',\n      marginTop: 4\n    })\n  };\n});\n\nfunction Igreja(query) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      querys = _React$useState2[0],\n      updateQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      valor = _React$useState4[0],\n      setValor = _React$useState4[1];\n\n  var handleChange = function handleChange(_ref) {\n    var currentTarget = _ref.currentTarget;\n    setValor(currentTarget.value);\n  };\n\n  var handlePress = function handlePress(e) {\n    if (e.key === 'Enter' && e.target.value !== '') {\n      updateQuery(e.target.value); // write your functionality here\n    }\n\n    if (e.target.value === '') {\n      updateQuery(null);\n    }\n  };\n\n  var handleClick = function handleClick() {\n    if (valor === '') {\n      updateQuery(null);\n    } else {\n      updateQuery(valor);\n    }\n  }; //= para procurar os dados  ==========================================\n\n\n  var searcher = new FuzzySearch(query, ['igreja', 'logradouro'], {\n    caseSensitive: false\n  });\n  var result = searcher.search(query);\n  if (query === 'error') return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Erro ao acessar o Banco.\"\n  });\n  if (!query) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Carregando ...\"\n  }); //= =================================================================\n\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.input_box,\n    children: [/*#__PURE__*/_jsx(Grid, {\n      container: true,\n      mb: 4,\n      children: /*#__PURE__*/_jsxs(Box, {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          className: classes.imgSearch,\n          src: \"images/IDPBNAC.png\",\n          alt: \"IDPB\"\n        }), /*#__PURE__*/_jsx(TextField, {\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Pesquisar Igreja\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                style: {\n                  color: '#304ffe'\n                },\n                type: \"button\",\n                \"aria-label\": \"search\",\n                onClick: handleClick,\n                children: /*#__PURE__*/_jsx(SearchIcon, {})\n              })\n            })\n          },\n          className: classes.search,\n          id: \"field1\",\n          name: \"password\",\n          autoComplete: \"off\",\n          type: \"text\",\n          value: valor,\n          variant: \"outlined\",\n          placeholder: \"Pesquisar Igreja\",\n          onChange: handleChange // onKeyPress={handlePress}\n          ,\n          onKeyPress: handlePress\n        })]\n      })\n    }), result.map(function (item) {\n      return /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xl: 12,\n        className: classes.dados,\n        children: /*#__PURE__*/_jsx(SearchList, {\n          item: item\n        })\n      }, item.id);\n    })]\n  });\n}\n\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var fetcher, _useSWR, data, error, query;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // pega o valor do banco de dados\n            fetcher = function fetcher(url) {\n              return fetch(url).then(function (r) {\n                return r.json();\n              });\n            };\n\n            _useSWR = useSWR('/api/consultaDados', fetcher), data = _useSWR.data, error = _useSWR.error;\n            query = data;\n\n            if (error) {\n              query = 'error';\n            }\n\n            return _context.abrupt(\"return\", {\n              props: {\n                query: JSON.parse(JSON.stringify(query))\n              },\n              // will be passed to the page component as props\n              revalidate: 15 // faz atualizar a pagina de 15 em 15 segundo sem fazer build\n\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default Igreja;","map":null,"metadata":{},"sourceType":"module"}