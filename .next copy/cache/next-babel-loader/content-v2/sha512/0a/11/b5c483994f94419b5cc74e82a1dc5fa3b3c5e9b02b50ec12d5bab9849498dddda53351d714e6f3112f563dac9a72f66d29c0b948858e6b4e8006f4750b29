{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\pages\\\\userPerfil.js\";\nimport React from 'react';\nimport { Perfil } from 'src/components/perfil/index';\nimport { useSession } from 'next-auth/client'; // import { PrismaClient } from '@prisma/client';\n\nimport prisma from 'src/lib/prisma';\nimport { Convenção } from 'src/components/convencao/index';\n\nfunction userPerfil({\n  org,\n  ministros,\n  igrejas\n}) {\n  const [session] = useSession();\n  let secao = [{\n    email: ''\n  }]; // console.log(org, 'organização');\n\n  if (session) {\n    secao = org.filter(val => val.email === session.user.email); //\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [secao[0].NivelUser, \"?(\", secao[0].NivelUser === 'ministro' ? /*#__PURE__*/_jsxDEV(Perfil, {\n        item: org,\n        title: \"SISTEMA-IDPB\",\n        ministros: ministros,\n        igrejas: igrejas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : null, secao[0].NivelUser === 'convenção' ? /*#__PURE__*/_jsxDEV(Convenção, {\n        item: org,\n        title: \"SISTEMA-IDPB\",\n        ministros: ministros,\n        igrejas: igrejas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : null, \"):null}\"]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [' ', \"IDPB - Pregando a palavra no poder do Esp\\xEDrito Santo\", ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getStaticProps = async () => {\n  // pega o valor do banco de dados\n  const posts = await prisma.user.findMany();\n  const ministros = await prisma.ministrosIDPBs.findMany();\n  const igrejas = await prisma.igrejas.findMany();\n  return {\n    props: {\n      org: JSON.parse(JSON.stringify(posts)),\n      ministros: JSON.parse(JSON.stringify(ministros)),\n      igrejas: JSON.parse(JSON.stringify(igrejas))\n    },\n    // will be passed to the page component as props\n    revalidate: 15 // faz atualizar a pagina de 15 em 15 segundo sem fazer build\n\n  };\n};\nexport default userPerfil;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/userPerfil.js"],"names":["React","Perfil","useSession","prisma","Convenção","userPerfil","org","ministros","igrejas","session","secao","email","filter","val","user","NivelUser","alignItems","justifyContent","getStaticProps","posts","findMany","ministrosIDPBs","props","JSON","parse","stringify","revalidate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA;AAAlB,CAApB,EAAiD;AAC/C,QAAM,CAACC,OAAD,IAAYP,UAAU,EAA5B;AACA,MAAIQ,KAAK,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAZ,CAF+C,CAG/C;;AACA,MAAIF,OAAJ,EAAa;AACXC,IAAAA,KAAK,GAAGJ,GAAG,CAACM,MAAJ,CAAYC,GAAD,IAASA,GAAG,CAACF,KAAJ,KAAcF,OAAO,CAACK,IAAR,CAAaH,KAA/C,CAAR,CADW,CAGX;;AAEA,wBACE;AAAA,iBACCD,KAAK,CAAC,CAAD,CAAL,CAASK,SADV,QAEGL,KAAK,CAAC,CAAD,CAAL,CAASK,SAAT,KAAuB,UAAvB,gBACC,QAAC,MAAD;AACE,QAAA,IAAI,EAAET,GADR;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,cADD,GAOG,IATN,EAUGE,KAAK,CAAC,CAAD,CAAL,CAASK,SAAT,KAAuB,WAAvB,gBACC,QAAC,SAAD;AACE,QAAA,IAAI,EAAET,GADR;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,cADD,GAOG,IAjBN;AAAA,oBADF;AAqBD;;AACD,sBACE;AAAI,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,cAAc,EAAE;AAAxC,KAAX;AAAA,eACG,GADH,6DAEuD,GAFvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AAEA,QAAMC,KAAK,GAAG,MAAMhB,MAAM,CAACW,IAAP,CAAYM,QAAZ,EAApB;AACA,QAAMb,SAAS,GAAG,MAAMJ,MAAM,CAACkB,cAAP,CAAsBD,QAAtB,EAAxB;AACA,QAAMZ,OAAO,GAAG,MAAML,MAAM,CAACK,OAAP,CAAeY,QAAf,EAAtB;AACA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLhB,MAAAA,GAAG,EAAEiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CADA;AAELZ,MAAAA,SAAS,EAAEgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAelB,SAAf,CAAX,CAFN;AAGLC,MAAAA,OAAO,EAAEe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAejB,OAAf,CAAX;AAHJ,KADF;AAKF;AACHkB,IAAAA,UAAU,EAAE,EANP,CAMW;;AANX,GAAP;AAQD,CAdM;AAgBP,eAAerB,UAAf","sourcesContent":["import React from 'react';\r\nimport { Perfil } from 'src/components/perfil/index';\r\nimport { useSession } from 'next-auth/client';\r\n// import { PrismaClient } from '@prisma/client';\r\nimport prisma from 'src/lib/prisma';\r\n\r\nimport { Convenção } from 'src/components/convencao/index';\r\n\r\nfunction userPerfil({ org, ministros, igrejas }) {\r\n  const [session] = useSession();\r\n  let secao = [{ email: '' }];\r\n  // console.log(org, 'organização');\r\n  if (session) {\r\n    secao = org.filter((val) => val.email === session.user.email);\r\n\r\n    //\r\n\r\n    return (\r\n      <>\r\n      {secao[0].NivelUser}?(\r\n        {secao[0].NivelUser === 'ministro' ? (\r\n          <Perfil\r\n            item={org}\r\n            title=\"SISTEMA-IDPB\"\r\n            ministros={ministros}\r\n            igrejas={igrejas}\r\n          />\r\n        ) : null}\r\n        {secao[0].NivelUser === 'convenção' ? (\r\n          <Convenção\r\n            item={org}\r\n            title=\"SISTEMA-IDPB\"\r\n            ministros={ministros}\r\n            igrejas={igrejas}\r\n          />\r\n        ) : null}):null}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <h4 style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n      {' '}\r\n      IDPB - Pregando a palavra no poder do Espírito Santo{' '}\r\n    </h4>\r\n  );\r\n}\r\n\r\nexport const getStaticProps = async () => {\r\n  // pega o valor do banco de dados\r\n\r\n  const posts = await prisma.user.findMany();\r\n  const ministros = await prisma.ministrosIDPBs.findMany();\r\n  const igrejas = await prisma.igrejas.findMany();\r\n  return {\r\n    props: {\r\n      org: JSON.parse(JSON.stringify(posts)),\r\n      ministros: JSON.parse(JSON.stringify(ministros)),\r\n      igrejas: JSON.parse(JSON.stringify(igrejas)),\r\n    }, // will be passed to the page component as props\r\n    revalidate: 15, // faz atualizar a pagina de 15 em 15 segundo sem fazer build\r\n  };\r\n};\r\n\r\nexport default userPerfil;\r\n"]},"metadata":{},"sourceType":"module"}