{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport prisma from 'src/lib/prisma'; // POST /api/user\n// Required fields in body: name, email\n\nexport default async function handle(req, res) {\n  const result = await prisma.relatorios.create({\n    data: _objectSpread({}, req.body)\n  });\n  console.log(result);\n  res.json(result);\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/pages/api/criarRelatorio.js"],"names":["prisma","handle","req","res","result","relatorios","create","data","body","console","log","json"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,gBAAnB,C,CAEA;AACA;;AACA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,MAAM,GAAG,MAAMJ,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAAyB;AAC5CC,IAAAA,IAAI,oBACCL,GAAG,CAACM,IADL;AADwC,GAAzB,CAArB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAD,EAAAA,GAAG,CAACQ,IAAJ,CAASP,MAAT;AACD","sourcesContent":["import prisma from 'src/lib/prisma';\r\n\r\n// POST /api/user\r\n// Required fields in body: name, email\r\nexport default async function handle(req, res) {\r\n  const result = await prisma.relatorios.create({\r\n    data: {\r\n      ...req.body,\r\n    },\r\n  });\r\n  console.log(result);\r\n  res.json(result);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}