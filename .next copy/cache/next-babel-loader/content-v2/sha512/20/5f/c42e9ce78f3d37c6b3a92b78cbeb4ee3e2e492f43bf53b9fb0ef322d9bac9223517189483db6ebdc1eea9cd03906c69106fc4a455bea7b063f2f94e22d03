{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n// import excutQuery from 'src/utils/mysql';\nvar _require = require('@prisma/client'),\n    PrismaClient = _require.PrismaClient;\n\nvar prisma = new PrismaClient();\n\nfunction main(_x) {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var table, allUsers;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            table = _ref.table;\n            _context2.next = 3;\n            return fetch(\"prisma.\".concat(table, \".findMany()\"));\n\n          case 3:\n            allUsers = _context2.sent;\n            return _context2.abrupt(\"return\", allUsers);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain()[\"catch\"](function (e) {\n  throw e;\n})[\"finally\"]( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return prisma.$disconnect();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport default main;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/database/getTable.js"],"names":["require","PrismaClient","prisma","main","table","fetch","allUsers","e","$disconnect"],"mappings":";;;AAAA;eACyBA,OAAO,CAAC,gBAAD,C;IAAxBC,Y,YAAAA,Y;;AAER,IAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;;SACeE,I;;;;;mEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,YAAAA,KAAtB,QAAsBA,KAAtB;AAAA;AAAA,mBAEyBC,KAAK,kBAAWD,KAAX,iBAF9B;;AAAA;AAEQE,YAAAA,QAFR;AAAA,8CAGSA,QAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKAH,IAAI,WAAJ,CACS,UAACI,CAAD,EAAO;AACZ,QAAMA,CAAN;AACD,CAHH,oFAIW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACDL,MAAM,CAACM,WAAP,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAJX;AAQA,eAAeL,IAAf","sourcesContent":["// import excutQuery from 'src/utils/mysql';\r\nconst { PrismaClient } = require('@prisma/client');\r\n\r\nconst prisma = new PrismaClient();\r\nasync function main({ table }) {\r\n  // ... you will write your Prisma Client queries here\r\n  const allUsers = await fetch(`prisma.${table}.findMany()`);\r\n  return allUsers;\r\n}\r\nmain()\r\n  .catch((e) => {\r\n    throw e;\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}