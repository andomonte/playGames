{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\Layout\\\\googleMap.js\";\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction googleMaps() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: process.env.GOOGLE_CLIENT_ID,\n    googleMapsApiKey: process.env.GOOGLE_CLIENT_SECRET\n  });\n  const [mapa, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(mapas => {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\nexport default /*#__PURE__*/React.memo(googleMaps);","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/Layout/googleMap.js"],"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","googleMaps","isLoaded","id","process","env","GOOGLE_CLIENT_ID","googleMapsApiKey","GOOGLE_CLIENT_SECRET","mapa","setMap","useState","onLoad","useCallback","map","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapas","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,SAASC,UAAT,GAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeR,cAAc,CAAC;AAClCS,IAAAA,EAAE,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADkB;AAElCC,IAAAA,gBAAgB,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFI,GAAD,CAAnC;AAKA,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiBlB,KAAK,CAACmB,QAAN,CAAe,IAAf,CAAvB;AAEA,QAAMC,MAAM,GAAGpB,KAAK,CAACqB,WAAN,CAAmBC,GAAD,IAAS;AACxC,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAL,IAAAA,GAAG,CAACM,SAAJ,CAAcL,MAAd;AACAL,IAAAA,MAAM,CAACI,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMO,SAAS,GAAG7B,KAAK,CAACqB,WAAN,CAAmBS,KAAD,IAAW;AAC7CZ,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOR,QAAQ,gBACb,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAEP,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEc,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA,2BAQE;AARF;AAAA;AAAA;AAAA;AAAA,UADa,gBAYb,qCAZF;AAcD;;AAED,4BAAe7B,KAAK,CAAC+B,IAAN,CAAWtB,UAAX,CAAf","sourcesContent":["import React from 'react';\r\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '400px',\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523,\r\n};\r\n\r\nfunction googleMaps() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: process.env.GOOGLE_CLIENT_ID,\r\n    googleMapsApiKey: process.env.GOOGLE_CLIENT_SECRET,\r\n  });\r\n\r\n  const [mapa, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback((map) => {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback((mapas) => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      {/* Child components, such as markers, info windows, etc. */}\r\n      <></>\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(googleMaps);\r\n"]},"metadata":{},"sourceType":"module"}