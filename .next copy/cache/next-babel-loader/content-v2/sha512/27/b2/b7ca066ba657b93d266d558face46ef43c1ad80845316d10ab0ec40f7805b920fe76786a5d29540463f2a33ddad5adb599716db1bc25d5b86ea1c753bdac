{"ast":null,"code":"import aws from 'aws-sdk';\nimport multer from 'multer';\nimport multerS3 from 'multer-s3';\nimport crypto from 'crypto';\naws.config.update({\n  secretAccessKey: process.env.AWSSECRET_KEY,\n  accessKeyId: process.env.AWSACCESS_KEY,\n  region: process.env.AWSREGION\n});\nconst s3 = new aws.S3({\n  /* ... */\n});\nconst upload = multer({\n  storage: multerS3({\n    s3,\n    bucket: process.env.AWSBUCKET,\n    acl: 'public-read',\n    contentType: multerS3.AUTO_CONTENT_TYPE,\n\n    metadata(req, file, cb) {\n      cb(null, {\n        fieldName: file.fieldname\n      });\n    },\n\n    key(req, file, cb) {\n      crypto.randomBytes(16, (err, hash) => {\n        if (err) cb(err);\n        const fileName = `${hash.toString('hex')}-${file.originalname}`;\n        cb(null, fileName);\n      });\n    }\n\n  })\n});\nexport default upload;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/upload.js"],"names":["aws","multer","multerS3","crypto","config","update","secretAccessKey","process","env","AWSSECRET_KEY","accessKeyId","AWSACCESS_KEY","region","AWSREGION","s3","S3","upload","storage","bucket","AWSBUCKET","acl","contentType","AUTO_CONTENT_TYPE","metadata","req","file","cb","fieldName","fieldname","key","randomBytes","err","hash","fileName","toString","originalname"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,SAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEAH,GAAG,CAACI,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,EAAAA,eAAe,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADb;AAEhBC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG,aAFT;AAGhBC,EAAAA,MAAM,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHJ,CAAlB;AAMA,MAAMC,EAAE,GAAG,IAAId,GAAG,CAACe,EAAR,CAAW;AACpB;AADoB,CAAX,CAAX;AAIA,MAAMC,MAAM,GAAGf,MAAM,CAAC;AACpBgB,EAAAA,OAAO,EAAEf,QAAQ,CAAC;AAChBY,IAAAA,EADgB;AAEhBI,IAAAA,MAAM,EAAEX,OAAO,CAACC,GAAR,CAAYW,SAFJ;AAGhBC,IAAAA,GAAG,EAAE,aAHW;AAIhBC,IAAAA,WAAW,EAAEnB,QAAQ,CAACoB,iBAJN;;AAKhBC,IAAAA,QAAQ,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAgB;AACtBA,MAAAA,EAAE,CAAC,IAAD,EAAO;AAAEC,QAAAA,SAAS,EAAEF,IAAI,CAACG;AAAlB,OAAP,CAAF;AACD,KAPe;;AAQhBC,IAAAA,GAAG,CAACL,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAgB;AACjBvB,MAAAA,MAAM,CAAC2B,WAAP,CAAmB,EAAnB,EAAuB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACpC,YAAID,GAAJ,EAASL,EAAE,CAACK,GAAD,CAAF;AAET,cAAME,QAAQ,GAAI,GAAED,IAAI,CAACE,QAAL,CAAc,KAAd,CAAqB,IAAGT,IAAI,CAACU,YAAa,EAA9D;AAEAT,QAAAA,EAAE,CAAC,IAAD,EAAOO,QAAP,CAAF;AACD,OAND;AAOD;;AAhBe,GAAD;AADG,CAAD,CAArB;AAqBA,eAAejB,MAAf","sourcesContent":["import aws from 'aws-sdk';\r\nimport multer from 'multer';\r\nimport multerS3 from 'multer-s3';\r\nimport crypto from 'crypto';\r\n\r\naws.config.update({\r\n  secretAccessKey: process.env.AWSSECRET_KEY,\r\n  accessKeyId: process.env.AWSACCESS_KEY,\r\n  region: process.env.AWSREGION,\r\n});\r\n\r\nconst s3 = new aws.S3({\r\n  /* ... */\r\n});\r\n\r\nconst upload = multer({\r\n  storage: multerS3({\r\n    s3,\r\n    bucket: process.env.AWSBUCKET,\r\n    acl: 'public-read',\r\n    contentType: multerS3.AUTO_CONTENT_TYPE,\r\n    metadata(req, file, cb) {\r\n      cb(null, { fieldName: file.fieldname });\r\n    },\r\n    key(req, file, cb) {\r\n      crypto.randomBytes(16, (err, hash) => {\r\n        if (err) cb(err);\r\n\r\n        const fileName = `${hash.toString('hex')}-${file.originalname}`;\r\n\r\n        cb(null, fileName);\r\n      });\r\n    },\r\n  }),\r\n});\r\n\r\nexport default upload;\r\n"]},"metadata":{},"sourceType":"module"}