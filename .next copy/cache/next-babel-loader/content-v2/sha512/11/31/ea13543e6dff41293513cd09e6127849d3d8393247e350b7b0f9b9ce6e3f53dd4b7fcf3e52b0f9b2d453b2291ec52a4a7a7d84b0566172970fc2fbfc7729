{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import excutQuery from 'src/utils/mysql';\nimport PrismaClient from '@prisma/client';\nvar prisma = new PrismaClient();\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain()[\"catch\"](function (e) {\n  throw e;\n})[\"finally\"]( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return prisma.$disconnect();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport default function getDadosBd(_ref2) {\n  var table = _ref2.table;\n  var dados = \"\".concat(table, \"ddd\");\n  return dados;\n}","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/database/getTable.js"],"names":["PrismaClient","prisma","main","e","$disconnect","getDadosBd","table","dados"],"mappings":";;AAAA;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;;SACeE,I;;;;;mEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAGAA,IAAI,WAAJ,CACS,UAACC,CAAD,EAAO;AACZ,QAAMA,CAAN;AACD,CAHH,oFAIW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACDF,MAAM,CAACG,WAAP,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAJX;AAOA,eAAe,SAASC,UAAT,QAA+B;AAAA,MAATC,KAAS,SAATA,KAAS;AAC5C,MAAMC,KAAK,aAAMD,KAAN,QAAX;AACA,SAAOC,KAAP;AACD","sourcesContent":["// import excutQuery from 'src/utils/mysql';\r\nimport PrismaClient from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\nasync function main() {\r\n  // ... you will write your Prisma Client queries here\r\n}\r\nmain()\r\n  .catch((e) => {\r\n    throw e;\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\nexport default function getDadosBd({ table }) {\r\n  const dados = `${table}ddd`;\r\n  return dados;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}