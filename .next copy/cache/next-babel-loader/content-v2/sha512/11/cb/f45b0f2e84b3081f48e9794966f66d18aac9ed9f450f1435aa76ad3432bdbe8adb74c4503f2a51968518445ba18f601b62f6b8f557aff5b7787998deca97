{"ast":null,"code":"import React, { useState } from 'react';\nimport AWS from 'aws-sdk';\n\nconst downloadImg = () => {\n  AWS.config.update({\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\n    secretAccessKey: process.env.REACT_APP_ACCESS_KEY\n  });\n\n  const handleClick = e => {\n    e.preventDefault();\n  };\n\n  const handleDownload = () => {\n    console.log('testando');\n    const s3 = new AWS.S3();\n    const params = {\n      Bucket: process.env.REACT_APP_INTERNAL_BUCKET_NAME,\n      Key: `ARACAJU.png`\n    };\n\n    function downloadBlob(blob, name = `ARACAJU.png`) {\n      // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n      const blobUrl = URL.createObjectURL(blob); // Create a link element\n\n      const link = document.createElement('a'); // Set link's href to point to the Blob URL\n\n      link.href = blobUrl;\n      link.download = name; // Append link to the body\n\n      document.body.appendChild(link); // Dispatch click event on the link\n      // This is necessary as link.click() does not work on the latest firefox\n\n      link.dispatchEvent(new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n      })); // Remove link from body\n\n      document.body.removeChild(link);\n    }\n\n    s3.getObject(params, (err, data) => {\n      if (err) {\n        console.log(err, err.stack);\n      } else {\n        const csvBlob = new Blob([data.Body.toString()], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        downloadBlob(csvBlob, `ARACAJU.png`);\n      }\n    });\n  };\n\n  handleDownload;\n};\n\nexport default downloadImg;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/utils/downloadImage.js"],"names":["React","useState","AWS","downloadImg","config","update","accessKeyId","process","env","REACT_APP_ACCESS_ID","secretAccessKey","REACT_APP_ACCESS_KEY","handleClick","e","preventDefault","handleDownload","console","log","s3","S3","params","Bucket","REACT_APP_INTERNAL_BUCKET_NAME","Key","downloadBlob","blob","name","blobUrl","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","getObject","err","data","stack","csvBlob","Blob","Body","toString","type"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxBD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,IAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBADT;AAEhBC,IAAAA,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFb,GAAlB;;AAKA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMC,EAAE,GAAG,IAAIhB,GAAG,CAACiB,EAAR,EAAX;AAEA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAEd,OAAO,CAACC,GAAR,CAAYc,8BADP;AAEbC,MAAAA,GAAG,EAAG;AAFO,KAAf;;AAKA,aAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAAI,GAAI,aAApC,EAAkD;AAChD;AACA,YAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAhB,CAFgD,CAGhD;;AACA,YAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb,CAJgD,CAKhD;;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAYN,OAAZ;AACAG,MAAAA,IAAI,CAACI,QAAL,GAAgBR,IAAhB,CAPgD,CAQhD;;AACAK,MAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B,EATgD,CAUhD;AACA;;AACAA,MAAAA,IAAI,CAACO,aAAL,CACE,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AACtBC,QAAAA,OAAO,EAAE,IADa;AAEtBC,QAAAA,UAAU,EAAE,IAFU;AAGtBC,QAAAA,IAAI,EAAEC;AAHgB,OAAxB,CADF,EAZgD,CAoBhD;;AACAX,MAAAA,QAAQ,CAACI,IAAT,CAAcQ,WAAd,CAA0Bb,IAA1B;AACD;;AAEDZ,IAAAA,EAAE,CAAC0B,SAAH,CAAaxB,MAAb,EAAqB,CAACyB,GAAD,EAAMC,IAAN,KAAe;AAClC,UAAID,GAAJ,EAAS;AACP7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ,EAAiBA,GAAG,CAACE,KAArB;AACD,OAFD,MAEO;AACL,cAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACH,IAAI,CAACI,IAAL,CAAUC,QAAV,EAAD,CAAT,EAAiC;AAC/CC,UAAAA,IAAI,EAAE;AADyC,SAAjC,CAAhB;AAGA5B,QAAAA,YAAY,CAACwB,OAAD,EAAW,aAAX,CAAZ;AACD;AACF,KATD;AAUD,GA3CD;;AA6CAjC,EAAAA,cAAc;AACf,CAxDD;;AA0DA,eAAeZ,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AWS from 'aws-sdk';\r\n\r\nconst downloadImg = () => {\r\n  AWS.config.update({\r\n    accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n    secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n  });\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    console.log('testando');\r\n    const s3 = new AWS.S3();\r\n\r\n    const params = {\r\n      Bucket: process.env.REACT_APP_INTERNAL_BUCKET_NAME,\r\n      Key: `ARACAJU.png`,\r\n    };\r\n\r\n    function downloadBlob(blob, name = `ARACAJU.png`) {\r\n      // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\r\n      const blobUrl = URL.createObjectURL(blob);\r\n      // Create a link element\r\n      const link = document.createElement('a');\r\n      // Set link's href to point to the Blob URL\r\n      link.href = blobUrl;\r\n      link.download = name;\r\n      // Append link to the body\r\n      document.body.appendChild(link);\r\n      // Dispatch click event on the link\r\n      // This is necessary as link.click() does not work on the latest firefox\r\n      link.dispatchEvent(\r\n        new MouseEvent('click', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: window,\r\n        }),\r\n      );\r\n\r\n      // Remove link from body\r\n      document.body.removeChild(link);\r\n    }\r\n\r\n    s3.getObject(params, (err, data) => {\r\n      if (err) {\r\n        console.log(err, err.stack);\r\n      } else {\r\n        const csvBlob = new Blob([data.Body.toString()], {\r\n          type: 'text/csv;charset=utf-8;',\r\n        });\r\n        downloadBlob(csvBlob, `ARACAJU.png`);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDownload;\r\n};\r\n\r\nexport default downloadImg;\r\n"]},"metadata":{},"sourceType":"module"}