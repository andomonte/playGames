{"ast":null,"code":"import _regeneratorRuntime from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"E:/src/next/sistemas/idpb-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\src\\\\next\\\\sistemas\\\\idpb-app\\\\src\\\\components\\\\midiaPlay\\\\enviar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\nimport { Button, Box } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Theaters } from '@material-ui/icons';\nimport api from 'src/components/services/api';\nimport filesize from 'filesize';\n\nvar handlePreviewIcon = function handlePreviewIcon(fileObject, classes) {\n  var iconProps = {\n    className: classes.image\n  };\n  return /*#__PURE__*/_jsxDEV(Theaters, _objectSpread({}, iconProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, _this);\n};\n\nvar enviar = function enviar(_ref) {\n  _s();\n\n  var item = _ref.item,\n      perfilUser = _ref.perfilUser;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fileObjects = _React$useState4[0],\n      setFileObjects = _React$useState4[1];\n\n  var dialogTitle = function dialogTitle() {\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Envio de V\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          right: '12px',\n          top: '8px',\n          position: 'absolute'\n        },\n        onClick: function onClick() {\n          setOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var dataAtual = new Date();\n  var dia = dataAtual.getDate(); //= ======================================================================\n  // Carregar AWS s3 com as fotos\n  //= ======================================================================\n\n  var progresso = 0;\n\n  var updateFile = function updateFile(tempo) {\n    progresso = (tempo + progresso) / 500;\n  };\n\n  var processUpload = function processUpload(uploadedFile) {\n    var dataFile = new FormData();\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('api/fotos', dataFile, {\n      onUploadProgress: function onUploadProgress(e) {\n        var progress = Math.round(e.loaded * 100 / e.total);\n        updateFile(progress);\n      }\n    }).then(function (response) {\n      if (response) console.log(response); //  updateFile(uploadedFile.id, { uploaded: true });\n    })[\"catch\"](function () {//  updateFile(uploadedFile.id, { error: true });\n    });\n  };\n\n  var iniciarEnvio = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var uploadedFiles;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uploadedFiles = fileObjects.map(function (file) {\n                return {\n                  file: file,\n                  id: item[0].id,\n                  name: \"img\".concat(file.id, \"_\").concat(dia, \"_\").concat(item[0].codigoIgreja),\n                  readableSize: filesize(file.size),\n                  preview: URL.createObjectURL(file),\n                  progress: 0,\n                  uploaded: false,\n                  error: false,\n                  url: null\n                };\n              });\n              uploadedFiles.forEach(processUpload);\n              e.preventDefault();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function iniciarEnvio(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //= ======================================================================\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 100,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      align: \"center\",\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          setOpen(true);\n          setFileObjects([]);\n        },\n        children: \"+ Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), console.log(fileObjects.length), /*#__PURE__*/_jsxDEV(DropzoneDialogBase, {\n      dialogTitle: dialogTitle(),\n      acceptedFiles: ['video/*'],\n      fileObjects: fileObjects,\n      cancelButtonText: \"Cancel\",\n      submitButtonText: \"Enviar\",\n      maxFileSize: 5000000000,\n      open: open,\n      onAdd: function onAdd(newFileObjs) {\n        if (fileObjects.length === 0) {\n          console.log('onAdd', newFileObjs);\n          setFileObjects([].concat(fileObjects, newFileObjs));\n        }\n      },\n      onDelete: function onDelete(deleteFileObj) {\n        setFileObjects([]);\n        console.log('onDelete', deleteFileObj);\n      },\n      onClose: function onClose() {\n        return setOpen(false);\n      },\n      onSave: function onSave() {\n        //  console.log('onSave', fileObjects);\n        // iniciarEnvio();\n        setFileObjects([]);\n        setOpen(false);\n      },\n      onCancel: function onCancel() {\n        //  console.log('onSave', fileObjects);\n        setFileObjects([]);\n        setOpen(false);\n      },\n      dropzoneText: \"Click AQUI para inserir Video\",\n      previewText: \"\",\n      showPreviews: true,\n      showFileNames: true,\n      getPreviewIcon: handlePreviewIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(enviar, \"jdavY70jIM0MwmPoWJitfgOkMM4=\");\n\nexport default enviar;","map":{"version":3,"sources":["E:/src/next/sistemas/idpb-app/src/components/midiaPlay/enviar.js"],"names":["React","DropzoneDialogBase","Button","Box","IconButton","CloseIcon","Theaters","api","filesize","handlePreviewIcon","fileObject","classes","iconProps","className","image","enviar","item","perfilUser","useState","open","setOpen","fileObjects","setFileObjects","dialogTitle","right","top","position","dataAtual","Date","dia","getDate","progresso","updateFile","tempo","processUpload","uploadedFile","dataFile","FormData","append","file","name","post","onUploadProgress","e","progress","Math","round","loaded","total","then","response","console","log","iniciarEnvio","uploadedFiles","map","id","codigoIgreja","readableSize","size","preview","URL","createObjectURL","uploaded","error","url","forEach","preventDefault","length","newFileObjs","concat","deleteFileObj"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { DropzoneDialogBase } from 'material-ui-dropzone';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Theaters } from '@material-ui/icons';\r\nimport api from 'src/components/services/api';\r\nimport filesize from 'filesize';\r\n\r\nconst handlePreviewIcon = (fileObject, classes) => {\r\n  const iconProps = {\r\n    className: classes.image,\r\n  };\r\n\r\n  return <Theaters {...iconProps} />;\r\n};\r\nconst enviar = ({ item, perfilUser }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n\r\n  const dialogTitle = () => {\r\n    <>\r\n      <span>Envio de Vídeo</span>\r\n      <IconButton\r\n        style={{ right: '12px', top: '8px', position: 'absolute' }}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </>;\r\n  };\r\n  const dataAtual = new Date();\r\n  const dia = dataAtual.getDate();\r\n  //= ======================================================================\r\n  // Carregar AWS s3 com as fotos\r\n  //= ======================================================================\r\n  let progresso = 0;\r\n\r\n  const updateFile = (tempo) => {\r\n    progresso = (tempo + progresso) / 500;\r\n  };\r\n  const processUpload = (uploadedFile) => {\r\n    const dataFile = new FormData();\r\n    dataFile.append('file', uploadedFile.file, uploadedFile.name);\r\n\r\n    api\r\n      .post('api/fotos', dataFile, {\r\n        onUploadProgress: (e) => {\r\n          const progress = Math.round((e.loaded * 100) / e.total);\r\n\r\n          updateFile(progress);\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response) console.log(response);\r\n        //  updateFile(uploadedFile.id, { uploaded: true });\r\n      })\r\n      .catch(() => {\r\n        //  updateFile(uploadedFile.id, { error: true });\r\n      });\r\n  };\r\n\r\n  const iniciarEnvio = async (e) => {\r\n    const uploadedFiles = fileObjects.map((file) => ({\r\n      file,\r\n      id: item[0].id,\r\n      name: `img${file.id}_${dia}_${item[0].codigoIgreja}`,\r\n      readableSize: filesize(file.size),\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      uploaded: false,\r\n      error: false,\r\n      url: null,\r\n    }));\r\n    uploadedFiles.forEach(processUpload);\r\n\r\n    e.preventDefault();\r\n  };\r\n  //= ======================================================================\r\n\r\n  return (\r\n    <Box width={100}>\r\n      <Box align=\"center\" mt={20}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setFileObjects([]);\r\n          }}\r\n        >\r\n          + Imagem\r\n        </Button>\r\n      </Box>\r\n      {console.log(fileObjects.length)}\r\n\r\n      <DropzoneDialogBase\r\n        dialogTitle={dialogTitle()}\r\n        acceptedFiles={['video/*']}\r\n        fileObjects={fileObjects}\r\n        cancelButtonText=\"Cancel\"\r\n        submitButtonText=\"Enviar\"\r\n        maxFileSize={5000000000}\r\n        open={open}\r\n        onAdd={(newFileObjs) => {\r\n          if (fileObjects.length === 0) {\r\n            console.log('onAdd', newFileObjs);\r\n            setFileObjects([].concat(fileObjects, newFileObjs));\r\n          }\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          setFileObjects([]);\r\n          console.log('onDelete', deleteFileObj);\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        onSave={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          // iniciarEnvio();\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        onCancel={() => {\r\n          //  console.log('onSave', fileObjects);\r\n          setFileObjects([]);\r\n          setOpen(false);\r\n        }}\r\n        dropzoneText=\"Click AQUI para inserir Video\"\r\n        previewText=\"\"\r\n        showPreviews\r\n        showFileNames\r\n        getPreviewIcon={handlePreviewIcon}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default enviar;\r\n"]},"metadata":{},"sourceType":"module"}